{"version":3,"sources":["./youbora/webpack/universalModuleDefinition","./youbora/playkit-youbora.js","./youbora/webpack/bootstrap c16478375ab889dba712","./youbora/../node_modules/youboralib/src/log.js","./youbora/../node_modules/youboralib/src/object.js","./youbora/../node_modules/youboralib/src/util.js","./youbora/../node_modules/youboralib/src/constants.js","./youbora/../node_modules/youboralib/src/emitter.js","./youbora/../node_modules/youboralib/src/comm/request.js","./youbora/../node_modules/youboralib/src/comm/transform/transform.js","./youbora/../node_modules/youboralib/src/chrono.js","./youbora/../node_modules/youboralib/src/version.js","./youbora/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}","./youbora/../node_modules/youboralib/src/youboralib.js","./youbora/../node_modules/youboralib/src/mixins/isarray.js","./youbora/../node_modules/youboralib/src/timer.js","./youbora/../node_modules/youboralib/src/comm/communication.js","./youbora/../node_modules/youboralib/src/infinity/infinity.js","./youbora/../node_modules/youboralib/src/adapter/adapter.js","./youbora/../node_modules/youboralib/src/mixins/assign.js","./youbora/../node_modules/youboralib/src/monitors/hybridnetwork.js","./youbora/../node_modules/youboralib/src/comm/transform/view.js","./youbora/../node_modules/youboralib/src/comm/transform/resource.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/hlsparser.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparser.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/locationheaderparser.js","./youbora/../node_modules/youboralib/src/plugin/options.js","./youbora/../node_modules/youboralib/src/plugin/storage.js","./youbora/../node_modules/youboralib/src/plugin/requestbuilder.js","./youbora/../node_modules/youboralib/src/detectors/backgroundDetector.js","./youbora/../node_modules/youboralib/src/detectors/deviceDetector.js","./youbora/../node_modules/youboralib/src/adapter/playheadmonitor.js","./youbora/./index.js","./youbora/./youbora.js","./youbora/../node_modules/youboralib/manifest.json","./youbora/../node_modules/youboralib/src/polyfills.js","./youbora/../node_modules/youboralib/src/mixins/create.js","./youbora/../node_modules/youboralib/src/comm/transform/nqs6.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/level3.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/cloudfront.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/akamai.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/highwinds.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/fastly.js","./youbora/../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/balancer.js","./youbora/../node_modules/youboralib/src/plugin/plugin.js","./youbora/../node_modules/youboralib/src/comm/transform/flow.js","./youbora/../node_modules/youboralib/src/plugin/plugin+content.js","./youbora/../node_modules/youboralib/src/adapter/playbackchronos.js","./youbora/../node_modules/youboralib/src/adapter/playbackflags.js","./youbora/../node_modules/youboralib/src/plugin/plugin+getters.js","./youbora/../node_modules/youboralib/src/plugin/plugin+content+getters.js","./youbora/../node_modules/youboralib/src/plugin/plugin+ads.js","./youbora/../node_modules/youboralib/src/plugin/plugin+ads+getters.js","./youbora/../node_modules/youboralib/src/plugin/plugin+pings.js","./youbora/../node_modules/youboralib/src/plugin/plugin+fire.js","./youbora/../node_modules/youboralib/src/plugin/plugin+infinity.js","./youbora/../node_modules/youboralib/src/plugin/plugin+infinity+getters.js","./youbora/./adapter/adapter.js","./youbora/./adapter/ads/nativeads.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_9__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Emitter","isArray","Log","_emitter","on","apply","arguments","off","emit","Level","SILENT","ERROR","WARNING","NOTICE","DEBUG","VERBOSE","Event","LOG","logLevel","plainLogs","report","msg","level","color","console","log","letters","5","4","3","2","1","letter","prefix","_getCurrentTime","document","documentMode","_plainReport","logMethod","error","warn","debug","splice","Date","getDate","slice","getMinutes","getSeconds","getMilliseconds","Array","notice","verbose","loadLevelFromUrl","window","location","search","exec","assign","createObject","YouboraObject","constructor","extend","protoProps","staticProps","child","parent","__super__","Util","stripProtocol","url","replace","err","addProtocol","httpSecure","protocol","indexOf","parseNumber","def","isNaN","Infinity","logAllEvents","extraEvents","e","type","playerEvents","shift","concat","length","addEventListener","buildRenditionString","width","height","bitrate","ret","Math","round","buildErrorParams","code","metadata","params","errorCode","errorMetadata","errorLevel","Constants","Service","DATA","INIT","START","JOIN","PAUSE","RESUME","SEEK","BUFFER","STOP","PING","AD_INIT","AD_START","AD_JOIN","AD_PAUSE","AD_RESUME","AD_BUFFER","AD_STOP","AD_CLICK","AD_ERROR","AD_BLOCKED","EVENT","SESSION_START","SESSION_STOP","NAV","BEAT","WillSendEvent","WILL_SEND_INIT","WILL_SEND_START","WILL_SEND_JOIN","WILL_SEND_PAUSE","WILL_SEND_RESUME","WILL_SEND_SEEK","WILL_SEND_BUFFER","WILL_SEND_ERROR","WILL_SEND_FATAL_ERROR","WILL_SEND_STOP","WILL_SEND_PING","WILL_SEND_AD_START","WILL_SEND_AD_JOIN","WILL_SEND_AD_PAUSE","WILL_SEND_AD_RESUME","WILL_SEND_AD_BUFFER","WILL_SEND_AD_STOP","WILL_SEND_AD_CLICK","WILL_SEND_AD_ERROR","WILL_SEND_AD_BLOCKED","WILL_SEND_SESSION_START","WILL_SEND_SESSION_STOP","WILL_SEND_NAV","WILL_SEND_BEAT","WILL_SEND_EVENT","event","callback","_listeners","push","index","data","forEach","_eachCallback","bind","target","YBRequest","host","service","options","xhr","createXHR","defaultOptions","retries","cache","setParam","getTime","XMLHttpRequest","ActiveXObject","getXHR","getUrl","getParamString","removeEventListener","key","param","string","JSON","stringify","encodeURIComponent","getParam","value","send","open","method","requestHeaders","setRequestHeader","retryAfter","maxRetries","genericError","setTimeout","_globalListeners","SUCCESS","LOAD","ABORT","onEvery","offEvery","Transform","_isBusy","parse","request","isBlocking","done","DONE","Chrono","reset","startTime","stopTime","pauseTime","offset","getDeltaTime","stop","now","tempOffset","pausetime","tempStop","start","resume","pause","clone","chrono","version","previousYoubora","youbora","noConflict","VERSION","polyfills","HybridNetwork","Timer","Request","Communication","ViewTransform","Nqs6Transform","ResourceTransform","CdnParser","HlsParser","LocationheaderParser","Options","Plugin","Storage","RequestBuilder","PlayheadMonitor","Adapter","adapters","BackgroundDetector","DeviceDetector","registerAdapter","unregisterAdapter","obj","toString","interval","isRunning","_timer","_setTick","clearTimeout","transforms","_requests","sendRequest","_registerRequest","buildRequest","addTransform","transform","_processRequests","removeTransform","pos","workingQueue","rejected","_transform","Comm","YouboraInfinity","plugin","_plugin","andBeyond","begin","_comm","viewTransform","getContext","fireNav","fireSessionStart","_generateNewContext","context","btoa","storage","setSession","_setLastActive","getComm","fireSessionStop","fireEvent","PlaybackChronos","PlaybackFlags","player","flags","chronos","monitor","setPlayer","tag","getVersion","unregisterListeners","getElementById","registerListeners","dispose","fireStop","monitorPlayhead","monitorBuffers","monitorSeeks","Type","getPlayhead","getPlayrate","isPaused","getFramesPerSecond","getDroppedFrames","getDuration","getBitrate","getThroughput","getCdnTraffic","lastDataValue","prevDataValue","getP2PTraffic","_ping","getRendition","getTitle","getTitle2","getIsLive","getResource","getPlayerVersion","getPlayerName","getPosition","getUploadTraffic","getIsP2PEnabled","getHouseholdId","getLatency","getPacketLoss","getPacketSent","fireInit","backgroundDetector","canBlockStartCalls","isStarted","isInited","total","join","fireStart","fireJoin","isJoined","firePause","fireResume","skipNextTick","fireBufferBegin","convertFromSeek","isBuffering","isSeeking","buffer","seek","BUFFER_BEGIN","fireBufferEnd","BUFFER_END","cancelBuffer","fireSeekBegin","convertFromBuffer","SEEK_BEGIN","fireSeekEnd","SEEK_END","cancelSeek","_adapter","isEnded","isStopped","fireCasted","casted","fireError","fireNoServedAd","errorSeverity","fireFatalError","fireClick","CLICK","fireBlocked","BLOCKED","undefined","TypeError","output","source","nextKey","HybridNetowrk","Streamroot","p2pAvailable","peerAgents","acum","agent","stats","cdn","peer5","getStats","totalHttpDownloaded","isP2PEnabled","p2p","totalP2PDownloaded","upload","totalP2PUploaded","isEnabled","session","response","_viewIndex","_session","_httpSecure","init","apiVersion","outputformat","requestBuilder","buildParams","system","getHost","_receiveData","_failedData","setData","resp","q","h","pingTime","pt","beatTime","bt","req","nextView","getViewCode","getSessionId","setSessionId","sessionId","isDone","_realResource","_initResource","_cdnName","_cdnNodeHost","_cdnNodeTypeString","_cdnNodeType","_responses","getCdnName","getNodeHost","getNodeTypeString","getNodeType","resource","_hlsEnabled","isParseHls","_cdnEnabled","isParseCdnNode","_locHeaderEnabled","isLocHeader","_cdnList","getParseCdnNodeList","_cdnNameHeader","getParseCdnNodeNameHeader","setBalancerHeaderName","_setTimeout","_parseLocHeader","_parseHLS","_parseCDN","_parseTimeout","headerParser","hlsTransform","cdnParser","create","getResponses","getParsedCdnName","getParsedNodeHost","getParsedNodeTypeString","getParsedNodeType","lastSent","mediaResource","nodeHost","nodeType","nodeTypeString","parentResource","matches","res","trim","lastIndexOf","responseText","_options","cdnName","parsers","parseType","addParser","parser","setCdnName","setParseType","responses","headerString","_parseResponse","_requestResponse","getAllResponseHeaders","headers","split","line","headerName","_executeParser","regex","element","ElementType","HOST","TYPE","HOST_AND_TYPE","TYPE_AND_HOST","NAME","toUpperCase","_cdnConfigs","Balancer","add","config","_response","startsWith","setOptions","base","YouboraStorage","setLocal","localStorage","setItem","getLocal","getItem","sessionStorage","getSession","startParams","adStartParams","_adNumber","fetchParams","paramList","onlyDifferent","getterName","getters","differentParams","getNewAdNumber","adNumber","adPosition","getAdPosition","getChangedEntities","/data","/init","/start","/joinTime","/pause","/resume","/seek","/bufferUnderrun","/error","/stop","/adInit","/adStart","/adJoin","/adPause","/adResume","/adBufferUnderrun","/adStop","/adClick","/adError","/adBlocked","/ping","/infinity/session/start","/infinity/session/stop","/infinity/session/nav","/infinity/session/beat","/infinity/event","/join","entities","requestNumber","playhead","playrate","fps","droppedFrames","mediaDuration","throughput","rendition","title","title2","live","transactionCode","properties","playerVersion","pluginVersion","userType","streamingProtocol","obfuscateIp","householdId","latency","packetLoss","packetSent","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","param11","param12","param13","param14","param15","param16","param17","param18","param19","param20","extraparam1","extraparam2","extraparam3","extraparam4","extraparam5","extraparam6","extraparam7","extraparam8","extraparam9","extraparam10","adPlayhead","adDuration","adCampaign","adBitrate","adTitle","adResource","adPlayerVersion","adProperties","adAdapterVersion","pluginInfo","isp","connectionType","ip","deviceCode","accountCode","username","preloadDuration","joinDuration","bufferDuration","seekDuration","pauseDuration","adJoinDuration","adBufferDuration","adPauseDuration","adTotalDuration","referer","route","navContext","page","cdnDownloadedTraffic","p2pDownloadedTraffic","p2pEnabled","uploadTraffic","experiments","isInBackground","listenerReference","_visibilityListener","_reset","startDetection","windowRef","isBackgroundDetectorStarted","windowObject","stopDetection","visibilityState","settings","_getSettings","_fireStop","_firePause","deviceDetector","isSmartTV","isDesktop","isAndroid","isIphone","adsAdapter","getAdsAdapter","contentAdapter","getAdapter","end","navigator","userAgent","_isSmartTV","toLowerCase","match","_isIphoneDevice","_isAndroidDevice","_isSmartphoneDevice","_isDesktopDevice","isSmartphone","adapter","_seekEnabled","_bufferEnabled","_chrono","_lastPlayhead","progress","deltaTime","bufferThreshold","kBUFFER_THRESHOLD_RATIO","seekThreshold","kSEEK_THRESHOLD_RATIO","currentPlayhead","_getPlayhead","diffPlayhead","abs","NONE","_playkitJs","_youbora","_youbora2","default","registerPlugin","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","writable","setPrototypeOf","__proto__","_get","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","_createClass","defineProperties","props","descriptor","_youboralib","_youboralib2","_adapter2","Youbora","_BasePlugin","_this","setAdapter","_addBindings","_setup","update","_addPlayerMetadata","kalturaInfo","entryId","uiConfId","bindLogger","logger","BasePlugin","defaultConfig","tech","author","built","repo","applyPolyfills","b","a","f","C","thisArg","len","F","Error","_cloneParam","entityType","entityValue","from","to","X-WR-Diag","FlowTransform","infinity","isInitiated","isPreloading","preloadChrono","initChrono","_adsAdapter","_sendPing","_beat","_sendBeat","resourceTransform","lastEventTime","getIsDataExpired","getStoredData","_initInfinity","getIsSessionExpired","_stopPings","_send","willSendEvent","enabled","lastServeiceSent","_initComm","disable","enable","_services","PluginContentMixin","removeAdapter","_initListener","_startListener","_joinListener","_pauseListener","_resumeListener","_seekBeginListener","_seekEndListener","_bufferBeginListener","_bufferEndListener","_errorListener","_stopListener","_clickListener","_blockedListener","_startPings","PluginGetterMixin","getUserType","getObfuscateIp","getExtraparam1","getExtraparam2","getExtraparam3","getExtraparam4","getExtraparam5","getExtraparam6","getExtraparam7","getExtraparam8","getExtraparam9","getExtraparam10","getExtraparam11","getExtraparam12","getExtraparam13","getExtraparam14","getExtraparam15","getExtraparam16","getExtraparam17","getExtraparam18","getExtraparam19","getExtraparam20","getAdExtraparam1","getAdExtraparam2","getAdExtraparam3","getAdExtraparam4","getAdExtraparam5","getAdExtraparam6","getAdExtraparam7","getAdExtraparam8","getAdExtraparam9","getAdExtraparam10","getPluginInfo","lib","getAdapterVersion","adAdapter","getAdAdapterVersion","getIp","getIsp","getConnectionType","getDeviceCode","getAccountCode","getUsername","getReferer","href","getRequestNumber","random","getExperiments","PluginContentGetterMixin","getWebkitDroppedFrames","webkitDroppedFrameCount","getWebkitBitrate","webkitVideoDecodedByteCount","_lastWebkitBitrate","delta","getOriginalResource","getTransactionCode","getMetadata","getCdn","getPluginVersion","getStreamingProtocol","getPreloadDuration","getJoinDuration","getBufferDuration","getSeekDuration","getPauseDuration","PluginAdsMixin","setAdsAdapter","removeAdsAdapter","_adInitListener","_adStartListener","_adJoinListener","_adPauseListener","_adResumeListener","_adBufferBeginListener","_adBufferEndListener","_adStopListener","_adErrorListener","_adClickListener","_adBlockedListener","adInitSent","adStartSent","WILL_SEND_AD_INIT","min","PluginAdsGettersMixin","getAdPlayerVersion","getAdPlayhead","getAdDuration","getAdBitrate","getWebkitAdBitrate","_lastWebkitAdBitrate","getAdTitle","getAdResource","getAdCampaign","getAdMetadata","getAdJoinDuration","getAdBufferDuration","getAdPauseDuration","getAdTotalDuration","PluginPingMixin","diffTime","PluginFireMixin","firePreloadBegin","firePreloadEnd","PluginInfinityMixin","_navListener","_sessionStartListener","_sessionStopListener","_eventListener","_sendInfinity","sessions","PluginInfinityGettersMixin","getPageName","time","Kaltura","currentTime","playbackRate","duration","activeVideo","getActiveTracks","video","bandwidth","entryName","entryType","src","playerName","references","PLAY","playListener","LOAD_START","pauseListener","PLAYING","playingListener","errorListener","SEEKING","seekingListener","SEEKED","seekedListener","PLAYER_STATE_CHANGED","stateChangeListener","ENDED","endedListener","CHANGE_SOURCE_STARTED","forceEndedListener","AD_LOADED","adLoadedListener","info","isDvr","initialPlayhead","timeupdateListener","payload","severity","Severity","CRITICAL","newState","State","BUFFERING","oldState","stopBlockedByAds","NativeAdsAdapter","isLive","startAdListener","AD_STARTED","AD_RESUMED","resumeAdListener","AD_PAUSED","pauseAdListener","AD_CLICKED","clickAdListener","AD_SKIPPED","skipAdListener","AD_COMPLETED","stopAdListener","errorAdListener","AD_PROGRESS","progressAdListener","ALL_ADS_COMPLETED","allAdsCompletedListener","skipped","adProgress"],"mappings":"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","file":"playkit-youbora.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"youbora\"] = factory(require(\"playkit-js\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"youbora\"] = factory(root[\"playkit\"][\"core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"youbora\"] = factory(require(\"playkit-js\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"youbora\"] = factory(root[\"playkit\"][\"core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_9__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 29);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar isArray = __webpack_require__(11)\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (isArray(msg)) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assign = __webpack_require__(16)\nvar createObject = __webpack_require__(33)\n\nvar YouboraObject = function () { }\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () { }\n}\n\n/**\n * This method allows the extension of the current class, emulating 1-level inheritance.\n * It is inspired by Backbone's extend, but removing all references to underscore.\n *\n * @see http://backbonejs.org/#Model-extend\n *\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var child\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && protoProps.hasOwnProperty('constructor')) {\n    child = protoProps.constructor\n  } else {\n    child = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  assign(child, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = createObject(parent.prototype)\n  if (protoProps) assign(child.prototype, protoProps)\n  child.prototype.constructor = child\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype\n\n  return child\n}\n\n\nmodule.exports = YouboraObject\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\n\n/**\n * This static class provides utility methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function(url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http://]nqs.nice264.com\n   *\n   * @param {string} url Domain of the service. Without protocol. ie: 'nqs.nice264.com'.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function(url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} def Number to return if n is not correct.\n   */\n  parseNumber: function(n, def) {\n    if (!isNaN(n) &&\n      n >= 0 &&\n      n !== Infinity &&\n      n !== -Infinity &&\n      n !== null &&\n      typeof n !== 'undefined'\n    ) {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility method will add most of the HTML5 common event listeners to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  logAllEvents: function(o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function(e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function(width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  },\n\n  /**\n   * Returns a params dictionary with the error values.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n   * @returns {Object} Key:value params.\n   */\n  buildErrorParams: function(code, msg, metadata, level) {\n    if (typeof code === 'object') {\n      return code\n    } else {\n      var params = {}\n      params.errorCode = code || 'FAILURE'\n      params.msg = msg || params.errorCode\n      params.errorMetadata = metadata\n      params.errorLevel = level\n      return params\n    }\n  },\n\n  // The following methods replace core js functionallity to ensure compatibility in old versions.\n\n  assign: __webpack_require__(16),\n\n  isArray: __webpack_require__(11)\n}\n\nmodule.exports = Util\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * This static class englobes youbora constants.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Constants = {\n  /**\n   * List of youbora services.\n   *\n   * @enum\n   */\n  Service: {\n    DATA: '/data',\n\n    // Video\n    INIT: '/init',\n    START: '/start',\n    JOIN: '/joinTime',\n    PAUSE: '/pause',\n    RESUME: '/resume',\n    SEEK: '/seek',\n    BUFFER: '/bufferUnderrun',\n    ERROR: '/error',\n    STOP: '/stop',\n    PING: '/ping',\n\n    // Ads\n    AD_INIT: '/adInit',\n    AD_START: '/adStart',\n    AD_JOIN: '/adJoin',\n    AD_PAUSE: '/adPause',\n    AD_RESUME: '/adResume',\n    AD_BUFFER: '/adBufferUnderrun',\n    AD_STOP: '/adStop',\n    AD_CLICK: '/adClick',\n    AD_ERROR: '/adError',\n    AD_BLOCKED: '/adBlocked',\n\n    // Infinity\n    EVENT: '/infinity/event',\n    SESSION_START: '/infinity/session/start',\n    SESSION_STOP: '/infinity/session/stop',\n    NAV: '/infinity/session/nav',\n    BEAT: '/infinity/session/beat'\n  },\n\n  /**\n   * List of will-send events.\n   *\n   * @memberof youbora.Plugin\n   * @enum\n   * @event\n   */\n  WillSendEvent: {\n    WILL_SEND_INIT: 'will-send-init',\n    WILL_SEND_START: 'will-send-start',\n    WILL_SEND_JOIN: 'will-send-join',\n    WILL_SEND_PAUSE: 'will-send-pause',\n    WILL_SEND_RESUME: 'will-send-resume',\n    WILL_SEND_SEEK: 'will-send-seek',\n    WILL_SEND_BUFFER: 'will-send-buffer',\n    WILL_SEND_ERROR: 'will-send-error',\n    WILL_SEND_FATAL_ERROR: 'will-send-fatal-error',\n    WILL_SEND_STOP: 'will-send-stop',\n    WILL_SEND_PING: 'will-send-ping',\n\n    WILL_SEND_AD_START: 'will-send-ad-start',\n    WILL_SEND_AD_JOIN: 'will-send-ad-join',\n    WILL_SEND_AD_PAUSE: 'will-send-ad-pause',\n    WILL_SEND_AD_RESUME: 'will-send-ad-resume',\n    WILL_SEND_AD_BUFFER: 'will-send-ad-buffer',\n    WILL_SEND_AD_STOP: 'will-send-ad-stop',\n    WILL_SEND_AD_CLICK: 'will-send-ad-click',\n    WILL_SEND_AD_ERROR: 'will-send-ad-error',\n    WILL_SEND_AD_BLOCKED: 'will-send-ad-blocked',\n\n    WILL_SEND_SESSION_START: 'will-send-session-start',\n    WILL_SEND_SESSION_STOP: 'will-send-session-stop',\n    WILL_SEND_NAV: 'will-send-nav',\n    WILL_SEND_BEAT: 'will-send-beat',\n    WILL_SEND_EVENT: 'will-send-event'\n  }\n}\n\nmodule.exports = Constants\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar isArray = __webpack_require__(11)\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n *\n * @constructs Emitter\n * @extends youbora.YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends youbora.Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     *\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     *\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     *\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n      data = data || {}\n\n      if (isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    /**\n     * Travels through the listener list and executes them them.\n     *\n     * @private\n     */\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends youbora.YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends youbora.Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the current request */\n      this.options = Util.assign({}, YBRequest.defaultOptions, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      this.xhr.addEventListener(event, callback.bind(this, this))\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      this.xhr.removeEventListener(event, callback)\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            var string = JSON.stringify(param)\n            if (string !== '{}') {\n              params += encodeURIComponent(key) + '=' + encodeURIComponent(string) + '&'\n            }\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends youbora.YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /**\n     * This static property includes the default values for the options. In case you do not define\n     * one of them in the constructor, these values will be used instead.\n     *\n     * @param {string} [defaultOptions.method=\"GET\"] Specifies the method of the request.\n     * ie: \"GET\", \"HEAD\".\n     * @param {string} [defaultOptions.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [defaultOptions.retryAfter=5000] Time in ms before sending a failed request\n     * again. 0 to disable.\n     * @param {number} [defaultOptions.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [defaultOptions.cache=false] If false, timemark will be added to each request\n     * to prevent caching.\n     */\n    defaultOptions: {\n      method: 'GET',\n      requestHeaders: {},\n      maxRetries: 3,\n      retryAfter: 5000,\n      cache: false\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n      YBRequest._globalListeners[event].push(callback)\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\n\nvar Transform = Emitter.extend(\n  /** @lends youbora.Transform.prototype */\n  {\n    /**\n     * Transform classes in YOUBORA help the library parse and work with data.\n     *\n     * A Transform makes some kind of task that may block requests until it's done, or applies changes\n     * to the requests right before they're finally sent.\n     *\n     * {@link ResourceTransform}, {@link ViewTransform}... all extend from this class.\n     *\n     * @constructs Transform\n     * @extends youbora.Emitter\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      /**\n       * Whether the Transform is currently working or not.\n       * @private\n       */\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     *\n     * @param {YBRequest} request Request to transform.\n     */\n    parse: function (request) { },\n\n    /**\n     * By default this will return true until {@link #done()} is called. This can be overridden\n     * in order to block {@link Request}s based on any criteria. For instance its\n     * {@link Request#getService()}.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends youbora.Transform */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this Transform is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\n\nvar Chrono = YouboraObject.extend(\n  /** @lends youbora.Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points in time.\n     *\n     * @constructs Chrono\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset chrono values. */\n    reset: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Pause time */\n      this.pauseTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't\n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) {\n          this.stopTime = now\n        }\n        var tempOffset = this.pausetime ? now - this.pausetime : 0\n        var tempStop = this.stopTime ? this.stopTime : now\n        return (this.offset - tempOffset) + (tempStop - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n      this.offset = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      if (this.pausetime) this.resume()\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    },\n\n    pause: function () {\n      this.pauseTime = new Date().getTime()\n    },\n\n    resume: function () {\n      this.offset -= (new Date().getTime() - this.pauseTime)\n      this.pauseTime = 0\n    },\n\n    /**\n     * Creates a copy of the chrono.\n     */\n    clone: function () {\n      var chrono = new Chrono()\n      chrono.startTime = this.startTime\n      chrono.stopTime = this.stopTime\n      chrono.offset = this.offset\n      return chrono\n    }\n  }\n)\n\nmodule.exports = Chrono\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(31).version\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = __webpack_require__(8)\n\n// Polyfills\nyoubora.polyfills = __webpack_require__(32)\n\n// Base Classes\nyoubora.Object = __webpack_require__(1)\nyoubora.Emitter = __webpack_require__(4)\n\n// Log\nyoubora.Log = __webpack_require__(0)\nyoubora.Log.loadLevelFromUrl()\n\n// General classes\nyoubora.Util = __webpack_require__(2)\nyoubora.HybridNetwork = __webpack_require__(17)\nyoubora.Chrono = __webpack_require__(7)\nyoubora.Timer = __webpack_require__(12)\nyoubora.Constants = __webpack_require__(3)\n\n// Comm classes\nyoubora.Request = __webpack_require__(5)\nyoubora.Communication = __webpack_require__(13)\n\n// Resource Transform classes\nyoubora.Transform = __webpack_require__(6)\nyoubora.ViewTransform = __webpack_require__(18)\nyoubora.Nqs6Transform = __webpack_require__(34)\nyoubora.ResourceTransform = __webpack_require__(19)\nyoubora.CdnParser = __webpack_require__(21)\nyoubora.HlsParser = __webpack_require__(20)\nyoubora.LocationheaderParser = __webpack_require__(22)\n\n// Plugin Classes\nyoubora.Options = __webpack_require__(23)\nyoubora.Plugin = __webpack_require__(41)\nyoubora.Storage = __webpack_require__(24)\nyoubora.RequestBuilder = __webpack_require__(25)\n\n// Adapters\nyoubora.PlayheadMonitor = __webpack_require__(28)\nyoubora.Adapter = __webpack_require__(15)\nyoubora.adapters = {}\n\n// Infinity\nyoubora.Infinity = __webpack_require__(14)\n\n// Detector classes\nyoubora.BackgroundDetector = __webpack_require__(26)\nyoubora.DeviceDetector = __webpack_require__(27)\n\n/**\n * Register the given adapter in <youbora>.adapters.\n *\n * @param {string} key Unique adapter identifier.\n * @param {youbora.Adapter} Adapter Adapter class.\n *\n * @memberof youbora\n */\nyoubora.registerAdapter = function (key, Adapter) {\n  this.adapters[key] = Adapter\n}.bind(youbora)\n\n/**\n * Remove the given adapter in <youbora>.adapters.\n *\n * @param {string} key Unique adapter identifier.\n *\n * @memberof youbora\n */\nyoubora.unregisterAdapter = function (key) {\n  this.adapters[key] = null\n}.bind(youbora)\n\nmodule.exports = youbora\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/**\n * See Array.isArray.\n * @memberof youbora.Util\n */\nmodule.exports = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Chrono = __webpack_require__(7)\n\nvar Timer = YouboraObject.extend(\n  /** @lends youbora.Timer.prototype */\n  {\n    /**\n     * An Utility class that provides timed events in a defined time interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    /**\n     * Sets the next tick execution.\n     * @private\n     */\n    _setTick: function () {\n      this.chrono.start()\n      this._timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Log = __webpack_require__(0)\nvar YBRequest = __webpack_require__(5)\nvar Transform = __webpack_require__(6)\n\nvar Communication = YouboraObject.extend(\n  /** @lends youbora.Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar Comm = __webpack_require__(13)\n\nvar YouboraInfinity = Emitter.extend(\n  /** @lends youbora.Infinity.prototype */\n  {\n\n    /**\n     * This class is the base of youbora infinity. Every plugin will have an instance.\n     *\n     * @param {youbora.Plugin} plugin Parent plugin.\n     *\n     * @constructs youbora.Infinity\n     * @extends youbora.Emitter\n     * @memberof youbora\n     */\n    constructor: function (plugin) {\n      /** Parent {@link youbora.Plugin} reference. */\n      this._plugin = plugin\n    },\n\n    /**\n     * @alias youbora.Infinity.prototype.begin.\n     */\n    andBeyond: function () {\n      YouboraInfinity.prototype.begin.apply(this, arguments)\n    },\n\n    /**\n     * This method will start infinity logic, setting storage as needed.\n     * Will call fireSessionStart the first time and fireNav for every subsequent route change.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    begin: function (params) {\n      this._comm = new Comm()\n      this._comm.addTransform(this._plugin.viewTransform)\n\n      if (this._plugin.getContext()) {\n        this.fireNav(params) // returning\n      } else {\n        this.fireSessionStart(params) // first time\n      }\n    },\n\n    _generateNewContext: function () {\n      var context = btoa(new Date().getTime())\n      this._plugin.storage.setSession('context', context)\n    },\n\n    _setLastActive: function () {\n      this._plugin.storage.setSession('lastactive', new Date().getTime())\n    },\n\n    /**\n     * Returns the current {@link youbora.Communication} instance.\n     *\n     * @returns {youbora.Communication} communication instance\n     */\n    getComm: function () {\n      return this._comm\n    },\n\n    // Fire\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSessionStart: function (params) {\n      this._generateNewContext()\n      this.emit(YouboraInfinity.Event.SESSION_START, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSessionStop: function (params) {\n      this.emit(YouboraInfinity.Event.SESSION_STOP, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireNav: function (params) {\n      this.emit(YouboraInfinity.Event.NAV, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireEvent: function (params) {\n      this.emit(YouboraInfinity.Event.EVENT, { params: params })\n      this._setLastActive()\n    }\n  },\n  /** @lends youbora.Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: {\n      NAV: 'nav',\n      SESSION_START: 'sessionStart',\n      SESSION_STOP: 'sessionStop',\n      BEAT: 'beat',\n      EVENT: 'event'\n    }\n  }\n)\n\nmodule.exports = YouboraInfinity\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\nvar HybridNetwork = __webpack_require__(17)\nvar version = __webpack_require__(8)\nvar PlaybackChronos = __webpack_require__(44)\nvar PlaybackFlags = __webpack_require__(45)\nvar PlayheadMonitor = __webpack_require__(28)\n\nvar Adapter = Emitter.extend(\n  /** @lends youbora.Adapter.prototype */\n  {\n    /**\n     * Main Adapter class. All specific player adapters should extend this class specifying a player\n     * class.\n     *\n     * The Adapter works as the 'glue' between the player and YOUBORA acting both as event\n     * translator and as proxy for the {@link Plugin} to get info from the player.\n     *\n     * @constructs Adapter\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    constructor: function (player) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new PlaybackFlags()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new PlaybackChronos()\n\n      /** Reference to {@link PlayheadMonitor}. Helps the plugin detect buffers/seeks. */\n      this.monitor = null\n\n      /** Reference to {@link Plugin}. */\n      this.plugin = null\n\n      /** Reference to the player tag */\n      this.player = null\n\n      // Register player and event listeners\n      this.setPlayer(player)\n\n      /** Reference to the video/object tag, could be the same as the player. */\n      this.tag = this.player\n\n      Log.notice('Adapter ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n    },\n\n    /**\n     * Sets a new player, removes the old listeners if needed.\n     *\n     * @param {Object} player Player to be registered.\n     */\n    setPlayer: function (player) {\n      if (this.player) this.unregisterListeners()\n\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      if (this.player) this.registerListeners()\n    },\n\n    /**\n     * Override to create event binders.\n     * It's a good practice when implementing a new Adapter to create intermediate methods and call\n     * those when player events are detected instead of just calling the `fire*` methods. This\n     * will allow future users of the Adapter to customize its behaviour by overriding these\n     * methods.\n     *\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     *\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () { },\n\n    /**\n     * Override to create event de-binders.\n     *\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () { },\n\n    /**\n     * This function disposes the currend adapter, removes player listeners and drops references.\n     */\n    dispose: function () {\n      if (this.monitor) this.monitor.stop()\n      this.fireStop()\n      this.unregisterListeners()\n      this.player = null\n      this.tag = null\n    },\n\n    /**\n     * Creates a new {@link PlayheadMonitor} at this.monitor.\n     *\n     * @param {bool} monitorBuffers If true, it will monitor buffers.\n     * @param {bool} monitorSeeks If true, it will monitor seeks.\n     * @param {number} [interval=800] The interval time in ms.\n     */\n    monitorPlayhead: function (monitorBuffers, monitorSeeks, interval) {\n      var type = 0\n      if (monitorBuffers) type |= PlayheadMonitor.Type.BUFFER\n      if (monitorSeeks) type |= PlayheadMonitor.Type.SEEK\n\n      this.monitor = new PlayheadMonitor(this, type, interval)\n    },\n\n    // GETTERS //\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () {\n      return null\n    },\n\n    /** Override to return current playrate */\n    getPlayrate: function () {\n      return !this.flags.isPaused ? 1 : 0\n    },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () {\n      return null\n    },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () {\n      return null\n    },\n\n    /** Override to return video duration */\n    getDuration: function () {\n      return null\n    },\n\n    /** Override to return current bitrate */\n    getBitrate: function () {\n      return null\n    },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () {\n      if (this.getCdnTraffic() && this.getCdnTraffic() !== 0) {\n        if (!this.lastDataValue) {\n          this.lastDataValue = 0\n        }\n        var prevDataValue = this.lastDataValue\n        this.lastDataValue = this.getCdnTraffic() + this.getP2PTraffic()\n        return Math.round((this.lastDataValue - prevDataValue) / (this.plugin._ping.interval / 1000))\n      }\n      return null\n    },\n\n    /** Override to return rendition */\n    getRendition: function () {\n      return null\n    },\n\n    /** Override to return title */\n    getTitle: function () {\n      return null\n    },\n\n    /** Override to return title2 */\n    getTitle2: function () {\n      return null\n    },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () {\n      return null\n    },\n\n    /** Override to return resource URL. */\n    getResource: function () {\n      return null\n    },\n\n    /** Override to return player version */\n    getPlayerVersion: function () {\n      return null\n    },\n\n    /** Override to return player's name */\n    getPlayerName: function () {\n      return null\n    },\n\n    /** Override to return adapter version. */\n    getVersion: function () {\n      return version + '-generic-js'\n    },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () {\n      return null\n    },\n\n    /** Override to return CDN traffic bytes not using streamroot or peer5. */\n    getCdnTraffic: function () {\n      return HybridNetwork.getCdnTraffic()\n    },\n\n    /** Override to return P2P traffic bytes not using streamroot or peer5. */\n    getP2PTraffic: function () {\n      return HybridNetwork.getP2PTraffic()\n    },\n\n    /** Override to return P2P traffic sent in bytes, not using streamroot or peer5. */\n    getUploadTraffic: function () {\n      return HybridNetwork.getUploadTraffic()\n    },\n\n    /** Override to return if P2P is enabled not using streamroot or peer5. */\n    getIsP2PEnabled: function () {\n      return HybridNetwork.getIsP2PEnabled()\n    },\n\n    /** Override to return household id */\n    getHouseholdId: function () {\n      return null\n    },\n\n    /** Override to return the latency */\n    getLatency: function () {\n      return null\n    },\n\n    /** Override to return the number of packets lost */\n    getPacketLoss: function () {\n      return null\n    },\n\n    /** Override to return the number of packets sent */\n    getPacketSent: function () {\n      return null\n    },\n\n    // FLOW //\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent init if isStarted or isInited are already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireInit: function (params) {\n      if (this.plugin && this.plugin.backgroundDetector && this.plugin.backgroundDetector.canBlockStartCalls()) {\n        return null\n      }\n      if (!this.flags.isStarted && !this.flags.isInited) {\n\n        this.chronos.total.start()\n        this.chronos.join.start()\n\n        this.emit(Adapter.Event.INIT, { params: params })\n        this.flags.isInited = true\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireStart: function (params) {\n      if (this.plugin && this.plugin.backgroundDetector && this.plugin.backgroundDetector.canBlockStartCalls()) {\n        return null\n      }\n      if (!this.flags.isStarted) {\n        this.flags.isStarted = true\n\n        if (!this.flags.isInited) {\n          this.chronos.total.start()\n          this.chronos.join.start()\n        }\n        this.emit(Adapter.Event.START, { params: params })\n        this.flags.isInited = false\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireJoin: function (params) {\n      if ((this.flags.isStarted || this.flags.isInited) && !this.flags.isJoined) {\n        this.flags.isStarted = true\n        if (this.monitor) this.monitor.start()\n\n        this.flags.isJoined = true\n\n        this.chronos.join.stop()\n\n        this.emit(Adapter.Event.JOIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    firePause: function (params) {\n      if (this.flags.isJoined && !this.flags.isPaused) {\n        this.flags.isPaused = true\n\n        this.chronos.pause.start()\n\n        this.emit(Adapter.Event.PAUSE, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireResume: function (params) {\n      if (this.flags.isJoined && this.flags.isPaused) {\n        this.flags.isPaused = false\n\n        this.chronos.pause.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.RESUME, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     * @param {bool} [convertFromSeek=false] If true, will convert current seek to buffer.\n     */\n    fireBufferBegin: function (params, convertFromSeek) {\n      if (this.flags.isJoined && !this.flags.isBuffering) {\n        if (this.flags.isSeeking) {\n          if (convertFromSeek) {\n            Log.notice('Converting current buffer to seek')\n\n            this.chronos.buffer = this.chronos.seek.clone()\n            this.chronos.seek.reset()\n\n            this.flags.isSeeking = false\n          } else {\n            return\n          }\n        } else {\n          this.chronos.buffer.start()\n        }\n\n        this.flags.isBuffering = true\n        this.emit(Adapter.Event.BUFFER_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireBufferEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.BUFFER_END, { params: params })\n      }\n    },\n\n    /**\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    cancelBuffer: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     * @param {bool} [convertFromBuffer=true] If false, will convert current buffer to seek.\n     */\n    fireSeekBegin: function (params, convertFromBuffer) {\n      if (this.plugin && this.plugin.getIsLive() && this.plugin.options['content.isLive.noSeek']) return null\n      if (this.flags.isJoined && !this.flags.isSeeking) {\n        if (this.flags.isBuffering) {\n          if (convertFromBuffer !== false) {\n            Log.notice('Converting current buffer to seek')\n\n            this.chronos.seek = this.chronos.buffer.clone()\n            this.chronos.buffer.reset()\n\n            this.flags.isBuffering = false\n          } else {\n            return\n          }\n        } else {\n          this.chronos.seek.start()\n        }\n\n        this.flags.isSeeking = true\n        this.emit(Adapter.Event.SEEK_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSeekEnd: function (params) {\n      if (this.plugin && this.plugin.getIsLive() && this.plugin.options['content.isLive.noSeek']) return null\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.SEEK_END, { params: params })\n      }\n    },\n\n    /**\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    cancelSeek: function (params) {\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireStop: function (params) {\n      if (this.flags.isStarted) {\n        if (this.monitor) this.monitor.stop()\n\n        this.flags.reset()\n        this.chronos.total.stop()\n        this.chronos.join.reset()\n        this.chronos.pause.stop()\n        this.chronos.buffer.stop()\n        this.chronos.seek.stop()\n\n        this.emit(Adapter.Event.STOP, { params: params })\n\n        if (this.plugin._adapter && this.plugin._adapter.flags.isEnded && !this.plugin._adapter.flags.isStopped) {\n          if (this.plugin.options['ad.afterStop'] === 0) {\n            this.plugin.fireStop()\n          } else {\n            this.plugin.options['ad.afterStop']--\n          }\n        }\n\n        this.chronos.pause.reset()\n        this.chronos.buffer.reset()\n        this.chronos.seek.reset()\n      }\n    },\n\n    /**\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireCasted: function (params) {\n      if (!params) params = {}\n      params.casted = true\n      this.fireStop(params)\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireError: function (code, msg, metadata, level) {\n      var params = Util.buildErrorParams(code, msg, metadata, level)\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireNoServedAd: function (code, msg, metadata, level) {\n      var params = Util.buildErrorParams(code, msg, metadata, level)\n      params.errorSeverity = \"AdsNotServed\"\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     */\n    fireFatalError: function (code, msg, metadata) {\n      if (this.monitor) this.monitor.stop()\n\n      this.fireError(code, msg, metadata, 'fatal')\n      this.fireStop()\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireClick: function (params) {\n      this.emit(Adapter.Event.CLICK, { params: params })\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireBlocked: function (params) {\n      this.emit(Adapter.Event.BLOCKED, { params: params })\n    }\n  },\n\n  /** @lends youbora.Adapter */\n  {\n    // Static Memebers //\n\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: {\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      STOP: 'stop',\n      CLICK: 'click',\n      BLOCKED: 'blocked'\n    }\n  }\n)\n\nmodule.exports = Adapter\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/**\n * See Object.assign.\n *\n * @memberof youbora.Util\n */\nmodule.exports = function (target) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object')\n  }\n\n  var output = Object(target)\n  for (var index = 1; index < arguments.length; index++) {\n    var source = arguments[index]\n    if (source !== undefined && source !== null) {\n      for (var nextKey in source) {\n        if (source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey]\n        }\n      }\n    }\n  }\n  return output\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n * This static class provides p2p and cdn network traffic information for\n * Streamroot, Peer5 and EasyBroadcast\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar HybridNetowrk = {\n  /** Returns CDN traffic bytes using streamroot or peer5. Otherwise null */\n  getCdnTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        acum += Streamroot.peerAgents[agent].stats.cdn\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalHttpDownloaded\n    }\n    return null\n  },\n\n  /** Returns P2P traffic bytes using streamroot or peer5. Otherwise null */\n  getP2PTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        if (Streamroot.peerAgents[agent].isP2PEnabled)\n          acum += Streamroot.peerAgents[agent].stats.p2p\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalP2PDownloaded\n    }\n    return null\n  },\n\n  /** Returns P2P traffic sent in bytes, using streamroot or peer5. Otherwise null*/\n  getUploadTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        if (Streamroot.peerAgents[agent].isP2PEnabled)\n          acum += Streamroot.peerAgents[agent].stats.upload\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalP2PUploaded\n    }\n    return null\n  },\n\n\n  /** Returns if P2P is enabled, using streamroot or peer5. Otherwise null*/\n  getIsP2PEnabled: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = false\n      for (agent in Streamroot.peerAgents) { // if at least one agent is enabled\n        acum = acum || Streamroot.peerAgents[agent].isP2PEnabled\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.isEnabled) {\n      return peer5.isEnabled()\n    }\n    return null\n  }\n}\n\nmodule.exports = HybridNetowrk\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YBRequest = __webpack_require__(5)\nvar Transform = __webpack_require__(6)\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\nvar Constants = __webpack_require__(3)\n\nvar ViewTransform = Transform.extend(\n  /** @lends youbora.ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends youbora.Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     * @param {string} session If provided, plugin will use this as a FD response.\n     */\n    constructor: function (plugin, session) {\n      Transform.prototype.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      this._session = session\n\n      this._httpSecure = plugin.options.httpSecure\n\n      this._plugin = plugin\n    },\n\n    /**\n     * Starts the 'FastData' fetching. This will send the initial request to YOUBORA in order to get\n     * the needed info for the rest of the requests.\n     *\n     * This is an asynchronous process.\n     *\n     * When the fetch is complete, {@link #fastDataConfig} will contain the parsed info.\n     * @see FastDataConfig\n     */\n    init: function () {\n      var service = Constants.Service.DATA\n      var params = {\n        apiVersion: 'v7',\n        outputformat: 'json'\n      }\n\n      params = this._plugin.requestBuilder.buildParams(params, service)\n      if (params !== null) {\n        Log.notice(service + ' ' + params.system)\n        if (params.system === 'nicetest') {\n          // \"nicetest\" is the default accountCode.\n          // If found here, it's very likely that the customer has forgotten to set it.\n          Log.error(\n            'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n          )\n        }\n\n        new YBRequest(this._plugin.getHost(), service, params)\n          .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n          .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n          .send()\n      }\n    },\n\n    /**\n     * Uses given response to set fastdata response.\n     *\n     * @param {String} response Fastdata response as json string.\n     */\n    setData: function (response) {\n      try {\n        var resp = JSON.parse(response)\n        this.response.msg = response\n        this.response.host = Util.addProtocol(resp.q.h, this._httpSecure)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt || 5\n        this.response.beatTime = resp.q.bt || 30\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    /**\n     * Parse the response from the fastData service.\n     *\n     * @private\n     */\n    _receiveData: function (req, e) {\n      var msg = req.getXHR().response\n      this.setData(msg)\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request has failed.')\n    },\n\n    /**\n     * This method will increment the view index (_0, _1, _2...). The library handles this\n     * automatically, but some error flow might need calling this manually.\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Returns the current sessionId\n     *\n     * @returns {string} SessionId\n     */\n    getSessionId: function () {\n      return this._session\n    },\n\n    /**\n     * Sets the sessionId\n     *\n     * @param {String} sessionId Sets the session id.\n     */\n    setSessionId: function (sessionId) {\n      this._session = sessionId\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.sessionId = request.params.sessionId || this.getSessionId()\n      if (request.service === Constants.Service.PING ||\n        request.service === Constants.Service.START) {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n\n      if ([ // Unless infinity event\n        Constants.Service.NAV,\n        Constants.Service.SESSION_START,\n        Constants.Service.SESSION_STOP,\n        Constants.Service.EVENT\n      ].indexOf(request.service) === -1) {\n        request.params.code = request.params.code || this.getViewCode()\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Transform = __webpack_require__(6)\nvar HlsParser = __webpack_require__(20)\nvar CdnParser = __webpack_require__(21)\nvar LocationheaderParser = __webpack_require__(22)\nvar Log = __webpack_require__(0)\nvar Constants = __webpack_require__(3)\n\nvar ResourceTransform = Transform.extend(\n  /** @lends youbora.ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch HLS transportstreams and CDN-related info.\n     *\n     * @constructs ResourceTransform\n     * @extends youbora.Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      /** Defines if resourcetransform has finished working. */\n      this.isDone = false\n\n      this._plugin = plugin\n\n      this._realResource = null\n      this._initResource = null\n      this._cdnName = null\n      this._cdnNodeHost = null\n      this._cdnNodeTypeString = null\n      this._cdnNodeType = null\n      this._responses = {}\n\n      this._isBusy = false\n    },\n\n    /**\n     * Get the resource. If the transform is done, the real (parsed) resource will be returned\n     * Otherwise the initial one is returned.\n     *\n     * @return {string} The initial or parsed resource\n     */\n    getResource: function () {\n      if (this._plugin && this._plugin.options && this._plugin.options['content.resource']) {\n        return this._plugin.options['content.resource']\n      }\n      return this._realResource || this._initResource\n    },\n\n    /**\n     * Get the parsed CDN name.\n     *\n     * @return {string} The CDN name or null if unknown\n     */\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    /**\n     * Get the parsed CDN node.\n     *\n     * @return {string} The CDN node or null if unknown\n     */\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    /**\n     * Get the parsed CDN type string, as returned in the cdn header response.\n     *\n     * @return {string} The CDN type string\n     */\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    /**\n     * Get the parsed CDN type, parsed from the type string.\n     *\n     * @return {string} The CDN type\n     */\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Start the execution. Can be called more than once. If already running, it will be ignored,\n     * if ended it will restart.\n     * @param {string} resource the original resource\n     */\n    init: function (resource) {\n      if (!this._isBusy && !this.isDone) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        this._hlsEnabled = this._plugin.isParseHls()\n        this._cdnEnabled = this._plugin.isParseCdnNode()\n        this._locHeaderEnabled = this._plugin.isLocHeader()\n        this._cdnList = this._plugin.getParseCdnNodeList().slice() // clone\n        this._cdnNameHeader = this._plugin.getParseCdnNodeNameHeader()\n        CdnParser.setBalancerHeaderName(this._cdnNameHeader)\n\n        this._setTimeout()\n\n        if (this._locHeaderEnabled) {\n          this._parseLocHeader()\n        }\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    done: function () {\n      this.isDone = false\n      Transform.prototype.done.apply(this, arguments) // super\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseLocHeader: function () {\n      var headerParser = new LocationheaderParser()\n      headerParser.parse(this._initResource)\n      headerParser.on(LocationheaderParser.Event.DONE, function () {\n        this._realResource = headerParser.getResource()\n        this.done()\n      }.bind(this))\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsParser()\n      hlsTransform.on(HlsParser.Event.DONE, function () {\n        this._realResource = hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      if (this._cdnList.length > 0) {\n        var cdn = this._cdnList.shift()\n\n        if (this.getNodeHost()) return // abort\n\n        var cdnParser = CdnParser.create(cdn)\n\n        if (cdnParser) {\n          cdnParser.on(CdnParser.Event.DONE, function () {\n            this._responses = cdnParser.getResponses()\n            this._cdnName = cdnParser.getParsedCdnName()\n            this._cdnNodeHost = cdnParser.getParsedNodeHost()\n            this._cdnNodeTypeString = cdnParser.getParsedNodeTypeString()\n            this._cdnNodeType = cdnParser.getParsedNodeType()\n\n            if (this.getNodeHost()) {\n              this.done()\n            } else {\n              this._parseCDN()\n            }\n          }.bind(this))\n\n          // Run parse\n          cdnParser.parse(this.getResource(), this._responses)\n        } else {\n          this._parseCDN()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    /**\n     * Replaces the resource and/or Cdn info for the /start service.\n     *\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === Constants.Service.START) {\n        var lastSent = this._plugin.requestBuilder.lastSent\n        lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          lastSent.nodeTypeString = request.params.nodeTypeString = this.getNodeTypeString()\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YBRequest = __webpack_require__(5)\nvar Emitter = __webpack_require__(4)\nvar Log = __webpack_require__(0)\n\nvar HlsParser = Emitter.extend(\n  /** @lends youbora.HlsParser.prototype */\n  {\n    /**\n     * Class that asynchronously parses an HLS resource in order to get to the transportstream URL.\n     *\n     * The point behind this class is that some customers do not host the HLS manifest in the same\n     * host or even CDN where the actual content chunks are located.\n     *\n     * Since the CDN detection is performed with the resource url, it is essential that this\n     * resource url is pointing to the CDN that is actually hosting the chunks.\n     *\n     * HLS manifests can be multi-level so this class uses a recursive approach to get to the final\n     * chunk file.\n     *\n     * @constructs HlsParser\n     * @extends youbora.Emitter\n     * @memberof youbora\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(HlsParser.Event.DONE)\n    },\n\n    /**\n     * Starts the HLS parsing from the given resource. The first (outside) call should set the\n     * parentResource to null.\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)((\\?|\\;)\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    /**\n     * Get the parsed resource. Will be null/undefined if parsing is not yet started and can be a partial\n     * (an intermediate manifest) result if the parser is still running.\n     *\n     * @return {string} The parsed resource.\n     */\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends youbora.HlsParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this HlsParser is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = HlsParser\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\nvar YBRequest = __webpack_require__(5)\n\nvar CdnParser = Emitter.extend(\n  /** @lends youbora.CdnParser.prototype */\n  {\n    /**\n     * Class that asynchronously tries to get information about the CDN where a given resource is\n     * hosted.\n     *\n     * The info we care about is the CDN code itself, the node host and node type.\n     *\n     * The CDN is queried with http HEAD requests. This only will work if the CDN has been properly\n     * configured.\n     *\n     * When HEAD requests are performed against the resources, the CDN returns a set of headers that\n     * contain info about the cdn header and/or cdn type.\n     *\n     * Each CDN is different; some require special headers to be set when the HEAD request is\n     * performed and others don't. Also, the info can come back in any fashion of ways, sometimes\n     * both type and host come in the same response header while sometimes they're in different\n     * headers. The format of these response headers is also different from CDN to CDN, so a\n     * different regex is used for each CDN.\n     *\n     * Lastly, as the values indicating the CDN type are also different, we need a specific mapping\n     * for each one.\n     *\n     * Every instance of this class will represent a 'way' of parsing the HEAD response. So an\n     * instance should be created for Level3, Akamai, Highwinds, etc...\n     *\n     * @constructs CdnParser\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {object} options This object represents the configuration of a certain CDN parsing\n     * methodology.\n     * @param {string} options.cdnName see {@link CdnParser#setCdnName}.\n     * @param {array} options.parsers see {@link CdnParser#addParser}.\n     * @param {array} options.requestHeaders see {@link CdnParser#setRequestHeader}.\n     * @param {function} options.parseType see {@link CdnParser#setParseType}.\n     */\n    constructor: function (options) {\n      this._options = Util.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n\n      this._responses = {}\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(CdnParser.Event.DONE)\n    },\n\n    /**\n     * Adds an object that represents a parse step of the headers.\n     *\n     * Each parser item will define the element parsed (whether if it is a host, a type, both...)\n     * a headerName to parse (ie: x-cache) and a regex to execute over that header.\n     *\n     * @param {object} parser\n     * @param {string} parser.element Which element will be parsed from the request.\n     * Use {@link CdnParser.ElementType} enum.\n     * @param {string} parser.headerName Name of the header to parse.\n     * @param {regex} parser.regex Regex to match against the header content.\n     *\n     * @return itself to chain method calls\n     */\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    /**\n     * Sets the cdn name. Note that this names are provided by Youbora and must coincede with the\n     * ones offered here: {@link http://mapi.youbora.com:8081/cdns}.\n     *\n     * @return itself to chain method calls\n     */\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    /**\n     * if this CDN requires special headers to be set in order to respond with the info we want,\n     * add them using this method.\n     *\n     * @param {string} key Name of the header.\n     * @param {string} value Content of the header.\n     *\n     * @return itself to chain method calls\n     */\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    /**\n     * Adds a parsing function for parsing the type (hit or miss) of the request.\n     *\n     * Parser fucntion will receive a string parsed from a type header (see\n     * {@link CdnParser#addParser}). Should return 1 in case of HIT, 2 in case of MISS and\n     * 0 otherwise.\n     *\n     * @param {function} parser Parsing function\n     *\n     * @return itself to chain method calls\n     */\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    /**\n     * Get parsed CDN name.\n    *\n    * @return {string} The CDN name or null if unknown\n    */\n    getParsedCdnName: function () {\n      return this._cdnName\n    },\n\n    /**\n     * Get the parsed CDN node.\n     *\n     * @return {string} The CDN node or null if unknown\n     */\n    getParsedNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    /**\n     * Get the parsed CDN type string, as returned in the cdn header response.\n     *\n     * @return {string} The CDN type string\n     */\n    getParsedNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    /**\n     * Get the parsed CDN type, parsed from the type string.\n     *\n     * @return {string} The CDN type\n     */\n    getParsedNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Returns the request responses from this CdnParser.\n     * This is filled with the responses from the constructor, or created empty if null.\n     * Then the performed request response (if any) is added to this map.\n     * Call this method after \"using\" the CdnParser and pass the responses to the following\n     * CdnParser so it can use the responses if it applies.\n     * @return the request responses\n     */\n    getResponses: function () {\n      return this._responses\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      this._responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (this._responses[headerString]) {\n        this._parseResponse(this._responses[headerString])\n      } else {\n        this._requestResponse(url)\n      }\n    },\n\n    _requestResponse: function (url) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n        // cache: true\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        this._responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(this._responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case CdnParser.ElementType.HOST:\n              this._cdnNodeHost = matches[1]\n              break\n            case CdnParser.ElementType.TYPE:\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case CdnParser.ElementType.HOST_AND_TYPE:\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case CdnParser.ElementType.TYPE_AND_HOST:\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case CdnParser.ElementType.NAME:\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends youbora.CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     *\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n\n    /**\n     * Possible different bits of info we can get from a header.\n     *\n     * @enum\n     */\n    ElementType: {\n      HOST: 'host',\n      TYPE: 'type',\n      HOST_AND_TYPE: 'host+type',\n      TYPE_AND_HOST: 'type+host',\n      NAME: 'name'\n    },\n\n    /**\n     * List of available CDN parsers.\n     * @private\n     */\n    _cdnConfigs: {},\n\n    /**\n     * This is a special case. The BalancerCdnParser is a custom CDN definition\n     * that tries to get the CDN name directly from one of the headers. This method can be used\n     * as a shortcut to creating a new CDN definition.\n     *\n     * This is usually used with DNS-based load balance services, such as Cedexis.\n     *\n     * Youboralib will use this method by itself using the configuration passed in the\n     * {@link Options}.\n     *\n     * @param {string} cdnNameHeader the header response name where to get the CDN name from.\n     */\n    setBalancerHeaderName: function (name) {\n      CdnParser._cdnConfigs.Balancer.parsers[0].headerName = name\n    },\n\n    /**\n     * Create one of the pre-defined CDN parsers. This method will be called with the keys passed\n     * to {@link Options#'parse.CdnNode.list'}.\n     *\n     * Before using this method, configs must be added first using {@link CdnParser.add}.\n     *\n     * @param {string} cdnName Name of the CDN\n     * @return {CdnParser} An instance or undefined if the names does not match any CDN.\n     */\n    create: function (key) {\n      if (CdnParser._cdnConfigs[key]) {\n        return new CdnParser(CdnParser._cdnConfigs[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnParser named ' + key)\n      }\n    },\n\n    /**\n     * Adds the given CdnParser's config to the available list. Objects sent must comply with\n     * CdnParser constructor.\n     *\n     * @param {string} key The name that will identify the CDN.\n     * @param {Object} config The parser that defines the CDN.\n     */\n    add: function (key, config) {\n      CdnParser._cdnConfigs[key] = config\n    }\n  }\n)\n\n// Adding built-in parsers\nCdnParser.add('Level3', __webpack_require__(35))\nCdnParser.add('Cloudfront', __webpack_require__(36))\nCdnParser.add('Akamai', __webpack_require__(37))\nCdnParser.add('Highwinds', __webpack_require__(38))\nCdnParser.add('Fastly', __webpack_require__(39))\nCdnParser.add('Balancer', __webpack_require__(40))\n\nmodule.exports = CdnParser\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\nvar YBRequest = __webpack_require__(5)\n\nvar LocationheaderParser = Emitter.extend(\n  /** @lends youbora.LocationheaderParser.prototype */\n  {\n\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(LocationheaderParser.Event.DONE)\n    },\n\n    /**\n     * Parses given header to check.\n     */\n    parse: function (url) {\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: {},\n        // cache: true\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        this._response = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(this._response)\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      headers.split('\\n').forEach(function (line) {\n        if (line.startsWith('Location:')) {\n          this._realResource = line.slice(10)\n        }\n      }.bind(this))\n      this.done()\n    },\n\n    /**\n   * Get the parsed resource. Will be null/undefined if parsing is not yet started\n   *\n   * @return {string} The parsed resource.\n   */\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends youbora.CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     *\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n  }\n)\n\nmodule.exports = LocationheaderParser\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\n\nvar Options = YouboraObject.extend(\n  /** @lends youbora.Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * Any value specified in this class, if set, will override the info the plugin is able to get\n     * on its own.\n     *\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [enabled=true] If false, the plugin won't send NQS requests. */\n      this['enabled'] = true\n\n      /**\n       * @prop {boolean} [httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null/undefined it will use '//'.\n       */\n      this['httpSecure'] = null\n\n      /** @prop {string} [host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['accountCode'] = 'nicetest'\n\n      /** @prop {string} [username] User ID value inside your system. */\n      this['username'] = null\n\n      /**\n       *  @prop {boolean} [obfuscateIp=false]\n       * If true, the view will have the IP obfuscated\n       */\n      this['obfuscateIp'] = false\n\n      /** @prop {string} [userType] User type. */\n      this['userType'] = null\n\n      /** @prop {string} [referer] Site url.\n       *  By default window.location.href */\n      this['referer'] = null\n\n      /**\n       * @prop {array<string>} [experiments]\n       * Experiment id list\n       */\n      this['experiments'] = []\n\n      // PARSERS\n\n      /**\n       * @prop {boolean} [parse.Hls=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.hls'] = false\n\n      /**\n       * @prop {string} [parse.CdnNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.cdnNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CdnNode=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.cdnNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CdnNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.cdnNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      /**\n       * @prop {boolean} [parse.CdnNode=false]\n       * If true the plugin will look for location value in manifest header to retrieve the actual resource\n       * It might slow performance down.\n       */\n      this['parse.locationHeader'] = false\n\n      // NETWORK\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      // DEVICE\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      // CONTENT\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {boolean} [content.isLive.noSeek] True if the player seeks automatically when resumed or ending buffer. Only for live content */\n      this['content.isLive.noSeek'] = false\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {int} [content.fps] Frames per second of the content in the current moment. */\n      this['content.fps'] = null\n\n      /** @prop {int} [content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} [content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} [content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /** @prop {string} [content.cdnNode] CDN node id */\n      this['content.cdnNode'] = null\n\n      /** @prop {int} [content.cdnType] CDN node type\n       * TCP_HIT / HIT: 1\n       * TCP_MISS / MISS: 2\n       * TCP_MEM_HIT: 3\n       * TCP_IMS_HIT: 4\n       */\n      this['content.cdnType'] = null\n\n      /**\n       * @prop {object} [content.metadata]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      /** @prop {string} [content.streamingProtocol] Name of the streaming media protocol.\n       * Can be:\n       *   - HDS\t(Adobe HDS)\n       *   - HLS\t(Apple HLS)\n       *   - MSS\t(Microsoft Smooth Streaming)\n       *   - DASH\t(MPEG-DASH)\n       *   - RTMP\t(Adobe RTMP)\n       *   - RTP\t(RTP)\n       *   - RTSP\t(RTSP)\n       */\n      this['content.streamingProtocol'] = null\n\n      // ADS\n\n      /**\n       * @prop {object} [ad.metadata]\n       * Item containing mixed extra information about ads like: request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      /**\n       * @prop {string} [ad.campaign]\n       * String containing the name of the campaign\n       */\n      this['ad.campaign'] = null\n\n      /**\n       * @prop {string} [ad.resource]\n       * String containing the ad resource\n       */\n      this['ad.resource'] = null\n\n      /**\n       * @prop {string} [ad.title]\n       * String containing the title of the campaign\n       */\n      this['ad.title'] = null\n\n      /**\n       * @prop {boolean} [ad.ignore]\n       * False by default.\n       * If true, youbora blocks ad events and calculates jointime ignoring ad time.\n       */\n      this['ad.ignore'] = false\n\n      /**\n       * @prop {int} [ad.afterStop]\n       * 0 by default.\n       * Set to integer positive value indicating how many ads\n       * will be shown as post-rolls if they do it after content player triggers stop event.\n       * Set to -1 to block automatic fireStop, manual call required.\n       * Manual call using fireStop({end: true})\n       */\n      this['ad.afterStop'] = 0\n\n      // BACKGROUND\n\n      /**\n       *  @prop {boolean} [background.enabled=false]\n       * If true, plugin will send background/foreground events\n       * Different device behaviour is settable in background.settings\n       */\n      this['background.enabled'] = true\n\n      /**\n       *  @prop {string} [background.settings]\n       * Action to do when the browser goes to background.\n       * Options are 'stop', 'pause', and '' for no action.\n       * stop will be used to stop the view and track post-foreground events in a new view\n       * pause will be used when after foreground event, an action like pressing play button is expected to resume the content\n       * '' will be used if the content can be played in background\n       * If not defined, specific device options will be used\n       * background.setings.android / background.settings.iphone / background.settings.desktop / background.settings.tv\n       * Default specific device values are stop for android and iphone, nothing for desktop.\n       */\n      this['background.settings'] = null\n\n      /**\n       *  @prop {string} [background.settings.android='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is android type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.android'] = 'stop'\n\n      /**\n       *  @prop {string} [background.settings.iphone='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is iphone type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.iphone'] = 'stop'\n\n      /**\n       *  @prop {string} [background.settings.desktop=null]\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is desktop type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * Null by default\n       */\n      this['background.settings.desktop'] = null\n\n      /**\n       *  @prop {string} [background.settings.tv='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is smartTV type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.tv'] = 'stop'\n\n      // EXTRAPARAMS\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      /** @prop {string} [extraparam.11] Custom parameter 11. */\n      this['extraparam.11'] = null\n\n      /** @prop {string} [extraparam.12] Custom parameter 12. */\n      this['extraparam.12'] = null\n\n      /** @prop {string} [extraparam.13] Custom parameter 13. */\n      this['extraparam.13'] = null\n\n      /** @prop {string} [extraparam.14] Custom parameter 14. */\n      this['extraparam.14'] = null\n\n      /** @prop {string} [extraparam.15] Custom parameter 15. */\n      this['extraparam.15'] = null\n\n      /** @prop {string} [extraparam.16] Custom parameter 16. */\n      this['extraparam.16'] = null\n\n      /** @prop {string} [extraparam.17] Custom parameter 17. */\n      this['extraparam.17'] = null\n\n      /** @prop {string} [extraparam.18] Custom parameter 18. */\n      this['extraparam.18'] = null\n\n      /** @prop {string} [extraparam.19] Custom parameter 19. */\n      this['extraparam.19'] = null\n\n      /** @prop {string} [extraparam.20] Custom parameter 20. */\n      this['extraparam.20'] = null\n\n      /** @prop {string} [ad.extraparam.1] Ad custom parameter 1. */\n      this['ad.extraparam.1'] = null\n\n      /** @prop {string} [ad.extraparam.2] Ad custom parameter 2. */\n      this['ad.extraparam.2'] = null\n\n      /** @prop {string} [ad.extraparam.3] Ad custom parameter 3. */\n      this['ad.extraparam.3'] = null\n\n      /** @prop {string} [ad.extraparam.4] Ad custom parameter 4. */\n      this['ad.extraparam.4'] = null\n\n      /** @prop {string} [ad.extraparam.5] Ad custom parameter 5. */\n      this['ad.extraparam.5'] = null\n\n      /** @prop {string} [ad.extraparam.6] Ad custom parameter 6. */\n      this['ad.extraparam.6'] = null\n\n      /** @prop {string} [ad.extraparam.7] Ad custom parameter 7. */\n      this['ad.extraparam.7'] = null\n\n      /** @prop {string} [ad.extraparam.8] Ad custom parameter 8. */\n      this['ad.extraparam.8'] = null\n\n      /** @prop {string} [ad.extraparam.9] Ad custom parameter 9. */\n      this['ad.extraparam.9'] = null\n\n      /** @prop {string} [ad.extraparam.10] Ad custom parameter 10. */\n      this['ad.extraparam.10'] = null\n\n      /** @prop {number} [session.expire=21600000] Time until infinity session expires in ms. */\n      this['session.expire'] = 21600000\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      base = base || this\n      if (typeof options !== 'undefined') {\n        for (var key in options) {\n          if (typeof base[key] === 'object' && base[key] !== null) {\n            this.setOptions(options[key], base[key])\n          } else {\n            base[key] = options[key]\n          }\n        }\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Log = __webpack_require__(0)\n\nvar prefix = 'youbora'\n\n/**\n * This class manages data sotrage in the browser memory.\n *\n * @extends youbora.Emitter\n * @memberof youbora\n */\nvar YouboraStorage = YouboraObject.extend(\n  /** @lends youbora.YouboraStorage.prototype */\n  {\n    /**\n     * Saves in localStorage or equivalent\n     *\n     * @param {string} key Key of the value. 'youbora.' will be appended.\n     * @param {string} value Value.\n     */\n    setLocal: function (key, value) {\n      try {\n        if (!localStorage) {\n          Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return localStorage.setItem('youbora.' + key, value)\n        }\n      }\n      catch (err) {\n        Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Reads from localStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     */\n    getLocal: function (key) {\n      try {\n        if (!localStorage) {\n          Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return localStorage.getItem(prefix + '.' + key)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Saves in sessionStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     * @param {string} value Value.\n     */\n    setSession: function (key, value) {\n      try {\n        if (!sessionStorage) {\n          Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return sessionStorage.setItem(prefix + '.' + key, value)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Reads from sessionStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     */\n    getSession: function (key) {\n\n      try {\n        if (!sessionStorage) {\n          Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return sessionStorage.getItem(prefix + '.' + key)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n      }\n      return null\n    }\n  }\n)\n\nmodule.exports = YouboraStorage\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Log = __webpack_require__(0)\n\nvar startParams = [\n  'accountCode',\n  'username',\n  'rendition',\n  'player',\n  'title',\n  'title2',\n  'live',\n  'mediaDuration',\n  'mediaResource',\n  'transactionCode',\n  'properties',\n  'cdn',\n  'playerVersion',\n  'param1',\n  'param2',\n  'param3',\n  'param4',\n  'param5',\n  'param6',\n  'param7',\n  'param8',\n  'param9',\n  'param10',\n  'param11',\n  'param12',\n  'param13',\n  'param14',\n  'param15',\n  'param16',\n  'param17',\n  'param18',\n  'param19',\n  'param20',\n  'obfuscateIp',\n  'p2pEnabled',\n  'pluginVersion',\n  'pluginInfo',\n  'isp',\n  'connectionType',\n  'ip',\n  'deviceCode',\n  'preloadDuration',\n  'referer',\n  'userType',\n  'streamingProtocol',\n  'householdId',\n  'experiments'\n]\n\nvar adStartParams = [\n  'playhead',\n  'adTitle',\n  'adPosition',\n  'adDuration',\n  'adCampaign',\n  'adResource',\n  'adPlayerVersion',\n  'adProperties',\n  'adAdapterVersion',\n  'extraparam1',\n  'extraparam2',\n  'extraparam3',\n  'extraparam4',\n  'extraparam5',\n  'extraparam6',\n  'extraparam7',\n  'extraparam8',\n  'extraparam9',\n  'extraparam10'\n]\n\nvar RequestBuilder = YouboraObject.extend(\n  /** @lends youbora.RequestBuilder.prototype */\n  {\n    /**\n     * This class helps building params associated with each event: /start, /joinTime...\n     *\n     * @constructs RequestBuilder\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin A Plugin instance\n     */\n    constructor: function (plugin) {\n      this._plugin = plugin\n      this._adNumber = 0\n\n      /** Stores a list of the last params fetched */\n      this.lastSent = {}\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {Array.string} paramList A list of params to fetch.\n     * @param {bool} onlyDifferent If true, only fetches params that have changed\n     */\n    fetchParams: function (params, paramList, onlyDifferent) {\n      params = params || {}\n      paramList = paramList || []\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i]\n\n        if (params[param]) { continue }\n        var getterName = RequestBuilder.getters[param]\n\n        if (this._plugin[getterName]) {\n          var value = this._plugin[getterName]()\n          if (value !== null && (!onlyDifferent || this.lastSent[param] !== value)) {\n            params[param] = value\n            this.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }\n\n      return params\n    },\n\n    /**\n     * Adds to params object all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {string} service The name of the service. Use {@link Plugin.Service} enum.\n     */\n    buildParams: function (params, service) {\n      params = params || {}\n      this.fetchParams(params, RequestBuilder.params[service], false)\n      this.fetchParams(params, RequestBuilder.differentParams[service], true)\n      return params\n    },\n\n    /**\n     * Creates an adnumber if it does not exist and stores it in lastSent. If it already exists,\n     * it is incremented by 1.\n     *\n     * @returns {number} adNumber\n     */\n    getNewAdNumber: function () {\n      var adNumber = this.lastSent.adNumber\n      if (adNumber && this.lastSent.adPosition === this._plugin.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this.lastSent.adNumber = adNumber\n      return adNumber\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @returns {Object} params\n     */\n    getChangedEntities: function () {\n      return this.fetchParams({}, RequestBuilder.differentParams['entities'], true)\n    }\n  },\n  /** @lends youbora.RequestBuilder */\n  {\n    // Static Members\n\n    /** List of params used by each service */\n    params: {\n      '/data': ['system', 'pluginVersion', 'requestNumber'],\n\n      '/init': startParams,\n      '/start': startParams,\n      '/joinTime': ['joinDuration', 'playhead', 'mediaDuration'],\n      '/pause': ['playhead'],\n      '/resume': ['pauseDuration', 'playhead'],\n      '/seek': ['seekDuration', 'playhead'],\n      '/bufferUnderrun': ['bufferDuration', 'playhead'],\n      '/error': ['player'].concat(startParams),\n      '/stop': ['bitrate', 'playhead', 'pauseDuration'],\n\n      '/adInit': adStartParams,\n      '/adStart': adStartParams,\n      '/adJoin': ['playhead', 'adPosition', 'adJoinDuration', 'adPlayhead'],\n      '/adPause': ['playhead', 'adPosition', 'adPlayhead'],\n      '/adResume': ['playhead', 'adPosition', 'adPlayhead', 'adPauseDuration'],\n      '/adBufferUnderrun': ['playhead', 'adPosition', 'adPlayhead', 'adBufferDuration'],\n      '/adStop': ['playhead', 'adPosition', 'adPlayhead', 'adBitrate', 'adTotalDuration', 'pauseDuration'],\n      '/adClick': ['playhead', 'adPosition', 'adPlayhead'],\n      '/adError': adStartParams,\n      '/adBlocked': adStartParams,\n      '/ping': ['droppedFrames', 'playrate', 'cdnDownloadedTraffic', 'p2pDownloadedTraffic', 'uploadTraffic', 'latency', 'packetLoss', 'packetSent'],\n\n      '/infinity/session/start': [\n        'accountCode',\n        'username',\n        'navContext',\n        'route',\n        'page'\n      ],\n      '/infinity/session/stop': [],\n      '/infinity/session/nav': ['navContext', 'username', 'route', 'page'],\n      '/infinity/session/beat': [],\n      '/infinity/event': ['accountCode']\n    },\n\n    /** List of params used by each service (only if they are different) */\n    differentParams: {\n      '/join': [\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource'\n      ],\n      '/adJoin': ['adTitle', 'adDuration', 'adResource'],\n      'entities': [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'param11',\n        'param12',\n        'param13',\n        'param14',\n        'param15',\n        'param16',\n        'param17',\n        'param18',\n        'param19',\n        'param20',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ]\n    },\n\n    /** List of params and its related getter */\n    getters: {\n      requestNumber: 'getRequestNumber',\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n      userType: 'getUserType',\n      streamingProtocol: 'getStreamingProtocol',\n      obfuscateIp: 'getObfuscateIp',\n      householdId: 'getHouseholdId',\n      latency: 'getLatency',\n      packetLoss: 'getPacketLoss',\n      packetSent: 'getPacketSent',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n      param11: 'getExtraparam11',\n      param12: 'getExtraparam12',\n      param13: 'getExtraparam13',\n      param14: 'getExtraparam14',\n      param15: 'getExtraparam15',\n      param16: 'getExtraparam16',\n      param17: 'getExtraparam17',\n      param18: 'getExtraparam18',\n      param19: 'getExtraparam19',\n      param20: 'getExtraparam20',\n\n      extraparam1: 'getAdExtraparam1',\n      extraparam2: 'getAdExtraparam2',\n      extraparam3: 'getAdExtraparam3',\n      extraparam4: 'getAdExtraparam4',\n      extraparam5: 'getAdExtraparam5',\n      extraparam6: 'getAdExtraparam6',\n      extraparam7: 'getAdExtraparam7',\n      extraparam8: 'getAdExtraparam8',\n      extraparam9: 'getAdExtraparam9',\n      extraparam10: 'getAdExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adCampaign: 'getAdCampaign',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adAdapterVersion: 'getAdAdapterVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      preloadDuration: 'getPreloadDuration',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      adPauseDuration: 'getAdPauseDuration',\n      adTotalDuration: 'getAdTotalDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString',\n\n      route: 'getReferer',\n      sessionId: 'getSessionId',\n      navContext: 'getContext',\n      page: 'getPageName',\n\n      cdnDownloadedTraffic: 'getCdnTraffic',\n      p2pDownloadedTraffic: 'getP2PTraffic',\n      p2pEnabled: 'getIsP2PEnabled',\n      uploadTraffic: 'getUploadTraffic',\n\n      experiments: 'getExperiments'\n    }\n\n  }\n)\n\nmodule.exports = RequestBuilder\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\n/**\n * This static class provides device detection methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar BackgroundDetector = YouboraObject.extend({\n  constructor: function (plugin) {\n    this.plugin = plugin\n    this.isInBackground = false\n    this.listenerReference = this._visibilityListener.bind(this)\n    this._reset()\n  },\n\n  startDetection: function (windowRef) {\n    if (!this.isBackgroundDetectorStarted) {\n      if (windowRef) this.windowObject = windowRef\n      if (this.windowObject && this.windowObject.document) {\n        this.isBackgroundDetectorStarted = true\n        this.windowObject.document.addEventListener(\"visibilitychange\", this.listenerReference)\n      }\n    } else {\n      if (windowRef != this.windowObject) {\n        this.stopDetection()\n        this.isBackgroundDetectorStarted = false\n        this.startDetection(windowRef)\n      }\n    }\n  },\n\n  stopDetection: function () {\n    if (this.isBackgroundDetectorStarted) {\n      this.windowObject.document.removeEventListener(\"visibilitychange\", this.listenerReference)\n      this._reset()\n    }\n  },\n\n  _reset: function () {\n    this.isBackgroundDetectorStarted = false\n    this.windowObject = typeof window !== 'undefined' ? window : undefined\n  },\n\n  _visibilityListener: function (e) {\n    if (this.windowObject.document.visibilityState === 'hidden') { // to Background\n      this.isInBackground = true\n      var settings = this._getSettings()\n      if (typeof settings === \"string\") {\n        switch (settings) {\n          case 'stop':\n            this._fireStop()\n            break\n          case 'pause':\n            this._firePause()\n            break\n        }\n      }\n    } else if (this.windowObject.document.visibilityState === 'visible') { // to Foreground\n      this.isInBackground = false\n      // nothing yet\n    }\n  },\n\n  _getSettings: function () {\n    if (typeof this.plugin.options['background.settings'] === \"string\" && this.plugin.options['background.settings']) {\n      return this.plugin.options['background.settings']\n    }\n    if (this.plugin.deviceDetector.isSmartTV()) {\n      return this.plugin.options['background.settings.tv']\n    }\n    if (this.plugin.deviceDetector.isDesktop()) {\n      return this.plugin.options['background.settings.desktop']\n    }\n    if (this.plugin.deviceDetector.isAndroid()) {\n      return this.plugin.options['background.settings.android']\n    }\n    if (this.plugin.deviceDetector.isIphone()) {\n      return this.plugin.options['background.settings.iphone']\n    }\n  },\n\n  _firePause: function () {\n    this.adsAdapter = this.plugin.getAdsAdapter()\n    this.contentAdapter = this.plugin.getAdapter()\n    if (this.adsAdapter && this.adsAdapter.flags.isStarted && !this.adsAdapter.flags.isEnded) {\n      this.adsAdapter.firePause()\n    } else if (this.contentAdapter && this.contentAdapter.flags.isStarted && !this.contentAdapter.flags.isEnded) {\n      this.contentAdapter.firePause()\n    }\n  },\n\n  _fireStop: function () {\n    this.adsAdapter = this.plugin.getAdsAdapter()\n    this.contentAdapter = this.plugin.getAdapter()\n    if (this.adsAdapter && this.adsAdapter.flags.isStarted && !this.adsAdapter.flags.isEnded) {\n      this.adsAdapter.fireStop()\n    }\n    if (this.contentAdapter) {\n      this.contentAdapter.fireStop({ end: true })\n    } else {\n      this.plugin.fireStop({ end: true })\n    }\n  },\n\n  canBlockStartCalls: function () {\n    return (\n      this.plugin.backgroundDetector.isInBackground &&\n      this.plugin.options['background.enabled'] === true &&\n      this.plugin.backgroundDetector._getSettings() // it is stop or pause\n    )\n  }\n})\n\nmodule.exports = BackgroundDetector\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\n/**\n * This static class provides device detection methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar DeviceDetector = YouboraObject.extend({\n  constructor: function () {\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      this._isSmartTV = navigator.userAgent.toLowerCase().match(/smarttv/) ||\n        navigator.userAgent.toLowerCase().match(/smart-tv/) ||\n        navigator.userAgent.toLowerCase().match(/appletv/) ||\n        navigator.userAgent.toLowerCase().match(/apple tv/)\n      this._isIphoneDevice = navigator.userAgent.match(/iPhone|iPad|iPod/i) !== null\n      this._isAndroidDevice = navigator.userAgent.match(/Android/) !== null\n      this._isSmartphoneDevice = !this._isSmartTV && (this._isIphoneDevice || this._isAndroidDevice)\n      this._isDesktopDevice = !this._isSmartphoneDevice && !this._isSmartTV\n    }\n  },\n\n  isIphone: function () {\n    return this._isIphoneDevice\n  },\n\n  isAndroid: function () {\n    return this._isAndroidDevice\n  },\n\n  isSmartphone: function () {\n    return this._isSmartphoneDevice\n  },\n\n  isDesktop: function () {\n    return this._isDesktopDevice\n  },\n\n  isSmartTV: function () {\n    return this._isSmartTV\n  }\n})\n\nmodule.exports = DeviceDetector\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Timer = __webpack_require__(12)\nvar Chrono = __webpack_require__(7)\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends youbora.PlayheadMonitor.prototype */\n  {\n    /**\n     * This class periodically checks the player's playhead in order to infer buffer and/or seek\n     * events.\n     *\n     * Instances of this class are bounded to an {@link Adapter} and fires its buffer and seek\n     * start and end methods.\n     *\n     * In order to use this feature, {@link Adapter#monitorPlayhead} should be used.\n     *\n     * @constructs PlayheadMonitor\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {Adapter} adapter Adapter to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (adapter, type, interval) {\n      this._adapter = adapter\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._lastPlayhead = 0\n\n      if (interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), interval)\n      }\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    skipNextTick: function () {\n      this._lastPlayhead = 0\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var bufferThreshold = deltaTime * PlayheadMonitor.kBUFFER_THRESHOLD_RATIO\n      var seekThreshold = deltaTime * PlayheadMonitor.kSEEK_THRESHOLD_RATIO\n\n      if (this._adapter.getPlayrate && this._adapter.getPlayrate() && this._adapter.getPlayrate() != 1) {\n        bufferThreshold *= this._adapter.getPlayrate()\n        seekThreshold *= this._adapter.getPlayrate()\n      }\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // youbora.Log.debug('curr: ' + currentPlayhead + ' last: ' + this._lastPlayhead + ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._adapter.flags.isPaused &&\n          !this._adapter.flags.isSeeking\n        ) {\n          this._adapter.fireBufferBegin(null, false)\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0) {\n          this._adapter.fireSeekBegin(null, false)\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled) {\n          this._adapter.fireSeekEnd()\n        }\n        if (this._bufferEnabled) {\n          this._adapter.fireBufferEnd()\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns adapter's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._adapter.getPlayhead()\n    }\n  },\n  /** @lends youbora.PlayheadMonitor */\n  {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Buffer threshold */\n    kBUFFER_THRESHOLD_RATIO: 0.5,\n\n    /** Seek threshold */\n    kSEEK_THRESHOLD_RATIO: 2\n  })\n\nmodule.exports = PlayheadMonitor\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NAME = exports.VERSION = undefined;\n\nvar _playkitJs = __webpack_require__(9);\n\nvar _youbora = __webpack_require__(30);\n\nvar _youbora2 = _interopRequireDefault(_youbora);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _youbora2.default;\nexports.VERSION = \"0.3.3\";\nexports.NAME = \"playkit-js-youbora\";\n\n/**\n * The plugin name.\n * @type {string}\n * @const\n */\n\nvar pluginName = \"youbora\";\n/**\n * Register the plugin in player's registry.\n */\n(0, _playkitJs.registerPlugin)(pluginName, _youbora2.default);\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _playkitJs = __webpack_require__(9);\n\nvar _youboralib = __webpack_require__(10);\n\nvar _youboralib2 = _interopRequireDefault(_youboralib);\n\nvar _adapter = __webpack_require__(54);\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Youbora plugin for analytics.\n * @classdesc\n */\nvar Youbora = function (_BasePlugin) {\n  _inherits(Youbora, _BasePlugin);\n\n  _createClass(Youbora, null, [{\n    key: 'isValid',\n\n\n    /**\n     * Define under what conditions the youbora plugin is valid.\n     * @returns {boolean} - Whether the plugin is valid or not.\n     * @static\n     */\n    value: function isValid() {\n      return true;\n    }\n\n    /**\n     * @constructor\n     * @param {string} name - The name of the plugin.\n     * @param {Player} player - Access to the player reference.\n     * @param {Object} config - The plugin configuration.\n     */\n\n\n    /**\n     * The default configuration of the plugin.\n     * @type {Object}\n     * @static\n     */\n\n  }]);\n\n  function Youbora(name, player, config) {\n    _classCallCheck(this, Youbora);\n\n    var _this = _possibleConstructorReturn(this, (Youbora.__proto__ || Object.getPrototypeOf(Youbora)).call(this, name, player, config));\n\n    _this._youbora = new _youboralib2.default.Plugin(_this.config.options);\n    _this._youbora.setAdapter(new _adapter2.default(player, config));\n    _this._addBindings();\n    _this._setup();\n    return _this;\n  }\n\n  /**\n   * Updates the configuration of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @override\n   * @returns {void}\n   */\n\n\n  _createClass(Youbora, [{\n    key: 'updateConfig',\n    value: function updateConfig(update) {\n      _get(Youbora.prototype.__proto__ || Object.getPrototypeOf(Youbora.prototype), 'updateConfig', this).call(this, update);\n      this._youbora.setOptions(update.options);\n      if (this._youbora.getAdapter()) {\n        this._youbora.getAdapter().config = update;\n      }\n      this._addPlayerMetadata();\n    }\n\n    /**\n     * Reset the plugin\n     * @return {void}\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {}\n\n    /**\n     * Add the player metadata to the plugin config.\n     * @function\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_addPlayerMetadata',\n    value: function _addPlayerMetadata() {\n      this._youbora.setOptions({\n        properties: {\n          kalturaInfo: {\n            entryId: this.config.entryId,\n            sessionId: this.config.sessionId,\n            uiConfId: this.config.uiConfId\n          }\n        }\n      });\n    }\n\n    /**\n     * Add the necessary bindings.\n     * @function\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_addBindings',\n    value: function _addBindings() {\n      // Bind the plugin logger to the youbora sdk logger\n      this._youbora.getAdapter().bindLogger(this.logger);\n    }\n\n    /**\n     * Plugin setup operations.\n     * @function\n     * @private\n     * @returns {void}\n     */\n\n  }, {\n    key: '_setup',\n    value: function _setup() {}\n\n    /**\n     * Plugin destroy operations.\n     * @function\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {}\n  }]);\n\n  return Youbora;\n}(_playkitJs.BasePlugin);\n\nYoubora.defaultConfig = {\n  options: {}\n};\nexports.default = Youbora;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"youboralib\",\"type\":\"lib\",\"tech\":\"js\",\"author\":\"Jordi Aguilar\",\"version\":\"6.2.3\",\"built\":\"2018-05-02\",\"repo\":\"https://bitbucket.org/npaw/lib-plugin-js.git\"}\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n/* eslint no-extend-native: \"off\" */\n\n/**\n * When executed, this function applies polyfills to the following functionalities:\n * Function.prototype.bind and\n * Array.prototype.forEach.\n *\n * @memberof youbora\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () { }\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n}\n\nmodule.exports = applyPolyfills\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nvar F = function () { }\n\n/** See Object.create. */\nmodule.exports = function (o) {\n  if (arguments.length > 1) {\n    throw Error('Second argument not supported')\n  }\n  if (o === null) {\n    throw Error('Cannot set a null [[Prototype]]')\n  }\n  if (typeof o !== 'object') {\n    throw TypeError('Argument must be an object')\n  }\n  F.prototype = o\n  return new F()\n}\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Transform = __webpack_require__(6)\nvar Constants = __webpack_require__(3)\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends youbora.Nqs6Transform.prototype */\n  {\n    /**\n     * This class ensures NQS6 backwards compatibility.\n     * Deprecated since NQS6 clusters are essentialy gone.\n     *\n     * @deprecated\n     * @constructs\n     * @extends youbora.Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'msg', 'msg')\n\n      if (request.service !== Constants.Service.JOIN) {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case Constants.Service.START:\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case Constants.Service.JOIN:\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case Constants.Service.SEEK:\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case Constants.Service.BUFFER:\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case Constants.Service.PING:\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'LEVEL3',\n  parsers: [{\n    element: 'host+type',\n    headerName: 'X-WR-Diag',\n    regex: /Host:(.+)\\sType:(.+)/\n  }],\n  requestHeaders: {\n    'X-WR-Diag': 'host'\n  },\n  parseType: function (type) {\n    if (type) {\n      if (\n        type.indexOf('TCP_HIT') === 0 ||\n        type.indexOf('TCP_MEM_HIT') === 0 ||\n        type.indexOf('TCP_IMS_HIT') === 0\n      ) {\n        return 1\n      } else if (type.indexOf('TCP_MISS') === 0) {\n        return 2\n      }\n    }\n\n    return 0\n  }\n}\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'CLOUDFRT',\n  parsers: [{\n    element: 'host',\n    headerName: 'X-Amz-Cf-Id',\n    regex: /(.+)/\n  }, {\n    element: 'type',\n    headerName: 'X-Cache',\n    regex: /(\\S+)\\s.+/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'Hit':\n        return 1\n      case 'Miss':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'AKAMAI',\n  parsers: [{\n    element: 'type+host',\n    headerName: 'X-Cache',\n    regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'TCP_HIT':\n        return 1\n      case 'TCP_MISS':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'HIGHNEGR',\n  parsers: [{\n    element: 'host+type',\n    headerName: 'X-HW',\n    regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'c':\n      case 'x':\n        return 1\n      default:\n        return 2\n    }\n  }\n}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'FASTLY',\n  parsers: [{\n    element: 'host',\n    headerName: 'X-Served-By',\n    regex: /([^,\\s]+)$/\n  }, {\n    element: 'type',\n    headerName: 'X-Cache',\n    regex: /([^,\\s]+)$/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'HIT':\n        return 1\n      case 'MISS':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n// {@see CdnParser}\n\nmodule.exports = {\n  parsers: [{\n    element: 'name',\n    headerName: null,\n    regex: /(.+)/\n  }]\n}\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Emitter = __webpack_require__(4)\nvar Timer = __webpack_require__(12)\nvar Chrono = __webpack_require__(7)\nvar Constants = __webpack_require__(3)\nvar Util = __webpack_require__(2)\n\nvar YBRequest = __webpack_require__(5)\nvar Communication = __webpack_require__(13)\nvar FlowTransform = __webpack_require__(42)\nvar ViewTransform = __webpack_require__(18)\nvar ResourceTransform = __webpack_require__(19)\n\nvar Options = __webpack_require__(23)\nvar YouboraStorage = __webpack_require__(24)\nvar RequestBuilder = __webpack_require__(25)\n\nvar YouboraInfinity = __webpack_require__(14)\n\nvar BackgroundDetector = __webpack_require__(26)\nvar DeviceDetector = __webpack_require__(27)\n\nvar Plugin = Emitter.extend(\n  /** @lends youbora.Plugin.prototype */\n  {\n    /**\n     * This is the main class of video analytics. You may want to have one instance for each video\n     * you want to track. Will need {@link Adapter}s for both content and ads.\n     *\n     * @constructs Plugin\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {Options} [options] An object complying with {@link Options} constructor.\n     * @param {Adapter} [adapter] If an adapter is provided, setAdapter will be immediately called.\n     */\n    constructor: function (options, adapter) {\n      /** Instance of youbora infinity. */\n      this.infinity = new YouboraInfinity(this)\n\n      /** This flags indicates that /init has been called. */\n      this.isInitiated = false\n\n      /** This flags indicate that the content is preloading. */\n      this.isPreloading = false\n\n      /** Chrono for preload times. */\n      this.preloadChrono = new Chrono()\n      this.initChrono = new Chrono()\n\n      /** Reference to {@link youbora.YouboraStorage} */\n      this.storage = new YouboraStorage()\n\n      /** Stored {@link Options} of the session. */\n      this.options = new Options(options)\n      this._adapter = null\n      this._adsAdapter = null\n      this._ping = new Timer(this._sendPing.bind(this), 5000)\n      this._beat = new Timer(this._sendBeat.bind(this), 30000)\n\n      this.requestBuilder = new RequestBuilder(this)\n\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.lastEventTime = null\n\n      if (adapter) this.setAdapter(adapter)\n\n      // FastData\n      this.viewTransform = new ViewTransform(this)\n      this.viewTransform.on(ViewTransform.Event.DONE, this._receiveData.bind(this))\n\n      if (this.getIsDataExpired()) {\n        this.viewTransform.init() // request a new data\n      } else {\n        this.viewTransform.setData(this.getStoredData()) // use stored data\n      }\n\n      this._initInfinity()\n\n      this.deviceDetector = new DeviceDetector()\n      this.backgroundDetector = new BackgroundDetector(this)\n      if (this.options['background.enabled']) this.backgroundDetector.startDetection()\n    },\n\n    /**\n     * This callback is called when a correct data response is received.\n     *\n     * @param {any} e Response from fastdata\n     */\n    _receiveData: function (e) {\n      this._ping.interval = e.target.response.pingTime * 1000\n      this._beat.interval = e.target.response.beatTime * 1000\n      this.storage.setSession('data', e.target.response.msg)\n\n      if (this.getIsSessionExpired()) {\n        this.viewTransform.setSessionId(this.viewTransform.response.code)\n        this.storage.setLocal('session', this.viewTransform.response.code)\n      } else {\n        this.viewTransform.setSessionId(this.getSessionId())\n      }\n    },\n\n    /**\n     * Reset all variables and stop all timers\n     * @private\n     */\n    _reset: function () {\n      this._stopPings()\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.isInitiated = false\n      this.isStarted = false\n      this.isPreloading = false\n      this.preloadChrono.reset()\n      this.initChrono.reset()\n    },\n\n    /**\n     * Creates and enqueues related request using {@link Communication#sendRequest}.\n     * It will fire will-send-events.\n     *\n     * @param {string} willSendEvent Name of the will-send event. Use {@link Plugin.Event} enum.\n     * @param {string} service Name of the service. Use {@link Constants.Service} enum.\n     * @param {Object} params Params of the request\n     * @private\n     */\n    _send: function (willSendEvent, service, params) {\n      var now = new Date().getTime()\n      if (this.lastEventTime && (now > (this.lastEventTime + 600000))) { // 600000ms = 10 minutes\n        // if last event was sent more than 10 minutes ago, it will use new view code\n        this.viewTransform.nextView()\n      }\n      this.lastEventTime = now\n      if (service === Constants.Service.STOP) {\n        this.lastEventTime = null\n      }\n\n      params = this.requestBuilder.buildParams(params, service)\n\n      if (this.getIsLive()) {\n        params.mediaDuration = undefined\n        params.playhead = undefined\n      }\n\n      var data = {\n        params: params,\n        plugin: this,\n        adapter: this.getAdapter(),\n        adsAdapter: this.getAdsAdapter()\n      }\n\n      this.emit(willSendEvent, data)\n\n      if (this._comm && params !== null && this.options.enabled) {\n        this.lastServeiceSent = service\n        this._comm.sendRequest(new YBRequest(null, service, params))\n      }\n    },\n\n    /**\n     * Initializes comm and its transforms.\n     * @private\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(new FlowTransform())\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      // this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Returns the current {@link youbora.Communication} instance.\n     *\n     * @returns {youbora.Communication} communication instance\n     */\n    getComm: function () {\n      return this._comm\n    },\n\n    /**\n     * Modifies current options. See {@link Options.setOptions}.\n     *\n     * @param {any} options\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n      if (typeof options['background.enabled'] === \"boolean\") {\n        if (options['background.enabled']) {\n          this.backgroundDetector.startDetection()\n        } else {\n          this.backgroundDetector.stopDetection()\n        }\n      }\n    },\n\n    /**\n     * Disable request sending.\n     */\n    disable: function () {\n      this.setOptions({ 'enabled': false })\n    },\n\n    /**\n     * Re-enable request sending.\n     */\n    enable: function () {\n      this.setOptions({ 'enabled': true })\n    }\n  },\n\n  /** @lends youbora.Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: Constants.WillSendEvent\n  }\n)\n\n// Apply Mixins\n// Plugin is actually a big class, I decided to separate the logic into\n// different mixin files to ease the maintainability of each file.\n// Filename convention will be plugin+xxxxx.js where xxxxx is the added functionality.\nUtil.assign(Plugin.prototype, __webpack_require__(43))\nUtil.assign(Plugin.prototype, __webpack_require__(46))\nUtil.assign(Plugin.prototype, __webpack_require__(47))\nUtil.assign(Plugin.prototype, __webpack_require__(48))\nUtil.assign(Plugin.prototype, __webpack_require__(49))\nUtil.assign(Plugin.prototype, __webpack_require__(50))\nUtil.assign(Plugin.prototype, __webpack_require__(51))\nUtil.assign(Plugin.prototype, __webpack_require__(52))\nUtil.assign(Plugin.prototype, __webpack_require__(53))\n\nmodule.exports = Plugin\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Transform = __webpack_require__(6)\nvar Constants = __webpack_require__(3)\n\n/**\n * This transform ensures that no requests will be sent before an /init or /start request.\n * As these are the two possible first requests that the API expects for a view.\n *\n * @constructs\n * @extends youbora.Transform\n * @memberof youbora\n * @name FlowTransform\n *\n * @param {Plugin} plugin Instance of {@link Plugin}\n */\nvar FlowTransform = Transform.extend(\n  /** @lends youbora.FlowTransform.prototype */\n  {\n    _services: [Constants.Service.INIT, Constants.Service.START],\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      if (this._isBusy && request != null) {\n        if (this._services.indexOf(request.service) !== -1) {\n          this.done()\n        } else if (request.service === Constants.Service.ERROR) {\n          return false\n        }\n      }\n\n      return Transform.prototype.isBlocking.apply(this, arguments)\n    }\n  }\n)\n\nmodule.exports = FlowTransform\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Constants = __webpack_require__(3)\n\nvar Adapter = __webpack_require__(15)\n\n// This file is designed to add extra functionalities to Plugin class\n\n/** @lends youbora.Plugin.prototype */\nvar PluginContentMixin = {\n  /**\n   * Sets an adapter for video content.\n   *\n   * @param {Adapter} adapter\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  setAdapter: function (adapter) {\n    if (adapter.plugin) {\n      Log.warn('Adapters can only be added to a single plugin')\n    } else {\n      this.removeAdapter()\n\n      this._adapter = adapter\n      adapter.plugin = this\n\n      // Register listeners\n      adapter.on(Adapter.Event.INIT, this._initListener.bind(this))\n      adapter.on(Adapter.Event.START, this._startListener.bind(this))\n      adapter.on(Adapter.Event.JOIN, this._joinListener.bind(this))\n      adapter.on(Adapter.Event.PAUSE, this._pauseListener.bind(this))\n      adapter.on(Adapter.Event.RESUME, this._resumeListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_BEGIN, this._seekBeginListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_END, this._seekEndListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_END, this._bufferEndListener.bind(this))\n      adapter.on(Adapter.Event.ERROR, this._errorListener.bind(this))\n      adapter.on(Adapter.Event.STOP, this._stopListener.bind(this))\n      adapter.on(Adapter.Event.CLICK, this._clickListener.bind(this))\n      adapter.on(Adapter.Event.BLOCKED, this._blockedListener.bind(this))\n    }\n  },\n\n  /**\n   * Returns current adapter or null.\n   *\n   * @returns {Adapter}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdapter: function () {\n    return this._adapter\n  },\n\n  /**\n   * Removes the current adapter. Fires stop if needed. Calls adapter.dispose().\n   *\n   * @memberof youbora.Plugin.prototype\n   * */\n  removeAdapter: function () {\n    if (this._adapter) {\n      this._adapter.dispose()\n\n      this._adapter.plugin = null\n\n      this._adapter.off(Adapter.Event.INIT, this._initListener)\n      this._adapter.off(Adapter.Event.START, this._startListener)\n      this._adapter.off(Adapter.Event.JOIN, this._joinListener)\n      this._adapter.off(Adapter.Event.PAUSE, this._pauseListener)\n      this._adapter.off(Adapter.Event.RESUME, this._resumeListener)\n      this._adapter.off(Adapter.Event.SEEK_BEGIN, this._seekBeginListener)\n      this._adapter.off(Adapter.Event.SEEK_END, this._seekEndListener)\n      this._adapter.off(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener)\n      this._adapter.off(Adapter.Event.BUFFER_END, this._bufferEndListener)\n      this._adapter.off(Adapter.Event.ERROR, this._errorListener)\n      this._adapter.off(Adapter.Event.STOP, this._stopListener)\n\n      this._adapter = null\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n  _initListener: function (e) {\n    if (!this._adapter || !this._adapter.flags.isInited) {\n      if (!this.isInitiated || this.lastServeiceSent === Constants.Service.ERROR) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n      }\n      var params = e.data.params || {}\n      this.isInitiated = true\n      if (this._adapter) {\n        this._adapter.flags.isInited = true\n        this._adapter.chronos.join.start()\n      } else {\n        this.initChrono.start()\n      }\n      this._send(Constants.WillSendEvent.WILL_SEND_INIT, Constants.Service.INIT, params)\n      Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n    }\n  },\n\n  _startListener: function (e) {\n    if (!this.isInitiated) {\n      this.viewTransform.nextView()\n      this._initComm()\n      this._startPings()\n    }\n    var params = e.data.params || {}\n    var allParamsReady = (!!this.options['content.resource'] || !!this._adapter.getResource()) &&\n      (typeof this.options[\"content.isLive\"] === 'boolean' || typeof this._adapter.getIsLive() === 'boolean') &&\n      (typeof this.options['content.duration'] === 'number' || typeof this._adapter.getDuration() === 'number' || this._adapter.getIsLive() || this.options[\"content.isLive\"]) &&\n      (!!this.options['content.title'] || !!this._adapter.getTitle())\n    if (allParamsReady && !this._adapter.flags.isInited && !this.isInitiated) { //start\n      this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.START, params)\n      Log.notice(Constants.Service.START + ' ' + (params.title || params.mediaResource))\n      this.isStarted = true\n      //chrono if had no adapter when inited\n      if (this.isInitiated && this.initChrono.startTime != 0) {\n        this._adapter.chronos.join.startTime = this.initChrono.startTime\n      }\n    } else if (!this._adapter.flags.isInited && !this.isInitiated) {//init\n      this.isInitiated = true\n      this._adapter.flags.isInited = true\n      this._adapter.chronos.join.start()\n      this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.INIT, params)\n      Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n    }\n  },\n\n  _joinListener: function (e) {\n    var params = e.data.params || {}\n    if (!this._adsAdapter || !this._adsAdapter.flags.isStarted) {\n      if (this.isInitiated && !this.isStarted) { //start if just inited\n        //chrono if had no adapter when inited\n        if (this.initChrono.startTime != 0) {\n          this._adapter.chronos.join.startTime = this.initChrono.startTime\n        }\n        this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.START, params)\n        Log.notice(Constants.Service.START + ' ' + (params.title || params.mediaResource))\n        this.isStarted = true\n      }\n      params = e.data.params || {}\n      this._send(Constants.WillSendEvent.WILL_SEND_JOIN, Constants.Service.JOIN, params)\n      Log.notice(Constants.Service.JOIN + ' ' + params.joinDuration + 'ms')\n    } else { // If it is currently showing ads, join is invalidated\n      if (this._adapter.monitor) this._adapter.monitor.stop()\n      this._adapter.flags.isJoined = false\n      this._adapter.chronos.join.stopTime = 0\n    }\n  },\n\n  _pauseListener: function (e) {\n    if (this._adapter) {\n      if (this._adapter.flags.isBuffering ||\n        this._adapter.flags.isSeeking ||\n        (this._adsAdapter && this._adsAdapter.flags.isStarted)) {\n        this._adapter.chronos.pause.reset()\n      }\n    }\n\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_PAUSE, Constants.Service.PAUSE, params)\n    Log.notice(Constants.Service.PAUSE + ' at ' + params.playhead + 's')\n  },\n\n  _resumeListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_RESUME, Constants.Service.RESUME, params)\n    Log.notice(Constants.Service.RESUME + ' ' + params.pauseDuration + 'ms')\n  },\n\n  _seekBeginListener: function (e) {\n    if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    Log.notice('Seek Begin')\n  },\n\n  _seekEndListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_SEEK, Constants.Service.SEEK, params)\n    Log.notice(Constants.Service.SEEK +\n      ' to ' + params.playhead +\n      ' in ' + params.seekDuration + 'ms'\n    )\n  },\n\n  _bufferBeginListener: function (e) {\n    if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    Log.notice('Buffer Begin')\n  },\n\n  _bufferEndListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_BUFFER, Constants.Service.BUFFER, params)\n    Log.notice(Constants.Service.BUFFER +\n      ' to ' + params.playhead +\n      ' in ' + params.bufferDuration + 'ms'\n    )\n  },\n\n  _errorListener: function (e) {\n    this.fireError(e.data.params || {})\n  },\n\n  _stopListener: function (e) {\n    this.fireStop(e.data.params || {})\n  },\n\n  _clickListener: function (e) {\n    Log.warn(\n      'You have sent a CLICK event from the content adapter. ' +\n      'Such events must be fired from ads adapters, so it will be ignored.'\n    )\n  },\n\n  _blockedListener: function (e) {\n    Log.warn(\n      'You have sent a BLOCKED event from the content adapter. ' +\n      'Such events must be fired from ads adapters, so it will be ignored.'\n    )\n  }\n}\n\nmodule.exports = PluginContentMixin\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\nvar Chrono = __webpack_require__(7)\n\nvar PlaybackChronos = YouboraObject.extend(\n  /** @lends youbora.PlaybackChronos.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackChronos\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = PlaybackChronos\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar YouboraObject = __webpack_require__(1)\n\nvar PlaybackFlags = YouboraObject.extend(\n  /** @lends youbora.PlaybackFlags.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackFlags\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when Init has been sent. */\n      this.isInited = false\n\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n\n      /** Flag when Player is ended */\n      this.isEnded = false\n\n      /** Flag when Player view ends and stop is already sent */\n      this.isStopped = false\n    }\n  }\n)\n\nmodule.exports = PlaybackFlags\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(2)\n\nvar version = __webpack_require__(8)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginGetterMixin = {\n  /**\n   * Returns service host\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getHost: function() {\n    var host = this.options['host']\n    if (this.viewTransform && this.viewTransform.response && this.viewTransform.response.host) {\n      host = this.viewTransform.response.host\n    }\n    return Util.addProtocol(Util.stripProtocol(host), this.options['httpSecure'])\n  },\n\n\n  getUserType: function() {\n    return this.options['userType']\n  },\n\n  /**\n   * Returns parse HLS Flag\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isParseHls: function() {\n    return this.options['parse.hls']\n  },\n\n  /**\n   * Returns parse CdnNode Flag\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isParseCdnNode: function() {\n    return this.options['parse.cdnNode']\n  },\n\n  /**\n   * Returns parse location header\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isLocHeader: function() {\n    return this.options['parse.locationHeader']\n  },\n\n  /**\n   * Returns Cdn list\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getParseCdnNodeList: function() {\n    return this.options['parse.cdnNode.list']\n  },\n\n  /**\n   * Returns Cdn header name\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getParseCdnNodeNameHeader: function() {\n    return this.options['parse.cdnNameHeader']\n  },\n\n  /**\n   * Returns obfuscateIp option\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getObfuscateIp: function() {\n    return this.options['obfuscateIp']\n  },\n\n  /**\n   * Returns content's Extraparam1\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam1: function() {\n    return this.options['extraparam.1']\n  },\n\n  /**\n   * Returns content's Extraparam2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam2: function() {\n    return this.options['extraparam.2']\n  },\n\n  /**\n   * Returns content's Extraparam3\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam3: function() {\n    return this.options['extraparam.3']\n  },\n\n  /**\n   * Returns content's Extraparam4\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam4: function() {\n    return this.options['extraparam.4']\n  },\n  /**\n   * Returns content's Extraparam5\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam5: function() {\n    return this.options['extraparam.5']\n  },\n\n  /**\n   * Returns content's Extraparam6\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam6: function() {\n    return this.options['extraparam.6']\n  },\n\n  /**\n   * Returns content's Extraparam7\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam7: function() {\n    return this.options['extraparam.7']\n  },\n\n  /**\n   * Returns content's Extraparam8\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam8: function() {\n    return this.options['extraparam.8']\n  },\n\n  /**\n   * Returns content's Extraparam9\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam9: function() {\n    return this.options['extraparam.9']\n  },\n\n  /**\n   * Returns content's Extraparam10\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam10: function() {\n    return this.options['extraparam.10']\n  },\n\n  /**\n   * Returns content's Extraparam11\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam11: function() {\n    return this.options['extraparam.11']\n  },\n\n  /**\n   * Returns content's Extraparam12\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam12: function() {\n    return this.options['extraparam.12']\n  },\n\n  /**\n   * Returns content's Extraparam13\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam13: function() {\n    return this.options['extraparam.13']\n  },\n\n  /**\n   * Returns content's Extraparam14\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam14: function() {\n    return this.options['extraparam.14']\n  },\n  /**\n   * Returns content's Extraparam15\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam15: function() {\n    return this.options['extraparam.15']\n  },\n\n  /**\n   * Returns content's Extraparam16\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam16: function() {\n    return this.options['extraparam.16']\n  },\n\n  /**\n   * Returns content's Extraparam17\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam17: function() {\n    return this.options['extraparam.17']\n  },\n\n  /**\n   * Returns content's Extraparam18\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam18: function() {\n    return this.options['extraparam.18']\n  },\n\n  /**\n   * Returns content's Extraparam19\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam19: function() {\n    return this.options['extraparam.19']\n  },\n\n  /**\n   * Returns content's Extraparam20\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam20: function() {\n    return this.options['extraparam.20']\n  },\n\n  /**\n   * Returns ad's Extraparam1\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam1: function() {\n    return this.options['ad.extraparam.1']\n  },\n\n  /**\n   * Returns ad's Extraparam2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam2: function() {\n    return this.options['ad.extraparam.2']\n  },\n\n  /**\n   * Returns ad's Extraparam3\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam3: function() {\n    return this.options['ad.extraparam.3']\n  },\n\n  /**\n   * Returns ad's Extraparam4\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam4: function() {\n    return this.options['ad.extraparam.4']\n  },\n  /**\n   * Returns ad's Extraparam5\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam5: function() {\n    return this.options['ad.extraparam.5']\n  },\n\n  /**\n   * Returns ad's Extraparam6\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam6: function() {\n    return this.options['ad.extraparam.6']\n  },\n\n  /**\n   * Returns ad's Extraparam7\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam7: function() {\n    return this.options['ad.extraparam.7']\n  },\n\n  /**\n   * Returns ad's Extraparam8\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam8: function() {\n    return this.options['ad.extraparam.8']\n  },\n\n  /**\n   * Returns ad's Extraparam9\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam9: function() {\n    return this.options['ad.extraparam.9']\n  },\n\n  /**\n   * Returns ad's Extraparam10\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam10: function() {\n    return this.options['ad.extraparam.10']\n  },\n\n  /**\n   * Returns PluginInfo\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPluginInfo: function() {\n    var ret = {\n      lib: version,\n      adapter: this.getAdapterVersion(),\n      adAdapter: this.getAdAdapterVersion()\n    }\n    return ret\n  },\n\n  /**\n   * Returns Ip\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIp: function() {\n    return this.options['network.ip']\n  },\n\n  /**\n   * Returns Isp\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIsp: function() {\n    return this.options['network.isp']\n  },\n\n  /**\n   * Returns ConnectionType\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getConnectionType: function() {\n    return this.options['network.connectionType']\n  },\n\n  /**\n   * Returns DeviceCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDeviceCode: function() {\n    return this.options['device.code']\n  },\n\n  /**\n   * Returns AccountCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAccountCode: function() {\n    return this.options['accountCode']\n  },\n\n  /**\n   * Returns Username\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getUsername: function() {\n    return this.options['username']\n  },\n\n  /**\n   * Get URL referer.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getReferer: function() {\n    if (this.options['referer']) return this.options['referer']\n    var ret = ''\n    if (typeof window !== 'undefined' && window.location) {\n      ret = window.location.href\n    }\n    return ret\n  },\n\n  /**\n   * Returns the nodehost\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeHost: function() {\n    return this.options['content.cdnNode'] || this.resourceTransform.getNodeHost()\n  },\n\n  /**\n   * Returns the node type id\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeType: function() {\n    return this.options['content.cdnType'] || this.resourceTransform.getNodeType()\n  },\n\n  /**\n   * Returns the node type string\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeTypeString: function() {\n    return this.resourceTransform.getNodeTypeString()\n  },\n\n  /**\n   * Returns requestNumber value, to prevent /data calls being cached\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getRequestNumber: function() {\n    return Math.random()\n  },\n\n  getExperiments: function() {\n    if (this.options['experiments'].length > 0) return this.options['experiments']\n    return null\n  }\n}\n\nmodule.exports = PluginGetterMixin\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\n\nvar version = __webpack_require__(8)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginContentGetterMixin = {\n  /**\n   * Returns content's playhead\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayhead: function () {\n    var ret = 0\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayhead()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPlayhead', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns content's PlayRate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayrate: function () {\n    var ret = 0\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayrate', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's FramesPerSecond\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getFramesPerSecond: function () {\n    var ret = this.options['content.fps']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getFramesPerSecond()\n      } catch (err) {\n        Log.warn('An error occured while calling getFramesPerSecond', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's DroppedFrames\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDroppedFrames: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getDroppedFrames()\n      } catch (err) {\n        Log.warn('An error occured while calling getDroppedFrames', err)\n      }\n    }\n    if (!ret) {\n      ret = this.getWebkitDroppedFrames()\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns dropped frames as per webkitDroppedFrameCount\n   *\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitDroppedFrames: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount) {\n      return this._adapter.tag.webkitDroppedFrameCount\n    }\n    return null\n  },\n\n  /**\n   * Returns content's Duration\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDuration: function () {\n    var ret = this.options['content.duration']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getDuration()\n      } catch (err) {\n        Log.warn('An error occured while calling getDuration', err)\n      }\n    }\n    if (ret === 0) ret = null\n    return Util.parseNumber(Math.round(ret), null)\n  },\n\n  /**\n   * Returns content's Bitrate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getBitrate: function () {\n    var ret = this.options['content.bitrate']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getBitrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getBitrate', err)\n      }\n\n      if (!ret || ret === -1) {\n        ret = this.getWebkitBitrate()\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns bitrate as per webkitVideoDecodedByteCount\n   *\n   * @param {Object} tag Video tag DOM reference.\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitBitrate: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n      var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      if (this._lastWebkitBitrate) {\n        var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate\n        bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n      }\n      this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      return bitrate !== 0 ? bitrate : -1\n    }\n  },\n\n  /**\n   * Returns content's Throughput\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getThroughput: function () {\n    var ret = this.options['content.throughput']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getThroughput()\n      } catch (err) {\n        Log.warn('An error occured while calling getThroughput', err)\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns content's Rendition\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getRendition: function () {\n    var ret = this.options['content.rendition']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getRendition()\n      } catch (err) {\n        Log.warn('An error occured while calling getRendition', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Title\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTitle: function () {\n    var ret = this.options['content.title']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getTitle()\n      } catch (err) {\n        Log.warn('An error occured while calling getTitle', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Title2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTitle2: function () {\n    var ret = this.options['content.title2']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getTitle2()\n      } catch (err) {\n        Log.warn('An error occured while calling getTitle2', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's IsLive\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIsLive: function () {\n    var ret = this.options['content.isLive']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getIsLive()\n      } catch (err) {\n        Log.warn('An error occured while calling getIsLive', err)\n      }\n    }\n    return ret || false\n  },\n\n  /**\n   * Returns content's Resource after being parsed by the resourceTransform\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getResource: function () {\n    var ret = null\n    if (!this.resourceTransform.isBlocking() && this.resourceTransform.isDone) {\n      ret = this.resourceTransform.getResource()\n    }\n\n    return ret || this.getOriginalResource()\n  },\n\n  /**\n   * Returns content's original Resource\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getOriginalResource: function () {\n    var ret = null\n    ret = this.options['content.resource']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getResource()\n      } catch (err) {\n        Log.warn('An error occured while calling getResource', err)\n        ret = null\n      }\n    }\n    return ret || null\n  },\n\n  /**\n   * Returns content's TransactionCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTransactionCode: function () {\n    return this.options['content.transactionCode']\n  },\n\n  /**\n   * Returns content's Metadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getMetadata: function () {\n    return this.options['content.metadata']\n  },\n\n  /**\n   * Returns content's PlayerVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayerVersion: function () {\n    var ret = ''\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayerVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's PlayerName\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayerName: function () {\n    var ret = ''\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayerName()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerName', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Cdn\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getCdn: function () {\n    var ret = null\n    if (!this.resourceTransform.isBlocking()) {\n      ret = this.resourceTransform.getCdnName()\n    }\n    return ret || this.options['content.cdn']\n  },\n\n  /**\n   * Returns content's PluginVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPluginVersion: function () {\n    var ret = this.getAdapterVersion()\n    if (!ret) ret = version + '-adapterless'\n\n    return ret\n  },\n\n  /**\n   * Returns ads adapter getVersion or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdapterVersion: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPluginVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns cdn traffic received in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getCdnTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getCdnTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getCdnTraffic', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns p2p traffic received in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getP2PTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getP2PTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getP2PTraffic', err)\n      }\n    }\n    return ret\n  },\n\n\n  /**\n   * Returns p2p traffic sent in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getUploadTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getUploadTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getUploadTraffic', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n * Returns if p2p plugin is enabled or null\n *\n * @memberof youbora.Plugin.prototype\n */\n  getIsP2PEnabled: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getIsP2PEnabled()\n      } catch (err) {\n        Log.warn('An error occured while calling getIsP2PEnabled', err)\n      }\n    }\n    return ret\n  },\n\n\n  getStreamingProtocol: function () {\n    var ret = this.options['content.streamingProtocol']\n    if (typeof ret != 'string') return null\n    ret = ret.toUpperCase()\n    if (ret != 'HDS' && ret != 'HLS' && ret != 'MSS' && ret != 'DASH' && ret != 'RTMP' && ret != 'RTP' && ret != 'RTSP') {\n      Log.warn('Streaming protocol ' + ret + ' is not a valid value')\n      return null\n    }\n    return ret\n  },\n\n  /**Returns household id*/\n  getHouseholdId: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getHouseholdId()\n      } catch (err) {\n        Log.warn('An error occurred while calling getHouseholdId', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns latency of a live video, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getLatency: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getLatency()\n      } catch (err) {\n        Log.warn('An error occurred while calling getLatency', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns the amount of packets lost, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getPacketLoss: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPacketLoss()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPacketLoss', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns the amount of packets sent, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getPacketSent: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPacketSent()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPacketSent', err)\n      }\n    }\n    return ret\n  },\n  // ----------------------------------------- CHRONOS ------------------------------------------\n\n  /**\n   * Returns preload chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPreloadDuration: function () {\n    return this.preloadChrono.getDeltaTime(false)\n  },\n\n  /**\n   * Returns JoinDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getJoinDuration: function () {\n    return this._adapter ? this._adapter.chronos.join.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns BufferDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getBufferDuration: function () {\n    return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns SeekDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getSeekDuration: function () {\n    return this._adapter ? this._adapter.chronos.seek.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns pauseDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPauseDuration: function () {\n    return this._adapter ? this._adapter.chronos.pause.getDeltaTime(false) : 0\n  }\n}\n\nmodule.exports = PluginContentGetterMixin\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Constants = __webpack_require__(3)\n\nvar Adapter = __webpack_require__(15)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginAdsMixin = {\n  /**\n   * Returns current adapter or null.\n   *\n   * @returns {Adapter}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdsAdapter: function () {\n    return this._adsAdapter\n  },\n\n  /**\n   * Sets an adapter for ads.\n   *\n   * @param {Adapter} adsAdapter\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  setAdsAdapter: function (adsAdapter) {\n    if (adsAdapter.plugin) {\n      Log.warn('Adapters can only be added to a single plugin')\n    } else {\n      this.removeAdsAdapter()\n\n      adsAdapter.plugin = this\n      this._adsAdapter = adsAdapter\n      this._adsAdapter.on(Adapter.Event.INIT, this._adInitListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.START, this._adStartListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.JOIN, this._adJoinListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.PAUSE, this._adPauseListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.RESUME, this._adResumeListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BUFFER_END, this._adBufferEndListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.STOP, this._adStopListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.ERROR, this._adErrorListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.CLICK, this._adClickListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BLOCKED, this._adBlockedListener.bind(this))\n    }\n  },\n\n  /**\n   * Removes the current adapter. Fires stop if needed. Calls adapter.dispose()\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  removeAdsAdapter: function () {\n    if (this._adsAdapter) {\n      this._adsAdapter.dispose()\n\n      this._adsAdapter.plugin = null\n      this._adsAdapter.off(Adapter.Event.INIT, this._adInitListener)\n      this._adsAdapter.off(Adapter.Event.START, this._adStartListener)\n      this._adsAdapter.off(Adapter.Event.JOIN, this._adJoinListener)\n      this._adsAdapter.off(Adapter.Event.PAUSE, this._adPauseListener)\n      this._adsAdapter.off(Adapter.Event.RESUME, this._adResumeListener)\n      this._adsAdapter.off(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener)\n      this._adsAdapter.off(Adapter.Event.BUFFER_END, this._adBufferEndListener)\n      this._adsAdapter.off(Adapter.Event.STOP, this._adStopListener)\n      this._adsAdapter.off(Adapter.Event.ERROR, this._adErrorListener)\n      this._adsAdapter.off(Adapter.Event.CLICK, this._adClickListener)\n      this._adsAdapter.off(Adapter.Event.BLOCKED, this._adBlockedListener)\n\n      this._adsAdapter = null\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n  _adInitListener: function (e) {\n    if (this._adapter) {\n      this._adapter.fireBufferEnd()\n      this._adapter.fireSeekEnd()\n    }\n    this.adInitSent = true\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.getNewAdNumber()\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_INIT, params)\n    Log.notice(\n      Constants.Service.AD_INIT + ' ' +\n      params.adPosition + params.adNumber +\n      ' at ' + params.playhead + 's'\n    )\n  },\n\n  _adStartListener: function (e) {\n    if (this._adapter) {\n      this._adapter.fireBufferEnd()\n      this._adapter.fireSeekEnd()\n      if (this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    }\n\n    var params = e.data.params || {}\n    if (!this._adsAdapter.flags.isInited) {\n      params.adNumber = this.requestBuilder.getNewAdNumber()\n    } else {\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n    }\n    if (!this.options['ad.ignore']) {\n      var allParamsReady = ((!!this._adsAdapter.getResource() || !!this._adsAdapter.getTitle())\n        && typeof this._adsAdapter.getDuration() === 'number')\n      if (allParamsReady) {\n        this.adStartSent = true\n        this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_START, params)\n        Log.notice(\n          Constants.Service.AD_START + ' ' +\n          params.adPosition + params.adNumber +\n          ' at ' + params.playhead + 's'\n        )\n      }\n      else {\n        if (!this._adsAdapter.flags.isInited) {\n          this.adInitSent = true\n          this._send(Constants.WillSendEvent.WILL_SEND_AD_INIT, Constants.Service.AD_INIT, params)\n          Log.notice(\n            Constants.Service.AD_INIT + ' ' +\n            params.adPosition + params.adNumber +\n            ' at ' + params.playhead + 's'\n          )\n        }\n      }\n    }\n  },\n\n  _adJoinListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore'] && this.adInitSent && !this.adStartSent) {\n      this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_START, params)\n      Log.notice(\n        Constants.Service.AD_START + ' ' +\n        params.adPosition + params.adNumber +\n        ' at ' + params.playhead + 's'\n      )\n    }\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_JOIN, Constants.Service.AD_JOIN, params)\n    Log.notice(Constants.Service.AD_JOIN + ' ' + params.adJoinDuration + 'ms')\n    this.adInitSent = false\n    this.adStartSent = false\n  },\n\n  _adPauseListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_PAUSE, Constants.Service.AD_PAUSE, params)\n    Log.notice(Constants.Service.AD_PAUSE + ' at ' + params.adPlayhead + 's')\n  },\n\n  _adResumeListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_RESUME, Constants.Service.AD_RESUME, params)\n    Log.notice(Constants.Service.AD_RESUME + ' ' + params.adPauseDuration + 'ms')\n  },\n\n  _adBufferBeginListener: function (e) {\n    Log.notice('Ad Buffer Begin')\n    if (this._adsAdapter && this._adsAdapter.flags.isPaused) {\n      this._adsAdapter.chronos.pause.reset()\n    }\n  },\n\n  _adBufferEndListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_BUFFER, Constants.Service.AD_BUFFER, params)\n    Log.notice(Constants.Service.AD_BUFFER + ' ' + params.adBufferDuration + 'ms')\n  },\n\n  _adStopListener: function (e) {\n    // remove time from joinDuration\n    if (this._adapter && !this._adapter.flags.isJoined) {\n      this._adapter.chronos.join.startTime = Math.min(\n        this._adapter.chronos.join.startTime + this._adsAdapter.chronos.total.getDeltaTime(),\n        new Date().getTime()\n      )\n    }\n\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_STOP, Constants.Service.AD_STOP, params)\n    Log.notice(Constants.Service.AD_STOP + ' ' + params.adTotalDuration + 'ms')\n  },\n\n  _adErrorListener: function (e) {\n    var params = e.data.params || {}\n    if (this._adapter && !this._adapter.flags.isStarted) {\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n    } else {\n      params.adNumber = this.requestBuilder.getNewAdNumber()\n    }\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_ERROR, Constants.Service.AD_ERROR, params)\n    Log.notice(Constants.Service.AD_ERROR)\n  },\n\n  _adClickListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_CLICK, Constants.Service.AD_CLICK, params)\n    Log.notice(Constants.Service.AD_CLICK)\n  },\n\n  _adBlockedListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.getNewAdNumber()\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_BLOCKED, Constants.Service.AD_BLOCKED, params)\n    Log.notice(Constants.Service.AD_BLOCKED)\n  }\n}\n\nmodule.exports = PluginAdsMixin\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginAdsGettersMixin = {\n  /**\n   * Returns ads's PlayerVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPlayerVersion: function () {\n    var ret = ''\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPlayerVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPlayerVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's position\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPosition: function () {\n    var ret = 'pre'\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPosition()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPosition', err)\n      }\n    }\n    if (!ret && this._adapter) {\n      ret = (this._adapter.flags.isJoined) ? 'mid' : 'pre'\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdPlayhead\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPlayhead: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPlayhead()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPlayhead', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns ad's AdDuration\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdDuration: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getDuration()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdDuration', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns ad's AdBitrate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdBitrate: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getBitrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdBitrate', err)\n      }\n\n      if (!ret || ret === -1) {\n        ret = this.getWebkitAdBitrate()\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns bitrate as per webkitVideoDecodedByteCount\n   *\n   * @param {Object} tag Video tag DOM reference.\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitAdBitrate: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n      var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      if (this._lastWebkitAdBitrate) {\n        var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate\n        bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n      }\n      this._lastWebkitAdBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      return bitrate !== 0 ? bitrate : -1\n    }\n  },\n\n  /**\n   * Returns ad's AdTitle\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdTitle: function () {\n    var ret = null\n    if (this.options['ad.title']) {\n      return this.options['ad.title']\n    }\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getTitle()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdTitle', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdResource\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdResource: function () {\n    var ret = null\n    if (this.options['ad.resource']) {\n      return this.options['ad.resource']\n    }\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getResource()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdResource', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n * Returns ad's campaign\n *\n * @memberof youbora.Plugin.prototype\n */\n  getAdCampaign: function () {\n    if (this.options['ad.campaign']) {\n      return this.options['ad.campaign']\n    }\n    return null\n  },\n\n  /**\n   * Returns ads adapter getVersion or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdAdapterVersion: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdsAdapterVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdMetadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdMetadata: function () {\n    return this.options['ad.metadata']\n  },\n\n  // ----------------------------------------- CHRONOS ------------------------------------------\n\n  /**\n   * Returns AdJoinDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdJoinDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns AdBufferDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdBufferDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns AdPauseDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPauseDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(false) : 0\n  },\n\n  /**\n   * Returns total totalAdDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdTotalDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(false) : -1\n  }\n}\n\nmodule.exports = PluginAdsGettersMixin\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Constants = __webpack_require__(3)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginPingMixin = {\n  /**\n   * Starts sending pings.\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _startPings: function () {\n    if (!this._ping.isRunning) this._ping.start()\n  },\n\n  /**\n   * Stops sending pings.\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _stopPings: function () {\n    this._ping.stop()\n  },\n\n\n  /**\n   * Sends ping request\n   *\n   * @param {number} diffTime Time since the last ping\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _sendPing: function (diffTime) {\n    var params = {\n      diffTime: diffTime,\n      entities: this.requestBuilder.getChangedEntities()\n    }\n    if (this._adapter) {\n      if (this._adapter.flags.isPaused) {\n        params = this.requestBuilder.fetchParams(params, ['pauseDuration'])\n      } else {\n        params = this.requestBuilder.fetchParams(params, ['bitrate', 'throughput', 'fps'])\n      }\n      if (this._adapter.flags.isJoined) {\n        params = this.requestBuilder.fetchParams(params, ['playhead'])\n      }\n      if (this._adapter.flags.isBuffering) {\n        params = this.requestBuilder.fetchParams(params, ['bufferDuration'])\n      }\n      if (this._adapter.flags.isSeeking) {\n        params = this.requestBuilder.fetchParams(params, ['seekDuration'])\n      }\n\n      if (this._adsAdapter && !this.options['ad.ignore']) {\n        if (this._adsAdapter.flags.isStarted) {\n          params = this.requestBuilder.fetchParams(params, ['adPlayhead'])\n          if (this._adsAdapter.flags.isPaused) {\n            params = this.requestBuilder.fetchParams(params, ['adPauseDuration'])\n          } else {\n            params = this.requestBuilder.fetchParams(params, ['adBitrate'])\n          }\n        }\n        if (this._adsAdapter.flags.isBuffering) {\n          params = this.requestBuilder.fetchParams(params, ['adBufferDuration'])\n        }\n      }\n    }\n\n    this._send(Constants.WillSendEvent.WILL_SEND_PING, Constants.Service.PING, params)\n    Log.verbose(Constants.Service.PING)\n  }\n}\n\nmodule.exports = PluginPingMixin\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Log = __webpack_require__(0)\nvar Util = __webpack_require__(2)\nvar Constants = __webpack_require__(3)\n\n// This file is designed to add extra functionalities to Plugin class\n\n/** @lends youbora.Plugin.prototype */\nvar PluginFireMixin = {\n  /**\n   * Starts preloading state and chronos.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  firePreloadBegin: function() {\n    if (!this.isPreloading) {\n      this.isPreloading = true\n      this.preloadChrono.start()\n    }\n  },\n\n  /**\n   * Ends preloading state and chronos.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  firePreloadEnd: function() {\n    if (this.isPreloading) {\n      this.isPreloading = false\n      this.preloadChrono.stop()\n    }\n  },\n\n  /**\n   * Sends /init. Should be called once the user has requested the content. Does not need\n   * a working adapter or player to work. it won't sent start if isInitiated is true.\n   *\n   * @param {Object} [params] Object of key:value params.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireInit: function(params) {\n    if (!this.isInitiated) {\n      if (!this.getAdapter() || (this.getAdapter() && !this.getAdapter().flags.isInited && !this.getAdapter().flags.isStarted)) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n        this.initChrono.start()\n        this.isInitiated = true\n\n        params = params || {}\n        this._send(Constants.WillSendEvent.WILL_SEND_INIT, Constants.Service.INIT, params)\n        Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n      }\n    }\n  },\n\n  /**\n   * Sends /error. Should be used when the error is related to out-of-player errors: like async\n   * resource load or player loading errors.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireError: function(object, msg, metadata, level) {\n    if (!this.isInitiated && (!this.getAdapter() || (!this.getAdapter().flags.isStarted && !this.getAdapter().flags.isInited))) this.viewTransform.nextView()\n    if (!this._comm) this._initComm()\n    var params = Util.buildErrorParams(object, msg, metadata, level)\n\n    this._send(Constants.WillSendEvent.WILL_SEND_ERROR, Constants.Service.ERROR, params)\n    Log.notice(Constants.Service.ERROR +\n      ' ' + params.errorLevel +\n      ' ' + params.errorCode\n    )\n\n    if (params.errorLevel === 'fatal') {\n      this._reset()\n      this.viewTransform.nextView()\n    }\n  },\n\n  /**\n   * Calls fireErrors and then stops pings.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireFatalError: function(object, msg, metadata) {\n    this.options['ad.afterStop'] = 0\n    this.fireError(object, msg, metadata, 'fatal')\n    if (this._adapter) { this._adapter.fireStop() } else { this.fireStop() }\n  },\n\n  /**\n   * Fires /stop. Should be used to terminate sessions once the player is gone or if\n   * plugin.fireError() is called.\n   *\n   * @param {Object} [params] Object of key:value params.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireStop: function(params) {\n    if (params && params.end !== undefined && params.end) {\n      params.end = undefined\n      this.options['ad.afterStop'] = 0\n    }\n    if (this._adapter) {\n      this._adapter.flags.isEnded = true\n      if (this._adapter.flags.isPaused) {\n        if (!params) {\n          params = {}\n        }\n        params.pauseDuration = this._adapter.chronos.pause.getDeltaTime()\n      }\n    }\n    if (!this._adsAdapter) {\n      this.options['ad.afterStop'] = 0\n    }\n    if (this.options['ad.afterStop'] === 0) {\n      if (this._adapter) {\n        this._adapter.flags.isStopped = true\n      }\n      params = params || {}\n      this._send(Constants.WillSendEvent.WILL_SEND_STOP, Constants.Service.STOP, params)\n      Log.notice(Constants.Service.STOP + ' at ' + params.playhead + 's')\n      this._reset()\n    }\n  }\n}\n\nmodule.exports = PluginFireMixin\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Constants = __webpack_require__(3)\nvar Log = __webpack_require__(0)\nvar YBRequest = __webpack_require__(5)\n\nvar YouboraInfinity = __webpack_require__(14)\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginInfinityMixin = {\n  _initInfinity: function () {\n    this.infinity.on(YouboraInfinity.Event.NAV, this._navListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.SESSION_START, this._sessionStartListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.SESSION_STOP, this._sessionStopListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.EVENT, this._eventListener.bind(this))\n  },\n\n  _sendInfinity: function (willSendEvent, service, params) {\n    params = this.requestBuilder.buildParams(params, service)\n\n    var data = {\n      params: params,\n      plugin: this,\n      adapter: this.getAdapter(),\n      adsAdapter: this.getAdsAdapter()\n    }\n\n    this.emit(willSendEvent, data)\n\n    if (this.infinity._comm && params !== null && this.options.enabled) {\n      this.lastServeiceSent = service\n      this.infinity._comm.sendRequest(new YBRequest(null, service, params))\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n\n  _navListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_NAV, Constants.Service.NAV, params)\n\n    // start beats\n    if (!this._beat.isRunning) this._beat.start()\n\n    Log.notice(Constants.Service.NAV + ' ' + params.route)\n  },\n\n  _sessionStartListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(\n      Constants.WillSendEvent.WILL_SEND_SESSION_START,\n      Constants.Service.SESSION_START,\n      params\n    )\n\n    // start beats\n    if (!this._beat.isRunning) this._beat.start()\n\n    Log.notice(Constants.Service.SESSION_START + ' ' + params.route)\n  },\n\n  _sessionStopListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(\n      Constants.WillSendEvent.WILL_SEND_SESSION_STOP,\n      Constants.Service.SESSION_STOP,\n      params\n    )\n\n    // stop beats\n    if (!this._beat.isRunning) this._beat.stop()\n\n    Log.notice(Constants.Service.SESSION_STOP + ' ' + params.route)\n  },\n\n  _eventListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_EVENT, Constants.Service.EVENT, params)\n    Log.notice(Constants.Service.EVENT + ' ' + params.name)\n  },\n\n  /**\n   * Sends beat request\n   *\n   * @param {number} diffTime Time since the last ping\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _sendBeat: function (diffTime) {\n    var params = {\n      diffTime: diffTime,\n      sessions: [this.getSessionId()]\n    }\n\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_BEAT, Constants.Service.BEAT, params)\n    Log.verbose(Constants.Service.BEAT)\n  }\n}\n\nmodule.exports = PluginInfinityMixin\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginInfinityGettersMixin = {\n  getSessionId: function () {\n    return this.storage.getLocal('session')\n  },\n\n  getContext: function () {\n    return this.storage.getSession('context')\n  },\n\n  getStoredData: function () {\n    return this.storage.getSession('data')\n  },\n\n  getPageName: function () {\n    if (document && document.title) {\n      return document.title\n    }\n  },\n\n  getIsSessionExpired: function () {\n    var time = this.storage.getSession('lastactive') + this.options['session.expire']\n    var now = new Date().getTime()\n    return !(this.getSessionId() && (time > now))\n  },\n\n  getIsDataExpired: function () {\n    var time = this.storage.getSession('lastactive') + this.options['session.expire']\n    var now = new Date().getTime()\n    return !(this.getStoredData() && (time > now))\n  }\n}\n\nmodule.exports = PluginInfinityGettersMixin\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _playkitJs = __webpack_require__(9);\n\nvar youbora = __webpack_require__(10);\n\n\nyoubora.adapters.Kaltura = youbora.Adapter.extend({\n\n  constructor: function constructor(player, config) {\n    this.config = config;\n    youbora.adapters.Kaltura.__super__.constructor.call(this, player);\n  },\n\n  /**  @returns {String} - current plugin version */\n  getVersion: function getVersion() {\n    return \"6.2.0-kaltura\";\n  },\n\n  /**  @returns {Number} - current playhead of the video */\n  getPlayhead: function getPlayhead() {\n    return this.player.currentTime;\n  },\n\n  /**  @returns {Number} - current playrate */\n  getPlayrate: function getPlayrate() {\n    return this.player.playbackRate;\n  },\n\n  /**  @returns {Number} - video duration */\n  getDuration: function getDuration() {\n    return this.player.duration || null;\n  },\n\n  /**  @returns {Number} - current bitrate */\n  getBitrate: function getBitrate() {\n    var activeVideo = this.player.getActiveTracks().video;\n    if (activeVideo && activeVideo.bandwidth) {\n      return activeVideo.bandwidth;\n    }\n    return null;\n  },\n\n  /**  @returns {String} - rendition */\n  getRendition: function getRendition() {\n    var activeVideo = this.player.getActiveTracks().video;\n    if (activeVideo) {\n      return youbora.Util.buildRenditionString(activeVideo.width, activeVideo.height, activeVideo.bandwidth);\n    }\n    return null;\n  },\n\n  /**  @returns {String} - title */\n  getTitle: function getTitle() {\n    return this.config.entryName;\n  },\n\n  /**  @returns {Boolean} - true if live and false if VOD */\n  getIsLive: function getIsLive() {\n    return this.config.entryType === \"Live\";\n  },\n\n  /**  @returns {String} - resource URL. */\n  getResource: function getResource() {\n    return this.player.src;\n  },\n\n  /**  @returns {String} - player version */\n  getPlayerVersion: function getPlayerVersion() {\n    return this.config.playerVersion;\n  },\n\n  /**  @returns {String} - player's name */\n  getPlayerName: function getPlayerName() {\n    return this.config.playerName;\n  },\n\n  /** @returns {String} - Household identifier */\n  getHouseholdId: function getHouseholdId() {\n    return this.config.householdId;\n  },\n\n  /**  @returns {void} - Register listeners to this.player. */\n  registerListeners: function registerListeners() {\n    var Event = this.player.Event;\n    // References\n    this.references = [];\n    this.references[Event.PLAY] = this.playListener.bind(this);\n    this.references[Event.LOAD_START] = this.playListener.bind(this);\n    this.references[Event.PAUSE] = this.pauseListener.bind(this);\n    this.references[Event.PLAYING] = this.playingListener.bind(this);\n    this.references[Event.ERROR] = this.errorListener.bind(this);\n    this.references[Event.SEEKING] = this.seekingListener.bind(this);\n    this.references[Event.SEEKED] = this.seekedListener.bind(this);\n    this.references[Event.PLAYER_STATE_CHANGED] = this.stateChangeListener.bind(this);\n    this.references[Event.ENDED] = this.endedListener.bind(this);\n    this.references[Event.CHANGE_SOURCE_STARTED] = this.forceEndedListener.bind(this);\n    this.references[Event.AD_LOADED] = this.adLoadedListener.bind(this);\n\n    // Register listeners\n    for (var key in this.references) {\n      this.player.addEventListener(key, this.references[key]);\n    }\n  },\n\n  /**  @returns {void} - Unregister listeners to this.player. */\n  unregisterListeners: function unregisterListeners() {\n\n    // unregister listeners\n    if (this.player && this.references) {\n      for (var key in this.references) {\n        this.player.removeEventListener(key, this.references[key]);\n      }\n      this.references = [];\n    }\n  },\n\n  bindLogger: function bindLogger(logger) {\n    youbora.Log.error = logger.error.bind(logger);\n    youbora.Log.notice = logger.info.bind(logger);\n    youbora.Log.warn = logger.warn.bind(logger);\n    youbora.Log.debug = logger.debug.bind(logger);\n    youbora.Log.verbose = function () {};\n  },\n\n  /** @returns {void} - Listener for 'play' event. */\n  playListener: function playListener() {\n    if (!this.flags.isStarted) {\n      this.fireStart();\n      this.plugin.options['content.isLive.noSeek'] = !this.player.isDvr();\n      this.initialPlayhead = this.getPlayhead();\n    }\n  },\n\n  /** @returns {void} - Listener for 'timeupdate' event. */\n  timeupdateListener: function timeupdateListener() {\n    this.fireStart();\n    this.fireJoin();\n  },\n\n  /** @returns {void} - Listener for 'pause' event. */\n  pauseListener: function pauseListener() {\n    this.firePause();\n  },\n\n  /** @returns {void} - Listener for 'playing' event. */\n  playingListener: function playingListener() {\n    this.fireResume();\n    this.fireSeekEnd();\n    this.fireBufferEnd();\n    this.fireStart();\n    this.fireJoin();\n  },\n\n  /** @returns {void}\n   * @param {Object} e - object with payload including severity, code and data.\n   * - The name of the plugin.- Listener for 'error' event. */\n  errorListener: function errorListener(e) {\n    if (e.payload.severity === _playkitJs.Error.Severity.CRITICAL) {\n      this.fireError(e.payload.code, e.payload.data);\n      this.fireStop();\n    }\n  },\n\n  /** @returns {void} - Listener for 'seeking' event. */\n  seekingListener: function seekingListener() {\n    if (!this.flags.isBuffering && this.initialPlayhead !== this.getPlayhead()) {\n      this.fireSeekBegin();\n    }\n  },\n\n  /** @returns {void} - Listener for 'seeked' event. */\n  seekedListener: function seekedListener() {\n    this.fireSeekEnd();\n  },\n\n  /** @returns {void}\n   * @param {Object} e - object with the payload with states.\n   * - Listener for 'player_state_changed' event. */\n  stateChangeListener: function stateChangeListener(e) {\n    if (e.payload.newState.type === this.player.State.BUFFERING) {\n      if (this.initialPlayhead !== this.getPlayhead()) {\n        this.fireBufferBegin();\n      }\n    }\n    if (e.payload.oldState.type === this.player.State.BUFFERING) {\n      this.fireBufferEnd();\n    }\n  },\n\n  /** @returns {void} - Listener for 'ended' event. */\n  endedListener: function endedListener() {\n    if (!this.stopBlockedByAds) {\n      this.fireStop();\n      this.reset();\n    }\n  },\n\n  /** @returns {void} - Listener for 'ended' event. */\n  forceEndedListener: function forceEndedListener() {\n    this.fireStop();\n    this.reset();\n  },\n\n  /** @returns {void} - Listener for 'ad_loaded' event. */\n  adLoadedListener: function adLoadedListener() {\n    this.playListener();\n    this.stopBlockedByAds = true;\n    if (!this.plugin.getAdsAdapter()) {\n      this.plugin.setAdsAdapter(new youbora.adapters.Kaltura.NativeAdsAdapter(this.player));\n    }\n  },\n\n  reset: function reset() {\n    this.stopBlockedByAds = false;\n    this.initialPlayhead = null;\n  }\n}, {\n  NativeAdsAdapter: __webpack_require__(55)\n});\n\nmodule.exports = youbora.adapters.Kaltura;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar youbora = __webpack_require__(10);\n\nvar NativeAdsAdapter = youbora.Adapter.extend({\n  /**  @returns {String} - current plugin version */\n  getVersion: function getVersion() {\n    return \"6.2.0-kaltura-ads\";\n  },\n\n  /**  @returns {Number} - current playhead of the video */\n  getPlayhead: function getPlayhead() {\n    return this.currentTime;\n  },\n\n  /**  @returns {Number} - video duration */\n  getDuration: function getDuration() {\n    return this.duration;\n  },\n\n  /**  @returns {String} - current ad position (only ads) */\n  getPosition: function getPosition() {\n    if (!this.plugin.getAdapter().flags.isJoined) {\n      return 'pre';\n    } else if (!this.plugin.getAdapter().isLive() && this.plugin.getAdapter().getPlayhead() > this.plugin.getAdapter().getDuration() - 1) {\n      return 'post';\n    }\n    return 'mid';\n  },\n\n  /**  @returns {void} - Register listeners to this.player. */\n  registerListeners: function registerListeners() {\n    this.monitorPlayhead(true, false); //playhead monitor for bufferunderrun\n\n    var Event = this.player.Event;\n    // Register listeners\n    this.references = [];\n    this.references[Event.AD_LOADED] = this.startAdListener.bind(this);\n    this.references[Event.AD_STARTED] = this.startAdListener.bind(this);\n    this.references[Event.AD_RESUMED] = this.resumeAdListener.bind(this);\n    this.references[Event.AD_PAUSED] = this.pauseAdListener.bind(this);\n    this.references[Event.AD_CLICKED] = this.clickAdListener.bind(this);\n    this.references[Event.AD_SKIPPED] = this.skipAdListener.bind(this);\n    this.references[Event.AD_COMPLETED] = this.stopAdListener.bind(this);\n    this.references[Event.AD_ERROR] = this.errorAdListener.bind(this);\n    this.references[Event.AD_PROGRESS] = this.progressAdListener.bind(this);\n    this.references[Event.ALL_ADS_COMPLETED] = this.allAdsCompletedListener.bind(this);\n\n    for (var key in this.references) {\n      this.player.addEventListener(key, this.references[key]);\n    }\n  },\n\n  /**  @returns {void} - Unregister listeners to this.player. */\n  unregisterListeners: function unregisterListeners() {\n    // Disable playhead monitoring\n    this.monitor.stop();\n\n    // unregister listeners\n    if (this.player && this.references) {\n      for (var key in this.references) {\n        this.player.removeEventListener(key, this.references[key]);\n      }\n      this.references = [];\n    }\n  },\n\n  startAdListener: function startAdListener(event) {\n\n    debugger;\n    this.fireStart();\n  },\n\n  stopAdListener: function stopAdListener() {\n    this.fireStop();\n    this.currentTime = null;\n    this.duration = null;\n  },\n\n  resumeAdListener: function resumeAdListener() {\n    this.fireResume();\n  },\n\n  pauseAdListener: function pauseAdListener() {\n    this.firePause();\n  },\n\n  clickAdListener: function clickAdListener() {\n    this.fireClick();\n  },\n\n  skipAdListener: function skipAdListener() {\n    this.fireStop({ skipped: true });\n    this.currentTime = null;\n    this.duration = null;\n  },\n\n  errorAdListener: function errorAdListener() {\n    this.fireError();\n  },\n\n  allAdsCompletedListener: function allAdsCompletedListener() {\n    this.fireStop();\n    this.plugin.getAdapter().stopBlockedByAds = false;\n    if (this.getPosition() === \"post\") this.plugin.getAdapter().fireStop();\n  },\n\n  progressAdListener: function progressAdListener(e) {\n    this.currentTime = e.payload.adProgress.currentTime;\n    this.duration = e.payload.adProgress.duration;\n    this.fireJoin();\n    this.monitor.skipNextTick();\n  }\n});\n\nmodule.exports = NativeAdsAdapter;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit-youbora.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c16478375ab889dba712","var Emitter = require('./emitter')\nvar isArray = require('./mixins/isarray')\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (isArray(msg)) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/log.js\n// module id = 0\n// module chunks = 0","var assign = require('./mixins/assign')\nvar createObject = require('./mixins/create')\n\nvar YouboraObject = function () { }\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () { }\n}\n\n/**\n * This method allows the extension of the current class, emulating 1-level inheritance.\n * It is inspired by Backbone's extend, but removing all references to underscore.\n *\n * @see http://backbonejs.org/#Model-extend\n *\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var child\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent constructor.\n  if (protoProps && protoProps.hasOwnProperty('constructor')) {\n    child = protoProps.constructor\n  } else {\n    child = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  assign(child, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`, without calling\n  // `parent`'s constructor function and add the prototype properties.\n  child.prototype = createObject(parent.prototype)\n  if (protoProps) assign(child.prototype, protoProps)\n  child.prototype.constructor = child\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  child.__super__ = parent.prototype\n\n  return child\n}\n\n\nmodule.exports = YouboraObject\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/object.js\n// module id = 1\n// module chunks = 0","var Log = require('./log')\n\n/**\n * This static class provides utility methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function(url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http://]nqs.nice264.com\n   *\n   * @param {string} url Domain of the service. Without protocol. ie: 'nqs.nice264.com'.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function(url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} def Number to return if n is not correct.\n   */\n  parseNumber: function(n, def) {\n    if (!isNaN(n) &&\n      n >= 0 &&\n      n !== Infinity &&\n      n !== -Infinity &&\n      n !== null &&\n      typeof n !== 'undefined'\n    ) {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility method will add most of the HTML5 common event listeners to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  logAllEvents: function(o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function(e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function(width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  },\n\n  /**\n   * Returns a params dictionary with the error values.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n   * @returns {Object} Key:value params.\n   */\n  buildErrorParams: function(code, msg, metadata, level) {\n    if (typeof code === 'object') {\n      return code\n    } else {\n      var params = {}\n      params.errorCode = code || 'FAILURE'\n      params.msg = msg || params.errorCode\n      params.errorMetadata = metadata\n      params.errorLevel = level\n      return params\n    }\n  },\n\n  // The following methods replace core js functionallity to ensure compatibility in old versions.\n\n  assign: require('./mixins/assign'),\n\n  isArray: require('./mixins/isarray')\n}\n\nmodule.exports = Util\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/util.js\n// module id = 2\n// module chunks = 0","/**\n * This static class englobes youbora constants.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Constants = {\n  /**\n   * List of youbora services.\n   *\n   * @enum\n   */\n  Service: {\n    DATA: '/data',\n\n    // Video\n    INIT: '/init',\n    START: '/start',\n    JOIN: '/joinTime',\n    PAUSE: '/pause',\n    RESUME: '/resume',\n    SEEK: '/seek',\n    BUFFER: '/bufferUnderrun',\n    ERROR: '/error',\n    STOP: '/stop',\n    PING: '/ping',\n\n    // Ads\n    AD_INIT: '/adInit',\n    AD_START: '/adStart',\n    AD_JOIN: '/adJoin',\n    AD_PAUSE: '/adPause',\n    AD_RESUME: '/adResume',\n    AD_BUFFER: '/adBufferUnderrun',\n    AD_STOP: '/adStop',\n    AD_CLICK: '/adClick',\n    AD_ERROR: '/adError',\n    AD_BLOCKED: '/adBlocked',\n\n    // Infinity\n    EVENT: '/infinity/event',\n    SESSION_START: '/infinity/session/start',\n    SESSION_STOP: '/infinity/session/stop',\n    NAV: '/infinity/session/nav',\n    BEAT: '/infinity/session/beat'\n  },\n\n  /**\n   * List of will-send events.\n   *\n   * @memberof youbora.Plugin\n   * @enum\n   * @event\n   */\n  WillSendEvent: {\n    WILL_SEND_INIT: 'will-send-init',\n    WILL_SEND_START: 'will-send-start',\n    WILL_SEND_JOIN: 'will-send-join',\n    WILL_SEND_PAUSE: 'will-send-pause',\n    WILL_SEND_RESUME: 'will-send-resume',\n    WILL_SEND_SEEK: 'will-send-seek',\n    WILL_SEND_BUFFER: 'will-send-buffer',\n    WILL_SEND_ERROR: 'will-send-error',\n    WILL_SEND_FATAL_ERROR: 'will-send-fatal-error',\n    WILL_SEND_STOP: 'will-send-stop',\n    WILL_SEND_PING: 'will-send-ping',\n\n    WILL_SEND_AD_START: 'will-send-ad-start',\n    WILL_SEND_AD_JOIN: 'will-send-ad-join',\n    WILL_SEND_AD_PAUSE: 'will-send-ad-pause',\n    WILL_SEND_AD_RESUME: 'will-send-ad-resume',\n    WILL_SEND_AD_BUFFER: 'will-send-ad-buffer',\n    WILL_SEND_AD_STOP: 'will-send-ad-stop',\n    WILL_SEND_AD_CLICK: 'will-send-ad-click',\n    WILL_SEND_AD_ERROR: 'will-send-ad-error',\n    WILL_SEND_AD_BLOCKED: 'will-send-ad-blocked',\n\n    WILL_SEND_SESSION_START: 'will-send-session-start',\n    WILL_SEND_SESSION_STOP: 'will-send-session-stop',\n    WILL_SEND_NAV: 'will-send-nav',\n    WILL_SEND_BEAT: 'will-send-beat',\n    WILL_SEND_EVENT: 'will-send-event'\n  }\n}\n\nmodule.exports = Constants\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/constants.js\n// module id = 3\n// module chunks = 0","var YouboraObject = require('./object')\nvar isArray = require('./mixins/isarray')\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n *\n * @constructs Emitter\n * @extends youbora.YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends youbora.Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     *\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     *\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     *\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n      data = data || {}\n\n      if (isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    /**\n     * Travels through the listener list and executes them them.\n     *\n     * @private\n     */\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/emitter.js\n// module id = 4\n// module chunks = 0","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar Util = require('../util')\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends youbora.YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends youbora.Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the current request */\n      this.options = Util.assign({}, YBRequest.defaultOptions, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      this.xhr.addEventListener(event, callback.bind(this, this))\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      this.xhr.removeEventListener(event, callback)\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            var string = JSON.stringify(param)\n            if (string !== '{}') {\n              params += encodeURIComponent(key) + '=' + encodeURIComponent(string) + '&'\n            }\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends youbora.YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /**\n     * This static property includes the default values for the options. In case you do not define\n     * one of them in the constructor, these values will be used instead.\n     *\n     * @param {string} [defaultOptions.method=\"GET\"] Specifies the method of the request.\n     * ie: \"GET\", \"HEAD\".\n     * @param {string} [defaultOptions.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [defaultOptions.retryAfter=5000] Time in ms before sending a failed request\n     * again. 0 to disable.\n     * @param {number} [defaultOptions.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [defaultOptions.cache=false] If false, timemark will be added to each request\n     * to prevent caching.\n     */\n    defaultOptions: {\n      method: 'GET',\n      requestHeaders: {},\n      maxRetries: 3,\n      retryAfter: 5000,\n      cache: false\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n      YBRequest._globalListeners[event].push(callback)\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/request.js\n// module id = 5\n// module chunks = 0","var Emitter = require('../../emitter')\n\nvar Transform = Emitter.extend(\n  /** @lends youbora.Transform.prototype */\n  {\n    /**\n     * Transform classes in YOUBORA help the library parse and work with data.\n     *\n     * A Transform makes some kind of task that may block requests until it's done, or applies changes\n     * to the requests right before they're finally sent.\n     *\n     * {@link ResourceTransform}, {@link ViewTransform}... all extend from this class.\n     *\n     * @constructs Transform\n     * @extends youbora.Emitter\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      /**\n       * Whether the Transform is currently working or not.\n       * @private\n       */\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     *\n     * @param {YBRequest} request Request to transform.\n     */\n    parse: function (request) { },\n\n    /**\n     * By default this will return true until {@link #done()} is called. This can be overridden\n     * in order to block {@link Request}s based on any criteria. For instance its\n     * {@link Request#getService()}.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends youbora.Transform */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this Transform is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/transform.js\n// module id = 6\n// module chunks = 0","var YouboraObject = require('./object')\n\nvar Chrono = YouboraObject.extend(\n  /** @lends youbora.Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points in time.\n     *\n     * @constructs Chrono\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset chrono values. */\n    reset: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Pause time */\n      this.pauseTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't\n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) {\n          this.stopTime = now\n        }\n        var tempOffset = this.pausetime ? now - this.pausetime : 0\n        var tempStop = this.stopTime ? this.stopTime : now\n        return (this.offset - tempOffset) + (tempStop - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n      this.offset = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      if (this.pausetime) this.resume()\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    },\n\n    pause: function () {\n      this.pauseTime = new Date().getTime()\n    },\n\n    resume: function () {\n      this.offset -= (new Date().getTime() - this.pauseTime)\n      this.pauseTime = 0\n    },\n\n    /**\n     * Creates a copy of the chrono.\n     */\n    clone: function () {\n      var chrono = new Chrono()\n      chrono.startTime = this.startTime\n      chrono.stopTime = this.stopTime\n      chrono.offset = this.offset\n      return chrono\n    }\n  }\n)\n\nmodule.exports = Chrono\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/chrono.js\n// module id = 7\n// module chunks = 0","module.exports = require('../manifest.json').version\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/version.js\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}\n// module id = 9\n// module chunks = 0","// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = require('./version')\n\n// Polyfills\nyoubora.polyfills = require('./polyfills')\n\n// Base Classes\nyoubora.Object = require('./object')\nyoubora.Emitter = require('./emitter')\n\n// Log\nyoubora.Log = require('./log')\nyoubora.Log.loadLevelFromUrl()\n\n// General classes\nyoubora.Util = require('./util')\nyoubora.HybridNetwork = require('./monitors/hybridnetwork')\nyoubora.Chrono = require('./chrono')\nyoubora.Timer = require('./timer')\nyoubora.Constants = require('./constants')\n\n// Comm classes\nyoubora.Request = require('./comm/request')\nyoubora.Communication = require('./comm/communication')\n\n// Resource Transform classes\nyoubora.Transform = require('./comm/transform/transform')\nyoubora.ViewTransform = require('./comm/transform/view')\nyoubora.Nqs6Transform = require('./comm/transform/nqs6')\nyoubora.ResourceTransform = require('./comm/transform/resource')\nyoubora.CdnParser = require('./comm/transform/resourceparsers/cdnparser')\nyoubora.HlsParser = require('./comm/transform/resourceparsers/hlsparser')\nyoubora.LocationheaderParser = require('./comm/transform/resourceparsers/locationheaderparser')\n\n// Plugin Classes\nyoubora.Options = require('./plugin/options')\nyoubora.Plugin = require('./plugin/plugin')\nyoubora.Storage = require('./plugin/storage')\nyoubora.RequestBuilder = require('./plugin/requestbuilder')\n\n// Adapters\nyoubora.PlayheadMonitor = require('./adapter/playheadmonitor')\nyoubora.Adapter = require('./adapter/adapter')\nyoubora.adapters = {}\n\n// Infinity\nyoubora.Infinity = require('./infinity/infinity')\n\n// Detector classes\nyoubora.BackgroundDetector = require('./detectors/backgroundDetector')\nyoubora.DeviceDetector = require('./detectors/deviceDetector')\n\n/**\n * Register the given adapter in <youbora>.adapters.\n *\n * @param {string} key Unique adapter identifier.\n * @param {youbora.Adapter} Adapter Adapter class.\n *\n * @memberof youbora\n */\nyoubora.registerAdapter = function (key, Adapter) {\n  this.adapters[key] = Adapter\n}.bind(youbora)\n\n/**\n * Remove the given adapter in <youbora>.adapters.\n *\n * @param {string} key Unique adapter identifier.\n *\n * @memberof youbora\n */\nyoubora.unregisterAdapter = function (key) {\n  this.adapters[key] = null\n}.bind(youbora)\n\nmodule.exports = youbora\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/youboralib.js\n// module id = 10\n// module chunks = 0","/**\n * See Array.isArray.\n * @memberof youbora.Util\n */\nmodule.exports = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/mixins/isarray.js\n// module id = 11\n// module chunks = 0","var YouboraObject = require('./object')\nvar Chrono = require('./chrono')\n\nvar Timer = YouboraObject.extend(\n  /** @lends youbora.Timer.prototype */\n  {\n    /**\n     * An Utility class that provides timed events in a defined time interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    /**\n     * Sets the next tick execution.\n     * @private\n     */\n    _setTick: function () {\n      this.chrono.start()\n      this._timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/timer.js\n// module id = 12\n// module chunks = 0","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('./request')\nvar Transform = require('./transform/transform')\n\nvar Communication = YouboraObject.extend(\n  /** @lends youbora.Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/communication.js\n// module id = 13\n// module chunks = 0","var Emitter = require('../emitter')\nvar Comm = require('../comm/communication')\n\nvar YouboraInfinity = Emitter.extend(\n  /** @lends youbora.Infinity.prototype */\n  {\n\n    /**\n     * This class is the base of youbora infinity. Every plugin will have an instance.\n     *\n     * @param {youbora.Plugin} plugin Parent plugin.\n     *\n     * @constructs youbora.Infinity\n     * @extends youbora.Emitter\n     * @memberof youbora\n     */\n    constructor: function (plugin) {\n      /** Parent {@link youbora.Plugin} reference. */\n      this._plugin = plugin\n    },\n\n    /**\n     * @alias youbora.Infinity.prototype.begin.\n     */\n    andBeyond: function () {\n      YouboraInfinity.prototype.begin.apply(this, arguments)\n    },\n\n    /**\n     * This method will start infinity logic, setting storage as needed.\n     * Will call fireSessionStart the first time and fireNav for every subsequent route change.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    begin: function (params) {\n      this._comm = new Comm()\n      this._comm.addTransform(this._plugin.viewTransform)\n\n      if (this._plugin.getContext()) {\n        this.fireNav(params) // returning\n      } else {\n        this.fireSessionStart(params) // first time\n      }\n    },\n\n    _generateNewContext: function () {\n      var context = btoa(new Date().getTime())\n      this._plugin.storage.setSession('context', context)\n    },\n\n    _setLastActive: function () {\n      this._plugin.storage.setSession('lastactive', new Date().getTime())\n    },\n\n    /**\n     * Returns the current {@link youbora.Communication} instance.\n     *\n     * @returns {youbora.Communication} communication instance\n     */\n    getComm: function () {\n      return this._comm\n    },\n\n    // Fire\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSessionStart: function (params) {\n      this._generateNewContext()\n      this.emit(YouboraInfinity.Event.SESSION_START, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSessionStop: function (params) {\n      this.emit(YouboraInfinity.Event.SESSION_STOP, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireNav: function (params) {\n      this.emit(YouboraInfinity.Event.NAV, { params: params })\n      this._setLastActive()\n    },\n\n    /**\n     * Emits session start request.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireEvent: function (params) {\n      this.emit(YouboraInfinity.Event.EVENT, { params: params })\n      this._setLastActive()\n    }\n  },\n  /** @lends youbora.Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: {\n      NAV: 'nav',\n      SESSION_START: 'sessionStart',\n      SESSION_STOP: 'sessionStop',\n      BEAT: 'beat',\n      EVENT: 'event'\n    }\n  }\n)\n\nmodule.exports = YouboraInfinity\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/infinity/infinity.js\n// module id = 14\n// module chunks = 0","var Emitter = require('../emitter')\nvar Log = require('../log')\nvar Util = require('../util')\nvar HybridNetwork = require('../monitors/hybridnetwork')\nvar version = require('../version')\nvar PlaybackChronos = require('./playbackchronos')\nvar PlaybackFlags = require('./playbackflags')\nvar PlayheadMonitor = require('./playheadmonitor')\n\nvar Adapter = Emitter.extend(\n  /** @lends youbora.Adapter.prototype */\n  {\n    /**\n     * Main Adapter class. All specific player adapters should extend this class specifying a player\n     * class.\n     *\n     * The Adapter works as the 'glue' between the player and YOUBORA acting both as event\n     * translator and as proxy for the {@link Plugin} to get info from the player.\n     *\n     * @constructs Adapter\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    constructor: function (player) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new PlaybackFlags()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new PlaybackChronos()\n\n      /** Reference to {@link PlayheadMonitor}. Helps the plugin detect buffers/seeks. */\n      this.monitor = null\n\n      /** Reference to {@link Plugin}. */\n      this.plugin = null\n\n      /** Reference to the player tag */\n      this.player = null\n\n      // Register player and event listeners\n      this.setPlayer(player)\n\n      /** Reference to the video/object tag, could be the same as the player. */\n      this.tag = this.player\n\n      Log.notice('Adapter ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n    },\n\n    /**\n     * Sets a new player, removes the old listeners if needed.\n     *\n     * @param {Object} player Player to be registered.\n     */\n    setPlayer: function (player) {\n      if (this.player) this.unregisterListeners()\n\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      if (this.player) this.registerListeners()\n    },\n\n    /**\n     * Override to create event binders.\n     * It's a good practice when implementing a new Adapter to create intermediate methods and call\n     * those when player events are detected instead of just calling the `fire*` methods. This\n     * will allow future users of the Adapter to customize its behaviour by overriding these\n     * methods.\n     *\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     *\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () { },\n\n    /**\n     * Override to create event de-binders.\n     *\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () { },\n\n    /**\n     * This function disposes the currend adapter, removes player listeners and drops references.\n     */\n    dispose: function () {\n      if (this.monitor) this.monitor.stop()\n      this.fireStop()\n      this.unregisterListeners()\n      this.player = null\n      this.tag = null\n    },\n\n    /**\n     * Creates a new {@link PlayheadMonitor} at this.monitor.\n     *\n     * @param {bool} monitorBuffers If true, it will monitor buffers.\n     * @param {bool} monitorSeeks If true, it will monitor seeks.\n     * @param {number} [interval=800] The interval time in ms.\n     */\n    monitorPlayhead: function (monitorBuffers, monitorSeeks, interval) {\n      var type = 0\n      if (monitorBuffers) type |= PlayheadMonitor.Type.BUFFER\n      if (monitorSeeks) type |= PlayheadMonitor.Type.SEEK\n\n      this.monitor = new PlayheadMonitor(this, type, interval)\n    },\n\n    // GETTERS //\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () {\n      return null\n    },\n\n    /** Override to return current playrate */\n    getPlayrate: function () {\n      return !this.flags.isPaused ? 1 : 0\n    },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () {\n      return null\n    },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () {\n      return null\n    },\n\n    /** Override to return video duration */\n    getDuration: function () {\n      return null\n    },\n\n    /** Override to return current bitrate */\n    getBitrate: function () {\n      return null\n    },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () {\n      if (this.getCdnTraffic() && this.getCdnTraffic() !== 0) {\n        if (!this.lastDataValue) {\n          this.lastDataValue = 0\n        }\n        var prevDataValue = this.lastDataValue\n        this.lastDataValue = this.getCdnTraffic() + this.getP2PTraffic()\n        return Math.round((this.lastDataValue - prevDataValue) / (this.plugin._ping.interval / 1000))\n      }\n      return null\n    },\n\n    /** Override to return rendition */\n    getRendition: function () {\n      return null\n    },\n\n    /** Override to return title */\n    getTitle: function () {\n      return null\n    },\n\n    /** Override to return title2 */\n    getTitle2: function () {\n      return null\n    },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () {\n      return null\n    },\n\n    /** Override to return resource URL. */\n    getResource: function () {\n      return null\n    },\n\n    /** Override to return player version */\n    getPlayerVersion: function () {\n      return null\n    },\n\n    /** Override to return player's name */\n    getPlayerName: function () {\n      return null\n    },\n\n    /** Override to return adapter version. */\n    getVersion: function () {\n      return version + '-generic-js'\n    },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () {\n      return null\n    },\n\n    /** Override to return CDN traffic bytes not using streamroot or peer5. */\n    getCdnTraffic: function () {\n      return HybridNetwork.getCdnTraffic()\n    },\n\n    /** Override to return P2P traffic bytes not using streamroot or peer5. */\n    getP2PTraffic: function () {\n      return HybridNetwork.getP2PTraffic()\n    },\n\n    /** Override to return P2P traffic sent in bytes, not using streamroot or peer5. */\n    getUploadTraffic: function () {\n      return HybridNetwork.getUploadTraffic()\n    },\n\n    /** Override to return if P2P is enabled not using streamroot or peer5. */\n    getIsP2PEnabled: function () {\n      return HybridNetwork.getIsP2PEnabled()\n    },\n\n    /** Override to return household id */\n    getHouseholdId: function () {\n      return null\n    },\n\n    /** Override to return the latency */\n    getLatency: function () {\n      return null\n    },\n\n    /** Override to return the number of packets lost */\n    getPacketLoss: function () {\n      return null\n    },\n\n    /** Override to return the number of packets sent */\n    getPacketSent: function () {\n      return null\n    },\n\n    // FLOW //\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent init if isStarted or isInited are already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireInit: function (params) {\n      if (this.plugin && this.plugin.backgroundDetector && this.plugin.backgroundDetector.canBlockStartCalls()) {\n        return null\n      }\n      if (!this.flags.isStarted && !this.flags.isInited) {\n\n        this.chronos.total.start()\n        this.chronos.join.start()\n\n        this.emit(Adapter.Event.INIT, { params: params })\n        this.flags.isInited = true\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireStart: function (params) {\n      if (this.plugin && this.plugin.backgroundDetector && this.plugin.backgroundDetector.canBlockStartCalls()) {\n        return null\n      }\n      if (!this.flags.isStarted) {\n        this.flags.isStarted = true\n\n        if (!this.flags.isInited) {\n          this.chronos.total.start()\n          this.chronos.join.start()\n        }\n        this.emit(Adapter.Event.START, { params: params })\n        this.flags.isInited = false\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireJoin: function (params) {\n      if ((this.flags.isStarted || this.flags.isInited) && !this.flags.isJoined) {\n        this.flags.isStarted = true\n        if (this.monitor) this.monitor.start()\n\n        this.flags.isJoined = true\n\n        this.chronos.join.stop()\n\n        this.emit(Adapter.Event.JOIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    firePause: function (params) {\n      if (this.flags.isJoined && !this.flags.isPaused) {\n        this.flags.isPaused = true\n\n        this.chronos.pause.start()\n\n        this.emit(Adapter.Event.PAUSE, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireResume: function (params) {\n      if (this.flags.isJoined && this.flags.isPaused) {\n        this.flags.isPaused = false\n\n        this.chronos.pause.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.RESUME, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     * @param {bool} [convertFromSeek=false] If true, will convert current seek to buffer.\n     */\n    fireBufferBegin: function (params, convertFromSeek) {\n      if (this.flags.isJoined && !this.flags.isBuffering) {\n        if (this.flags.isSeeking) {\n          if (convertFromSeek) {\n            Log.notice('Converting current buffer to seek')\n\n            this.chronos.buffer = this.chronos.seek.clone()\n            this.chronos.seek.reset()\n\n            this.flags.isSeeking = false\n          } else {\n            return\n          }\n        } else {\n          this.chronos.buffer.start()\n        }\n\n        this.flags.isBuffering = true\n        this.emit(Adapter.Event.BUFFER_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireBufferEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.BUFFER_END, { params: params })\n      }\n    },\n\n    /**\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    cancelBuffer: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     * @param {bool} [convertFromBuffer=true] If false, will convert current buffer to seek.\n     */\n    fireSeekBegin: function (params, convertFromBuffer) {\n      if (this.plugin && this.plugin.getIsLive() && this.plugin.options['content.isLive.noSeek']) return null\n      if (this.flags.isJoined && !this.flags.isSeeking) {\n        if (this.flags.isBuffering) {\n          if (convertFromBuffer !== false) {\n            Log.notice('Converting current buffer to seek')\n\n            this.chronos.seek = this.chronos.buffer.clone()\n            this.chronos.buffer.reset()\n\n            this.flags.isBuffering = false\n          } else {\n            return\n          }\n        } else {\n          this.chronos.seek.start()\n        }\n\n        this.flags.isSeeking = true\n        this.emit(Adapter.Event.SEEK_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireSeekEnd: function (params) {\n      if (this.plugin && this.plugin.getIsLive() && this.plugin.options['content.isLive.noSeek']) return null\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.SEEK_END, { params: params })\n      }\n    },\n\n    /**\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    cancelSeek: function (params) {\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireStop: function (params) {\n      if (this.flags.isStarted) {\n        if (this.monitor) this.monitor.stop()\n\n        this.flags.reset()\n        this.chronos.total.stop()\n        this.chronos.join.reset()\n        this.chronos.pause.stop()\n        this.chronos.buffer.stop()\n        this.chronos.seek.stop()\n\n        this.emit(Adapter.Event.STOP, { params: params })\n\n        if (this.plugin._adapter && this.plugin._adapter.flags.isEnded && !this.plugin._adapter.flags.isStopped) {\n          if (this.plugin.options['ad.afterStop'] === 0) {\n            this.plugin.fireStop()\n          } else {\n            this.plugin.options['ad.afterStop']--\n          }\n        }\n\n        this.chronos.pause.reset()\n        this.chronos.buffer.reset()\n        this.chronos.seek.reset()\n      }\n    },\n\n    /**\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireCasted: function (params) {\n      if (!params) params = {}\n      params.casted = true\n      this.fireStop(params)\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireError: function (code, msg, metadata, level) {\n      var params = Util.buildErrorParams(code, msg, metadata, level)\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireNoServedAd: function (code, msg, metadata, level) {\n      var params = Util.buildErrorParams(code, msg, metadata, level)\n      params.errorSeverity = \"AdsNotServed\"\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     */\n    fireFatalError: function (code, msg, metadata) {\n      if (this.monitor) this.monitor.stop()\n\n      this.fireError(code, msg, metadata, 'fatal')\n      this.fireStop()\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireClick: function (params) {\n      this.emit(Adapter.Event.CLICK, { params: params })\n    },\n\n    /**\n     * ONLY ADS.\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params to add to the request.\n     */\n    fireBlocked: function (params) {\n      this.emit(Adapter.Event.BLOCKED, { params: params })\n    }\n  },\n\n  /** @lends youbora.Adapter */\n  {\n    // Static Memebers //\n\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: {\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      STOP: 'stop',\n      CLICK: 'click',\n      BLOCKED: 'blocked'\n    }\n  }\n)\n\nmodule.exports = Adapter\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/adapter/adapter.js\n// module id = 15\n// module chunks = 0","/**\n * See Object.assign.\n *\n * @memberof youbora.Util\n */\nmodule.exports = function (target) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object')\n  }\n\n  var output = Object(target)\n  for (var index = 1; index < arguments.length; index++) {\n    var source = arguments[index]\n    if (source !== undefined && source !== null) {\n      for (var nextKey in source) {\n        if (source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey]\n        }\n      }\n    }\n  }\n  return output\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/mixins/assign.js\n// module id = 16\n// module chunks = 0","/**\n * This static class provides p2p and cdn network traffic information for\n * Streamroot, Peer5 and EasyBroadcast\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar HybridNetowrk = {\n  /** Returns CDN traffic bytes using streamroot or peer5. Otherwise null */\n  getCdnTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        acum += Streamroot.peerAgents[agent].stats.cdn\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalHttpDownloaded\n    }\n    return null\n  },\n\n  /** Returns P2P traffic bytes using streamroot or peer5. Otherwise null */\n  getP2PTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        if (Streamroot.peerAgents[agent].isP2PEnabled)\n          acum += Streamroot.peerAgents[agent].stats.p2p\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalP2PDownloaded\n    }\n    return null\n  },\n\n  /** Returns P2P traffic sent in bytes, using streamroot or peer5. Otherwise null*/\n  getUploadTraffic: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = 0\n      for (agent in Streamroot.peerAgents) {\n        if (Streamroot.peerAgents[agent].isP2PEnabled)\n          acum += Streamroot.peerAgents[agent].stats.upload\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.getStats) {\n      return peer5.getStats().totalP2PUploaded\n    }\n    return null\n  },\n\n\n  /** Returns if P2P is enabled, using streamroot or peer5. Otherwise null*/\n  getIsP2PEnabled: function () {\n    if (typeof Streamroot !== 'undefined' && Streamroot.p2pAvailable && Streamroot.peerAgents) {\n      var acum = false\n      for (agent in Streamroot.peerAgents) { // if at least one agent is enabled\n        acum = acum || Streamroot.peerAgents[agent].isP2PEnabled\n      }\n      return acum\n    }\n    if (typeof peer5 !== 'undefined' && peer5.isEnabled) {\n      return peer5.isEnabled()\n    }\n    return null\n  }\n}\n\nmodule.exports = HybridNetowrk\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/monitors/hybridnetwork.js\n// module id = 17\n// module chunks = 0","var YBRequest = require('../request')\nvar Transform = require('./transform')\nvar Log = require('../../log')\nvar Util = require('../../util')\nvar Constants = require('../../constants')\n\nvar ViewTransform = Transform.extend(\n  /** @lends youbora.ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends youbora.Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     * @param {string} session If provided, plugin will use this as a FD response.\n     */\n    constructor: function (plugin, session) {\n      Transform.prototype.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      this._session = session\n\n      this._httpSecure = plugin.options.httpSecure\n\n      this._plugin = plugin\n    },\n\n    /**\n     * Starts the 'FastData' fetching. This will send the initial request to YOUBORA in order to get\n     * the needed info for the rest of the requests.\n     *\n     * This is an asynchronous process.\n     *\n     * When the fetch is complete, {@link #fastDataConfig} will contain the parsed info.\n     * @see FastDataConfig\n     */\n    init: function () {\n      var service = Constants.Service.DATA\n      var params = {\n        apiVersion: 'v7',\n        outputformat: 'json'\n      }\n\n      params = this._plugin.requestBuilder.buildParams(params, service)\n      if (params !== null) {\n        Log.notice(service + ' ' + params.system)\n        if (params.system === 'nicetest') {\n          // \"nicetest\" is the default accountCode.\n          // If found here, it's very likely that the customer has forgotten to set it.\n          Log.error(\n            'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n          )\n        }\n\n        new YBRequest(this._plugin.getHost(), service, params)\n          .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n          .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n          .send()\n      }\n    },\n\n    /**\n     * Uses given response to set fastdata response.\n     *\n     * @param {String} response Fastdata response as json string.\n     */\n    setData: function (response) {\n      try {\n        var resp = JSON.parse(response)\n        this.response.msg = response\n        this.response.host = Util.addProtocol(resp.q.h, this._httpSecure)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt || 5\n        this.response.beatTime = resp.q.bt || 30\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    /**\n     * Parse the response from the fastData service.\n     *\n     * @private\n     */\n    _receiveData: function (req, e) {\n      var msg = req.getXHR().response\n      this.setData(msg)\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request has failed.')\n    },\n\n    /**\n     * This method will increment the view index (_0, _1, _2...). The library handles this\n     * automatically, but some error flow might need calling this manually.\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Returns the current sessionId\n     *\n     * @returns {string} SessionId\n     */\n    getSessionId: function () {\n      return this._session\n    },\n\n    /**\n     * Sets the sessionId\n     *\n     * @param {String} sessionId Sets the session id.\n     */\n    setSessionId: function (sessionId) {\n      this._session = sessionId\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.sessionId = request.params.sessionId || this.getSessionId()\n      if (request.service === Constants.Service.PING ||\n        request.service === Constants.Service.START) {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n\n      if ([ // Unless infinity event\n        Constants.Service.NAV,\n        Constants.Service.SESSION_START,\n        Constants.Service.SESSION_STOP,\n        Constants.Service.EVENT\n      ].indexOf(request.service) === -1) {\n        request.params.code = request.params.code || this.getViewCode()\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/view.js\n// module id = 18\n// module chunks = 0","var Transform = require('./transform')\nvar HlsParser = require('./resourceparsers/hlsparser')\nvar CdnParser = require('./resourceparsers/cdnparser')\nvar LocationheaderParser = require('./resourceparsers/locationheaderparser')\nvar Log = require('../../log')\nvar Constants = require('../../constants')\n\nvar ResourceTransform = Transform.extend(\n  /** @lends youbora.ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch HLS transportstreams and CDN-related info.\n     *\n     * @constructs ResourceTransform\n     * @extends youbora.Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      /** Defines if resourcetransform has finished working. */\n      this.isDone = false\n\n      this._plugin = plugin\n\n      this._realResource = null\n      this._initResource = null\n      this._cdnName = null\n      this._cdnNodeHost = null\n      this._cdnNodeTypeString = null\n      this._cdnNodeType = null\n      this._responses = {}\n\n      this._isBusy = false\n    },\n\n    /**\n     * Get the resource. If the transform is done, the real (parsed) resource will be returned\n     * Otherwise the initial one is returned.\n     *\n     * @return {string} The initial or parsed resource\n     */\n    getResource: function () {\n      if (this._plugin && this._plugin.options && this._plugin.options['content.resource']) {\n        return this._plugin.options['content.resource']\n      }\n      return this._realResource || this._initResource\n    },\n\n    /**\n     * Get the parsed CDN name.\n     *\n     * @return {string} The CDN name or null if unknown\n     */\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    /**\n     * Get the parsed CDN node.\n     *\n     * @return {string} The CDN node or null if unknown\n     */\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    /**\n     * Get the parsed CDN type string, as returned in the cdn header response.\n     *\n     * @return {string} The CDN type string\n     */\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    /**\n     * Get the parsed CDN type, parsed from the type string.\n     *\n     * @return {string} The CDN type\n     */\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Start the execution. Can be called more than once. If already running, it will be ignored,\n     * if ended it will restart.\n     * @param {string} resource the original resource\n     */\n    init: function (resource) {\n      if (!this._isBusy && !this.isDone) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        this._hlsEnabled = this._plugin.isParseHls()\n        this._cdnEnabled = this._plugin.isParseCdnNode()\n        this._locHeaderEnabled = this._plugin.isLocHeader()\n        this._cdnList = this._plugin.getParseCdnNodeList().slice() // clone\n        this._cdnNameHeader = this._plugin.getParseCdnNodeNameHeader()\n        CdnParser.setBalancerHeaderName(this._cdnNameHeader)\n\n        this._setTimeout()\n\n        if (this._locHeaderEnabled) {\n          this._parseLocHeader()\n        }\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    done: function () {\n      this.isDone = false\n      Transform.prototype.done.apply(this, arguments) // super\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseLocHeader: function () {\n      var headerParser = new LocationheaderParser()\n      headerParser.parse(this._initResource)\n      headerParser.on(LocationheaderParser.Event.DONE, function () {\n        this._realResource = headerParser.getResource()\n        this.done()\n      }.bind(this))\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsParser()\n      hlsTransform.on(HlsParser.Event.DONE, function () {\n        this._realResource = hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      if (this._cdnList.length > 0) {\n        var cdn = this._cdnList.shift()\n\n        if (this.getNodeHost()) return // abort\n\n        var cdnParser = CdnParser.create(cdn)\n\n        if (cdnParser) {\n          cdnParser.on(CdnParser.Event.DONE, function () {\n            this._responses = cdnParser.getResponses()\n            this._cdnName = cdnParser.getParsedCdnName()\n            this._cdnNodeHost = cdnParser.getParsedNodeHost()\n            this._cdnNodeTypeString = cdnParser.getParsedNodeTypeString()\n            this._cdnNodeType = cdnParser.getParsedNodeType()\n\n            if (this.getNodeHost()) {\n              this.done()\n            } else {\n              this._parseCDN()\n            }\n          }.bind(this))\n\n          // Run parse\n          cdnParser.parse(this.getResource(), this._responses)\n        } else {\n          this._parseCDN()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    /**\n     * Replaces the resource and/or Cdn info for the /start service.\n     *\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === Constants.Service.START) {\n        var lastSent = this._plugin.requestBuilder.lastSent\n        lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          lastSent.nodeTypeString = request.params.nodeTypeString = this.getNodeTypeString()\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resource.js\n// module id = 19\n// module chunks = 0","var YBRequest = require('../../request')\nvar Emitter = require('../../../emitter')\nvar Log = require('../../../log')\n\nvar HlsParser = Emitter.extend(\n  /** @lends youbora.HlsParser.prototype */\n  {\n    /**\n     * Class that asynchronously parses an HLS resource in order to get to the transportstream URL.\n     *\n     * The point behind this class is that some customers do not host the HLS manifest in the same\n     * host or even CDN where the actual content chunks are located.\n     *\n     * Since the CDN detection is performed with the resource url, it is essential that this\n     * resource url is pointing to the CDN that is actually hosting the chunks.\n     *\n     * HLS manifests can be multi-level so this class uses a recursive approach to get to the final\n     * chunk file.\n     *\n     * @constructs HlsParser\n     * @extends youbora.Emitter\n     * @memberof youbora\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(HlsParser.Event.DONE)\n    },\n\n    /**\n     * Starts the HLS parsing from the given resource. The first (outside) call should set the\n     * parentResource to null.\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)((\\?|\\;)\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    /**\n     * Get the parsed resource. Will be null/undefined if parsing is not yet started and can be a partial\n     * (an intermediate manifest) result if the parser is still running.\n     *\n     * @return {string} The parsed resource.\n     */\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends youbora.HlsParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this HlsParser is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = HlsParser\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/hlsparser.js\n// module id = 20\n// module chunks = 0","var Emitter = require('../../../emitter')\nvar Log = require('../../../log')\nvar Util = require('../../../util')\nvar YBRequest = require('../../request')\n\nvar CdnParser = Emitter.extend(\n  /** @lends youbora.CdnParser.prototype */\n  {\n    /**\n     * Class that asynchronously tries to get information about the CDN where a given resource is\n     * hosted.\n     *\n     * The info we care about is the CDN code itself, the node host and node type.\n     *\n     * The CDN is queried with http HEAD requests. This only will work if the CDN has been properly\n     * configured.\n     *\n     * When HEAD requests are performed against the resources, the CDN returns a set of headers that\n     * contain info about the cdn header and/or cdn type.\n     *\n     * Each CDN is different; some require special headers to be set when the HEAD request is\n     * performed and others don't. Also, the info can come back in any fashion of ways, sometimes\n     * both type and host come in the same response header while sometimes they're in different\n     * headers. The format of these response headers is also different from CDN to CDN, so a\n     * different regex is used for each CDN.\n     *\n     * Lastly, as the values indicating the CDN type are also different, we need a specific mapping\n     * for each one.\n     *\n     * Every instance of this class will represent a 'way' of parsing the HEAD response. So an\n     * instance should be created for Level3, Akamai, Highwinds, etc...\n     *\n     * @constructs CdnParser\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {object} options This object represents the configuration of a certain CDN parsing\n     * methodology.\n     * @param {string} options.cdnName see {@link CdnParser#setCdnName}.\n     * @param {array} options.parsers see {@link CdnParser#addParser}.\n     * @param {array} options.requestHeaders see {@link CdnParser#setRequestHeader}.\n     * @param {function} options.parseType see {@link CdnParser#setParseType}.\n     */\n    constructor: function (options) {\n      this._options = Util.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n\n      this._responses = {}\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(CdnParser.Event.DONE)\n    },\n\n    /**\n     * Adds an object that represents a parse step of the headers.\n     *\n     * Each parser item will define the element parsed (whether if it is a host, a type, both...)\n     * a headerName to parse (ie: x-cache) and a regex to execute over that header.\n     *\n     * @param {object} parser\n     * @param {string} parser.element Which element will be parsed from the request.\n     * Use {@link CdnParser.ElementType} enum.\n     * @param {string} parser.headerName Name of the header to parse.\n     * @param {regex} parser.regex Regex to match against the header content.\n     *\n     * @return itself to chain method calls\n     */\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    /**\n     * Sets the cdn name. Note that this names are provided by Youbora and must coincede with the\n     * ones offered here: {@link http://mapi.youbora.com:8081/cdns}.\n     *\n     * @return itself to chain method calls\n     */\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    /**\n     * if this CDN requires special headers to be set in order to respond with the info we want,\n     * add them using this method.\n     *\n     * @param {string} key Name of the header.\n     * @param {string} value Content of the header.\n     *\n     * @return itself to chain method calls\n     */\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    /**\n     * Adds a parsing function for parsing the type (hit or miss) of the request.\n     *\n     * Parser fucntion will receive a string parsed from a type header (see\n     * {@link CdnParser#addParser}). Should return 1 in case of HIT, 2 in case of MISS and\n     * 0 otherwise.\n     *\n     * @param {function} parser Parsing function\n     *\n     * @return itself to chain method calls\n     */\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    /**\n     * Get parsed CDN name.\n    *\n    * @return {string} The CDN name or null if unknown\n    */\n    getParsedCdnName: function () {\n      return this._cdnName\n    },\n\n    /**\n     * Get the parsed CDN node.\n     *\n     * @return {string} The CDN node or null if unknown\n     */\n    getParsedNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    /**\n     * Get the parsed CDN type string, as returned in the cdn header response.\n     *\n     * @return {string} The CDN type string\n     */\n    getParsedNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    /**\n     * Get the parsed CDN type, parsed from the type string.\n     *\n     * @return {string} The CDN type\n     */\n    getParsedNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Returns the request responses from this CdnParser.\n     * This is filled with the responses from the constructor, or created empty if null.\n     * Then the performed request response (if any) is added to this map.\n     * Call this method after \"using\" the CdnParser and pass the responses to the following\n     * CdnParser so it can use the responses if it applies.\n     * @return the request responses\n     */\n    getResponses: function () {\n      return this._responses\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      this._responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (this._responses[headerString]) {\n        this._parseResponse(this._responses[headerString])\n      } else {\n        this._requestResponse(url)\n      }\n    },\n\n    _requestResponse: function (url) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n        // cache: true\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        this._responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(this._responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case CdnParser.ElementType.HOST:\n              this._cdnNodeHost = matches[1]\n              break\n            case CdnParser.ElementType.TYPE:\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case CdnParser.ElementType.HOST_AND_TYPE:\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case CdnParser.ElementType.TYPE_AND_HOST:\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case CdnParser.ElementType.NAME:\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends youbora.CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     *\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n\n    /**\n     * Possible different bits of info we can get from a header.\n     *\n     * @enum\n     */\n    ElementType: {\n      HOST: 'host',\n      TYPE: 'type',\n      HOST_AND_TYPE: 'host+type',\n      TYPE_AND_HOST: 'type+host',\n      NAME: 'name'\n    },\n\n    /**\n     * List of available CDN parsers.\n     * @private\n     */\n    _cdnConfigs: {},\n\n    /**\n     * This is a special case. The BalancerCdnParser is a custom CDN definition\n     * that tries to get the CDN name directly from one of the headers. This method can be used\n     * as a shortcut to creating a new CDN definition.\n     *\n     * This is usually used with DNS-based load balance services, such as Cedexis.\n     *\n     * Youboralib will use this method by itself using the configuration passed in the\n     * {@link Options}.\n     *\n     * @param {string} cdnNameHeader the header response name where to get the CDN name from.\n     */\n    setBalancerHeaderName: function (name) {\n      CdnParser._cdnConfigs.Balancer.parsers[0].headerName = name\n    },\n\n    /**\n     * Create one of the pre-defined CDN parsers. This method will be called with the keys passed\n     * to {@link Options#'parse.CdnNode.list'}.\n     *\n     * Before using this method, configs must be added first using {@link CdnParser.add}.\n     *\n     * @param {string} cdnName Name of the CDN\n     * @return {CdnParser} An instance or undefined if the names does not match any CDN.\n     */\n    create: function (key) {\n      if (CdnParser._cdnConfigs[key]) {\n        return new CdnParser(CdnParser._cdnConfigs[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnParser named ' + key)\n      }\n    },\n\n    /**\n     * Adds the given CdnParser's config to the available list. Objects sent must comply with\n     * CdnParser constructor.\n     *\n     * @param {string} key The name that will identify the CDN.\n     * @param {Object} config The parser that defines the CDN.\n     */\n    add: function (key, config) {\n      CdnParser._cdnConfigs[key] = config\n    }\n  }\n)\n\n// Adding built-in parsers\nCdnParser.add('Level3', require('./cdnparsers/level3'))\nCdnParser.add('Cloudfront', require('./cdnparsers/cloudfront'))\nCdnParser.add('Akamai', require('./cdnparsers/akamai'))\nCdnParser.add('Highwinds', require('./cdnparsers/highwinds'))\nCdnParser.add('Fastly', require('./cdnparsers/fastly'))\nCdnParser.add('Balancer', require('./cdnparsers/balancer'))\n\nmodule.exports = CdnParser\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparser.js\n// module id = 21\n// module chunks = 0","var Emitter = require('../../../emitter')\nvar Log = require('../../../log')\nvar Util = require('../../../util')\nvar YBRequest = require('../../request')\n\nvar LocationheaderParser = Emitter.extend(\n  /** @lends youbora.LocationheaderParser.prototype */\n  {\n\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(LocationheaderParser.Event.DONE)\n    },\n\n    /**\n     * Parses given header to check.\n     */\n    parse: function (url) {\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: {},\n        // cache: true\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        this._response = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(this._response)\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      headers.split('\\n').forEach(function (line) {\n        if (line.startsWith('Location:')) {\n          this._realResource = line.slice(10)\n        }\n      }.bind(this))\n      this.done()\n    },\n\n    /**\n   * Get the parsed resource. Will be null/undefined if parsing is not yet started\n   *\n   * @return {string} The parsed resource.\n   */\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends youbora.CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     *\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n  }\n)\n\nmodule.exports = LocationheaderParser\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/locationheaderparser.js\n// module id = 22\n// module chunks = 0","var YouboraObject = require('../object')\n\nvar Options = YouboraObject.extend(\n  /** @lends youbora.Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * Any value specified in this class, if set, will override the info the plugin is able to get\n     * on its own.\n     *\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [enabled=true] If false, the plugin won't send NQS requests. */\n      this['enabled'] = true\n\n      /**\n       * @prop {boolean} [httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null/undefined it will use '//'.\n       */\n      this['httpSecure'] = null\n\n      /** @prop {string} [host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['accountCode'] = 'nicetest'\n\n      /** @prop {string} [username] User ID value inside your system. */\n      this['username'] = null\n\n      /**\n       *  @prop {boolean} [obfuscateIp=false]\n       * If true, the view will have the IP obfuscated\n       */\n      this['obfuscateIp'] = false\n\n      /** @prop {string} [userType] User type. */\n      this['userType'] = null\n\n      /** @prop {string} [referer] Site url.\n       *  By default window.location.href */\n      this['referer'] = null\n\n      /**\n       * @prop {array<string>} [experiments]\n       * Experiment id list\n       */\n      this['experiments'] = []\n\n      // PARSERS\n\n      /**\n       * @prop {boolean} [parse.Hls=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.hls'] = false\n\n      /**\n       * @prop {string} [parse.CdnNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.cdnNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CdnNode=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.cdnNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CdnNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.cdnNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      /**\n       * @prop {boolean} [parse.CdnNode=false]\n       * If true the plugin will look for location value in manifest header to retrieve the actual resource\n       * It might slow performance down.\n       */\n      this['parse.locationHeader'] = false\n\n      // NETWORK\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      // DEVICE\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      // CONTENT\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {boolean} [content.isLive.noSeek] True if the player seeks automatically when resumed or ending buffer. Only for live content */\n      this['content.isLive.noSeek'] = false\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {int} [content.fps] Frames per second of the content in the current moment. */\n      this['content.fps'] = null\n\n      /** @prop {int} [content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} [content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} [content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /** @prop {string} [content.cdnNode] CDN node id */\n      this['content.cdnNode'] = null\n\n      /** @prop {int} [content.cdnType] CDN node type\n       * TCP_HIT / HIT: 1\n       * TCP_MISS / MISS: 2\n       * TCP_MEM_HIT: 3\n       * TCP_IMS_HIT: 4\n       */\n      this['content.cdnType'] = null\n\n      /**\n       * @prop {object} [content.metadata]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      /** @prop {string} [content.streamingProtocol] Name of the streaming media protocol.\n       * Can be:\n       *   - HDS\t(Adobe HDS)\n       *   - HLS\t(Apple HLS)\n       *   - MSS\t(Microsoft Smooth Streaming)\n       *   - DASH\t(MPEG-DASH)\n       *   - RTMP\t(Adobe RTMP)\n       *   - RTP\t(RTP)\n       *   - RTSP\t(RTSP)\n       */\n      this['content.streamingProtocol'] = null\n\n      // ADS\n\n      /**\n       * @prop {object} [ad.metadata]\n       * Item containing mixed extra information about ads like: request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      /**\n       * @prop {string} [ad.campaign]\n       * String containing the name of the campaign\n       */\n      this['ad.campaign'] = null\n\n      /**\n       * @prop {string} [ad.resource]\n       * String containing the ad resource\n       */\n      this['ad.resource'] = null\n\n      /**\n       * @prop {string} [ad.title]\n       * String containing the title of the campaign\n       */\n      this['ad.title'] = null\n\n      /**\n       * @prop {boolean} [ad.ignore]\n       * False by default.\n       * If true, youbora blocks ad events and calculates jointime ignoring ad time.\n       */\n      this['ad.ignore'] = false\n\n      /**\n       * @prop {int} [ad.afterStop]\n       * 0 by default.\n       * Set to integer positive value indicating how many ads\n       * will be shown as post-rolls if they do it after content player triggers stop event.\n       * Set to -1 to block automatic fireStop, manual call required.\n       * Manual call using fireStop({end: true})\n       */\n      this['ad.afterStop'] = 0\n\n      // BACKGROUND\n\n      /**\n       *  @prop {boolean} [background.enabled=false]\n       * If true, plugin will send background/foreground events\n       * Different device behaviour is settable in background.settings\n       */\n      this['background.enabled'] = true\n\n      /**\n       *  @prop {string} [background.settings]\n       * Action to do when the browser goes to background.\n       * Options are 'stop', 'pause', and '' for no action.\n       * stop will be used to stop the view and track post-foreground events in a new view\n       * pause will be used when after foreground event, an action like pressing play button is expected to resume the content\n       * '' will be used if the content can be played in background\n       * If not defined, specific device options will be used\n       * background.setings.android / background.settings.iphone / background.settings.desktop / background.settings.tv\n       * Default specific device values are stop for android and iphone, nothing for desktop.\n       */\n      this['background.settings'] = null\n\n      /**\n       *  @prop {string} [background.settings.android='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is android type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.android'] = 'stop'\n\n      /**\n       *  @prop {string} [background.settings.iphone='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is iphone type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.iphone'] = 'stop'\n\n      /**\n       *  @prop {string} [background.settings.desktop=null]\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is desktop type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * Null by default\n       */\n      this['background.settings.desktop'] = null\n\n      /**\n       *  @prop {string} [background.settings.tv='stop']\n       * If background.settings is not defined, action to do when the browser goes to background if\n       * the device is smartTV type.\n       * Options are 'stop', 'pause', and '' or not defined for no action.\n       * bg by default\n       */\n      this['background.settings.tv'] = 'stop'\n\n      // EXTRAPARAMS\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      /** @prop {string} [extraparam.11] Custom parameter 11. */\n      this['extraparam.11'] = null\n\n      /** @prop {string} [extraparam.12] Custom parameter 12. */\n      this['extraparam.12'] = null\n\n      /** @prop {string} [extraparam.13] Custom parameter 13. */\n      this['extraparam.13'] = null\n\n      /** @prop {string} [extraparam.14] Custom parameter 14. */\n      this['extraparam.14'] = null\n\n      /** @prop {string} [extraparam.15] Custom parameter 15. */\n      this['extraparam.15'] = null\n\n      /** @prop {string} [extraparam.16] Custom parameter 16. */\n      this['extraparam.16'] = null\n\n      /** @prop {string} [extraparam.17] Custom parameter 17. */\n      this['extraparam.17'] = null\n\n      /** @prop {string} [extraparam.18] Custom parameter 18. */\n      this['extraparam.18'] = null\n\n      /** @prop {string} [extraparam.19] Custom parameter 19. */\n      this['extraparam.19'] = null\n\n      /** @prop {string} [extraparam.20] Custom parameter 20. */\n      this['extraparam.20'] = null\n\n      /** @prop {string} [ad.extraparam.1] Ad custom parameter 1. */\n      this['ad.extraparam.1'] = null\n\n      /** @prop {string} [ad.extraparam.2] Ad custom parameter 2. */\n      this['ad.extraparam.2'] = null\n\n      /** @prop {string} [ad.extraparam.3] Ad custom parameter 3. */\n      this['ad.extraparam.3'] = null\n\n      /** @prop {string} [ad.extraparam.4] Ad custom parameter 4. */\n      this['ad.extraparam.4'] = null\n\n      /** @prop {string} [ad.extraparam.5] Ad custom parameter 5. */\n      this['ad.extraparam.5'] = null\n\n      /** @prop {string} [ad.extraparam.6] Ad custom parameter 6. */\n      this['ad.extraparam.6'] = null\n\n      /** @prop {string} [ad.extraparam.7] Ad custom parameter 7. */\n      this['ad.extraparam.7'] = null\n\n      /** @prop {string} [ad.extraparam.8] Ad custom parameter 8. */\n      this['ad.extraparam.8'] = null\n\n      /** @prop {string} [ad.extraparam.9] Ad custom parameter 9. */\n      this['ad.extraparam.9'] = null\n\n      /** @prop {string} [ad.extraparam.10] Ad custom parameter 10. */\n      this['ad.extraparam.10'] = null\n\n      /** @prop {number} [session.expire=21600000] Time until infinity session expires in ms. */\n      this['session.expire'] = 21600000\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      base = base || this\n      if (typeof options !== 'undefined') {\n        for (var key in options) {\n          if (typeof base[key] === 'object' && base[key] !== null) {\n            this.setOptions(options[key], base[key])\n          } else {\n            base[key] = options[key]\n          }\n        }\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/options.js\n// module id = 23\n// module chunks = 0","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar prefix = 'youbora'\n\n/**\n * This class manages data sotrage in the browser memory.\n *\n * @extends youbora.Emitter\n * @memberof youbora\n */\nvar YouboraStorage = YouboraObject.extend(\n  /** @lends youbora.YouboraStorage.prototype */\n  {\n    /**\n     * Saves in localStorage or equivalent\n     *\n     * @param {string} key Key of the value. 'youbora.' will be appended.\n     * @param {string} value Value.\n     */\n    setLocal: function (key, value) {\n      try {\n        if (!localStorage) {\n          Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return localStorage.setItem('youbora.' + key, value)\n        }\n      }\n      catch (err) {\n        Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Reads from localStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     */\n    getLocal: function (key) {\n      try {\n        if (!localStorage) {\n          Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return localStorage.getItem(prefix + '.' + key)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs localStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Saves in sessionStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     * @param {string} value Value.\n     */\n    setSession: function (key, value) {\n      try {\n        if (!sessionStorage) {\n          Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return sessionStorage.setItem(prefix + '.' + key, value)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n      }\n      return null\n    },\n\n    /**\n     * Reads from sessionStorage or equivalent\n     *\n     * @param {string} key Key of the value. prefix will be appended.\n     */\n    getSession: function (key) {\n\n      try {\n        if (!sessionStorage) {\n          Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n          // TO-DO: develop alternative based on cookies\n        } else {\n          return sessionStorage.getItem(prefix + '.' + key)\n        }\n      } catch (err) {\n        Log.error('Youbora Infinity needs sessionStorage which is not supported by your browser.')\n      }\n      return null\n    }\n  }\n)\n\nmodule.exports = YouboraStorage\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/storage.js\n// module id = 24\n// module chunks = 0","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar startParams = [\n  'accountCode',\n  'username',\n  'rendition',\n  'player',\n  'title',\n  'title2',\n  'live',\n  'mediaDuration',\n  'mediaResource',\n  'transactionCode',\n  'properties',\n  'cdn',\n  'playerVersion',\n  'param1',\n  'param2',\n  'param3',\n  'param4',\n  'param5',\n  'param6',\n  'param7',\n  'param8',\n  'param9',\n  'param10',\n  'param11',\n  'param12',\n  'param13',\n  'param14',\n  'param15',\n  'param16',\n  'param17',\n  'param18',\n  'param19',\n  'param20',\n  'obfuscateIp',\n  'p2pEnabled',\n  'pluginVersion',\n  'pluginInfo',\n  'isp',\n  'connectionType',\n  'ip',\n  'deviceCode',\n  'preloadDuration',\n  'referer',\n  'userType',\n  'streamingProtocol',\n  'householdId',\n  'experiments'\n]\n\nvar adStartParams = [\n  'playhead',\n  'adTitle',\n  'adPosition',\n  'adDuration',\n  'adCampaign',\n  'adResource',\n  'adPlayerVersion',\n  'adProperties',\n  'adAdapterVersion',\n  'extraparam1',\n  'extraparam2',\n  'extraparam3',\n  'extraparam4',\n  'extraparam5',\n  'extraparam6',\n  'extraparam7',\n  'extraparam8',\n  'extraparam9',\n  'extraparam10'\n]\n\nvar RequestBuilder = YouboraObject.extend(\n  /** @lends youbora.RequestBuilder.prototype */\n  {\n    /**\n     * This class helps building params associated with each event: /start, /joinTime...\n     *\n     * @constructs RequestBuilder\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin A Plugin instance\n     */\n    constructor: function (plugin) {\n      this._plugin = plugin\n      this._adNumber = 0\n\n      /** Stores a list of the last params fetched */\n      this.lastSent = {}\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {Array.string} paramList A list of params to fetch.\n     * @param {bool} onlyDifferent If true, only fetches params that have changed\n     */\n    fetchParams: function (params, paramList, onlyDifferent) {\n      params = params || {}\n      paramList = paramList || []\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i]\n\n        if (params[param]) { continue }\n        var getterName = RequestBuilder.getters[param]\n\n        if (this._plugin[getterName]) {\n          var value = this._plugin[getterName]()\n          if (value !== null && (!onlyDifferent || this.lastSent[param] !== value)) {\n            params[param] = value\n            this.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }\n\n      return params\n    },\n\n    /**\n     * Adds to params object all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {string} service The name of the service. Use {@link Plugin.Service} enum.\n     */\n    buildParams: function (params, service) {\n      params = params || {}\n      this.fetchParams(params, RequestBuilder.params[service], false)\n      this.fetchParams(params, RequestBuilder.differentParams[service], true)\n      return params\n    },\n\n    /**\n     * Creates an adnumber if it does not exist and stores it in lastSent. If it already exists,\n     * it is incremented by 1.\n     *\n     * @returns {number} adNumber\n     */\n    getNewAdNumber: function () {\n      var adNumber = this.lastSent.adNumber\n      if (adNumber && this.lastSent.adPosition === this._plugin.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this.lastSent.adNumber = adNumber\n      return adNumber\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @returns {Object} params\n     */\n    getChangedEntities: function () {\n      return this.fetchParams({}, RequestBuilder.differentParams['entities'], true)\n    }\n  },\n  /** @lends youbora.RequestBuilder */\n  {\n    // Static Members\n\n    /** List of params used by each service */\n    params: {\n      '/data': ['system', 'pluginVersion', 'requestNumber'],\n\n      '/init': startParams,\n      '/start': startParams,\n      '/joinTime': ['joinDuration', 'playhead', 'mediaDuration'],\n      '/pause': ['playhead'],\n      '/resume': ['pauseDuration', 'playhead'],\n      '/seek': ['seekDuration', 'playhead'],\n      '/bufferUnderrun': ['bufferDuration', 'playhead'],\n      '/error': ['player'].concat(startParams),\n      '/stop': ['bitrate', 'playhead', 'pauseDuration'],\n\n      '/adInit': adStartParams,\n      '/adStart': adStartParams,\n      '/adJoin': ['playhead', 'adPosition', 'adJoinDuration', 'adPlayhead'],\n      '/adPause': ['playhead', 'adPosition', 'adPlayhead'],\n      '/adResume': ['playhead', 'adPosition', 'adPlayhead', 'adPauseDuration'],\n      '/adBufferUnderrun': ['playhead', 'adPosition', 'adPlayhead', 'adBufferDuration'],\n      '/adStop': ['playhead', 'adPosition', 'adPlayhead', 'adBitrate', 'adTotalDuration', 'pauseDuration'],\n      '/adClick': ['playhead', 'adPosition', 'adPlayhead'],\n      '/adError': adStartParams,\n      '/adBlocked': adStartParams,\n      '/ping': ['droppedFrames', 'playrate', 'cdnDownloadedTraffic', 'p2pDownloadedTraffic', 'uploadTraffic', 'latency', 'packetLoss', 'packetSent'],\n\n      '/infinity/session/start': [\n        'accountCode',\n        'username',\n        'navContext',\n        'route',\n        'page'\n      ],\n      '/infinity/session/stop': [],\n      '/infinity/session/nav': ['navContext', 'username', 'route', 'page'],\n      '/infinity/session/beat': [],\n      '/infinity/event': ['accountCode']\n    },\n\n    /** List of params used by each service (only if they are different) */\n    differentParams: {\n      '/join': [\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource'\n      ],\n      '/adJoin': ['adTitle', 'adDuration', 'adResource'],\n      'entities': [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'param11',\n        'param12',\n        'param13',\n        'param14',\n        'param15',\n        'param16',\n        'param17',\n        'param18',\n        'param19',\n        'param20',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ]\n    },\n\n    /** List of params and its related getter */\n    getters: {\n      requestNumber: 'getRequestNumber',\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n      userType: 'getUserType',\n      streamingProtocol: 'getStreamingProtocol',\n      obfuscateIp: 'getObfuscateIp',\n      householdId: 'getHouseholdId',\n      latency: 'getLatency',\n      packetLoss: 'getPacketLoss',\n      packetSent: 'getPacketSent',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n      param11: 'getExtraparam11',\n      param12: 'getExtraparam12',\n      param13: 'getExtraparam13',\n      param14: 'getExtraparam14',\n      param15: 'getExtraparam15',\n      param16: 'getExtraparam16',\n      param17: 'getExtraparam17',\n      param18: 'getExtraparam18',\n      param19: 'getExtraparam19',\n      param20: 'getExtraparam20',\n\n      extraparam1: 'getAdExtraparam1',\n      extraparam2: 'getAdExtraparam2',\n      extraparam3: 'getAdExtraparam3',\n      extraparam4: 'getAdExtraparam4',\n      extraparam5: 'getAdExtraparam5',\n      extraparam6: 'getAdExtraparam6',\n      extraparam7: 'getAdExtraparam7',\n      extraparam8: 'getAdExtraparam8',\n      extraparam9: 'getAdExtraparam9',\n      extraparam10: 'getAdExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adCampaign: 'getAdCampaign',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adAdapterVersion: 'getAdAdapterVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      preloadDuration: 'getPreloadDuration',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      adPauseDuration: 'getAdPauseDuration',\n      adTotalDuration: 'getAdTotalDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString',\n\n      route: 'getReferer',\n      sessionId: 'getSessionId',\n      navContext: 'getContext',\n      page: 'getPageName',\n\n      cdnDownloadedTraffic: 'getCdnTraffic',\n      p2pDownloadedTraffic: 'getP2PTraffic',\n      p2pEnabled: 'getIsP2PEnabled',\n      uploadTraffic: 'getUploadTraffic',\n\n      experiments: 'getExperiments'\n    }\n\n  }\n)\n\nmodule.exports = RequestBuilder\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/requestbuilder.js\n// module id = 25\n// module chunks = 0","var YouboraObject = require('../object')\n/**\n * This static class provides device detection methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar BackgroundDetector = YouboraObject.extend({\n  constructor: function (plugin) {\n    this.plugin = plugin\n    this.isInBackground = false\n    this.listenerReference = this._visibilityListener.bind(this)\n    this._reset()\n  },\n\n  startDetection: function (windowRef) {\n    if (!this.isBackgroundDetectorStarted) {\n      if (windowRef) this.windowObject = windowRef\n      if (this.windowObject && this.windowObject.document) {\n        this.isBackgroundDetectorStarted = true\n        this.windowObject.document.addEventListener(\"visibilitychange\", this.listenerReference)\n      }\n    } else {\n      if (windowRef != this.windowObject) {\n        this.stopDetection()\n        this.isBackgroundDetectorStarted = false\n        this.startDetection(windowRef)\n      }\n    }\n  },\n\n  stopDetection: function () {\n    if (this.isBackgroundDetectorStarted) {\n      this.windowObject.document.removeEventListener(\"visibilitychange\", this.listenerReference)\n      this._reset()\n    }\n  },\n\n  _reset: function () {\n    this.isBackgroundDetectorStarted = false\n    this.windowObject = typeof window !== 'undefined' ? window : undefined\n  },\n\n  _visibilityListener: function (e) {\n    if (this.windowObject.document.visibilityState === 'hidden') { // to Background\n      this.isInBackground = true\n      var settings = this._getSettings()\n      if (typeof settings === \"string\") {\n        switch (settings) {\n          case 'stop':\n            this._fireStop()\n            break\n          case 'pause':\n            this._firePause()\n            break\n        }\n      }\n    } else if (this.windowObject.document.visibilityState === 'visible') { // to Foreground\n      this.isInBackground = false\n      // nothing yet\n    }\n  },\n\n  _getSettings: function () {\n    if (typeof this.plugin.options['background.settings'] === \"string\" && this.plugin.options['background.settings']) {\n      return this.plugin.options['background.settings']\n    }\n    if (this.plugin.deviceDetector.isSmartTV()) {\n      return this.plugin.options['background.settings.tv']\n    }\n    if (this.plugin.deviceDetector.isDesktop()) {\n      return this.plugin.options['background.settings.desktop']\n    }\n    if (this.plugin.deviceDetector.isAndroid()) {\n      return this.plugin.options['background.settings.android']\n    }\n    if (this.plugin.deviceDetector.isIphone()) {\n      return this.plugin.options['background.settings.iphone']\n    }\n  },\n\n  _firePause: function () {\n    this.adsAdapter = this.plugin.getAdsAdapter()\n    this.contentAdapter = this.plugin.getAdapter()\n    if (this.adsAdapter && this.adsAdapter.flags.isStarted && !this.adsAdapter.flags.isEnded) {\n      this.adsAdapter.firePause()\n    } else if (this.contentAdapter && this.contentAdapter.flags.isStarted && !this.contentAdapter.flags.isEnded) {\n      this.contentAdapter.firePause()\n    }\n  },\n\n  _fireStop: function () {\n    this.adsAdapter = this.plugin.getAdsAdapter()\n    this.contentAdapter = this.plugin.getAdapter()\n    if (this.adsAdapter && this.adsAdapter.flags.isStarted && !this.adsAdapter.flags.isEnded) {\n      this.adsAdapter.fireStop()\n    }\n    if (this.contentAdapter) {\n      this.contentAdapter.fireStop({ end: true })\n    } else {\n      this.plugin.fireStop({ end: true })\n    }\n  },\n\n  canBlockStartCalls: function () {\n    return (\n      this.plugin.backgroundDetector.isInBackground &&\n      this.plugin.options['background.enabled'] === true &&\n      this.plugin.backgroundDetector._getSettings() // it is stop or pause\n    )\n  }\n})\n\nmodule.exports = BackgroundDetector\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/detectors/backgroundDetector.js\n// module id = 26\n// module chunks = 0","var YouboraObject = require('../object')\n/**\n * This static class provides device detection methods.\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar DeviceDetector = YouboraObject.extend({\n  constructor: function () {\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      this._isSmartTV = navigator.userAgent.toLowerCase().match(/smarttv/) ||\n        navigator.userAgent.toLowerCase().match(/smart-tv/) ||\n        navigator.userAgent.toLowerCase().match(/appletv/) ||\n        navigator.userAgent.toLowerCase().match(/apple tv/)\n      this._isIphoneDevice = navigator.userAgent.match(/iPhone|iPad|iPod/i) !== null\n      this._isAndroidDevice = navigator.userAgent.match(/Android/) !== null\n      this._isSmartphoneDevice = !this._isSmartTV && (this._isIphoneDevice || this._isAndroidDevice)\n      this._isDesktopDevice = !this._isSmartphoneDevice && !this._isSmartTV\n    }\n  },\n\n  isIphone: function () {\n    return this._isIphoneDevice\n  },\n\n  isAndroid: function () {\n    return this._isAndroidDevice\n  },\n\n  isSmartphone: function () {\n    return this._isSmartphoneDevice\n  },\n\n  isDesktop: function () {\n    return this._isDesktopDevice\n  },\n\n  isSmartTV: function () {\n    return this._isSmartTV\n  }\n})\n\nmodule.exports = DeviceDetector\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/detectors/deviceDetector.js\n// module id = 27\n// module chunks = 0","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends youbora.PlayheadMonitor.prototype */\n  {\n    /**\n     * This class periodically checks the player's playhead in order to infer buffer and/or seek\n     * events.\n     *\n     * Instances of this class are bounded to an {@link Adapter} and fires its buffer and seek\n     * start and end methods.\n     *\n     * In order to use this feature, {@link Adapter#monitorPlayhead} should be used.\n     *\n     * @constructs PlayheadMonitor\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     *\n     * @param {Adapter} adapter Adapter to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (adapter, type, interval) {\n      this._adapter = adapter\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._lastPlayhead = 0\n\n      if (interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), interval)\n      }\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    skipNextTick: function () {\n      this._lastPlayhead = 0\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var bufferThreshold = deltaTime * PlayheadMonitor.kBUFFER_THRESHOLD_RATIO\n      var seekThreshold = deltaTime * PlayheadMonitor.kSEEK_THRESHOLD_RATIO\n\n      if (this._adapter.getPlayrate && this._adapter.getPlayrate() && this._adapter.getPlayrate() != 1) {\n        bufferThreshold *= this._adapter.getPlayrate()\n        seekThreshold *= this._adapter.getPlayrate()\n      }\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // youbora.Log.debug('curr: ' + currentPlayhead + ' last: ' + this._lastPlayhead + ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._adapter.flags.isPaused &&\n          !this._adapter.flags.isSeeking\n        ) {\n          this._adapter.fireBufferBegin(null, false)\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0) {\n          this._adapter.fireSeekBegin(null, false)\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled) {\n          this._adapter.fireSeekEnd()\n        }\n        if (this._bufferEnabled) {\n          this._adapter.fireBufferEnd()\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns adapter's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._adapter.getPlayhead()\n    }\n  },\n  /** @lends youbora.PlayheadMonitor */\n  {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Buffer threshold */\n    kBUFFER_THRESHOLD_RATIO: 0.5,\n\n    /** Seek threshold */\n    kSEEK_THRESHOLD_RATIO: 2\n  })\n\nmodule.exports = PlayheadMonitor\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/adapter/playheadmonitor.js\n// module id = 28\n// module chunks = 0","// @flow\nimport {registerPlugin} from 'playkit-js'\nimport Youbora from './youbora'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nexport default Youbora;\nexport {__VERSION__ as VERSION, __NAME__ as NAME};\n\n/**\n * The plugin name.\n * @type {string}\n * @const\n */\nconst pluginName = \"youbora\";\n/**\n * Register the plugin in player's registry.\n */\nregisterPlugin(pluginName, Youbora);\n\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","//@flow\nimport { BasePlugin } from 'playkit-js'\nimport youbora from 'youboralib'\nimport YouboraAdapter from './adapter/adapter'\n\n/**\n * Youbora plugin for analytics.\n * @classdesc\n */\nexport default class Youbora extends BasePlugin {\n\n  /**\n   * The default configuration of the plugin.\n   * @type {Object}\n   * @static\n   */\n  static defaultConfig: Object = {\n    options: {}\n  };\n\n  /**\n   * Define under what conditions the youbora plugin is valid.\n   * @returns {boolean} - Whether the plugin is valid or not.\n   * @static\n   */\n  static isValid (): boolean {\n    return true;\n  }\n\n  /**\n   * @constructor\n   * @param {string} name - The name of the plugin.\n   * @param {Player} player - Access to the player reference.\n   * @param {Object} config - The plugin configuration.\n   */\n  constructor(name: string, player: Player, config: Object) {\n    super(name, player, config);\n    this._youbora = new youbora.Plugin(this.config.options);\n    this._youbora.setAdapter(new YouboraAdapter(player, config))\n    this._addBindings();\n    this._setup();\n  }\n\n  /**\n   * Updates the configuration of the plugin.\n   * @param {Object} update - The updated configuration.\n   * @override\n   * @returns {void}\n   */\n  updateConfig (update: Object): void {\n    super.updateConfig(update);\n    this._youbora.setOptions(update.options);\n    if (this._youbora.getAdapter()) {\n      this._youbora.getAdapter().config = update;\n    }\n    this._addPlayerMetadata();\n  }\n\n  /**\n   * Reset the plugin\n   * @return {void}\n   */\n  reset (): void {\n\n  }\n\n  /**\n   * Add the player metadata to the plugin config.\n   * @function\n   * @private\n   * @returns {void}\n   */\n  _addPlayerMetadata (): void {\n    this._youbora.setOptions({\n      properties: {\n        kalturaInfo: {\n          entryId: this.config.entryId,\n          sessionId: this.config.sessionId,\n          uiConfId: this.config.uiConfId\n        }\n      }\n    });\n  }\n\n  /**\n   * Add the necessary bindings.\n   * @function\n   * @private\n   * @returns {void}\n   */\n  _addBindings (): void {\n    // Bind the plugin logger to the youbora sdk logger\n    this._youbora.getAdapter().bindLogger(this.logger);\n  }\n\n  /**\n   * Plugin setup operations.\n   * @function\n   * @private\n   * @returns {void}\n   */\n  _setup (): void {\n\n  }\n\n  /**\n   * Plugin destroy operations.\n   * @function\n   * @public\n   * @returns {void}\n   */\n  destroy (): void {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./youbora.js","module.exports = {\"name\":\"youboralib\",\"type\":\"lib\",\"tech\":\"js\",\"author\":\"Jordi Aguilar\",\"version\":\"6.2.3\",\"built\":\"2018-05-02\",\"repo\":\"https://bitbucket.org/npaw/lib-plugin-js.git\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/manifest.json\n// module id = 31\n// module chunks = 0","/* eslint no-extend-native: \"off\" */\n\n/**\n * When executed, this function applies polyfills to the following functionalities:\n * Function.prototype.bind and\n * Array.prototype.forEach.\n *\n * @memberof youbora\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () { }\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n}\n\nmodule.exports = applyPolyfills\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/polyfills.js\n// module id = 32\n// module chunks = 0","var F = function () { }\n\n/** See Object.create. */\nmodule.exports = function (o) {\n  if (arguments.length > 1) {\n    throw Error('Second argument not supported')\n  }\n  if (o === null) {\n    throw Error('Cannot set a null [[Prototype]]')\n  }\n  if (typeof o !== 'object') {\n    throw TypeError('Argument must be an object')\n  }\n  F.prototype = o\n  return new F()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/mixins/create.js\n// module id = 33\n// module chunks = 0","var Transform = require('./transform')\nvar Constants = require('../../constants')\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends youbora.Nqs6Transform.prototype */\n  {\n    /**\n     * This class ensures NQS6 backwards compatibility.\n     * Deprecated since NQS6 clusters are essentialy gone.\n     *\n     * @deprecated\n     * @constructs\n     * @extends youbora.Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'msg', 'msg')\n\n      if (request.service !== Constants.Service.JOIN) {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case Constants.Service.START:\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case Constants.Service.JOIN:\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case Constants.Service.SEEK:\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case Constants.Service.BUFFER:\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case Constants.Service.PING:\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/nqs6.js\n// module id = 34\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'LEVEL3',\n  parsers: [{\n    element: 'host+type',\n    headerName: 'X-WR-Diag',\n    regex: /Host:(.+)\\sType:(.+)/\n  }],\n  requestHeaders: {\n    'X-WR-Diag': 'host'\n  },\n  parseType: function (type) {\n    if (type) {\n      if (\n        type.indexOf('TCP_HIT') === 0 ||\n        type.indexOf('TCP_MEM_HIT') === 0 ||\n        type.indexOf('TCP_IMS_HIT') === 0\n      ) {\n        return 1\n      } else if (type.indexOf('TCP_MISS') === 0) {\n        return 2\n      }\n    }\n\n    return 0\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/level3.js\n// module id = 35\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'CLOUDFRT',\n  parsers: [{\n    element: 'host',\n    headerName: 'X-Amz-Cf-Id',\n    regex: /(.+)/\n  }, {\n    element: 'type',\n    headerName: 'X-Cache',\n    regex: /(\\S+)\\s.+/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'Hit':\n        return 1\n      case 'Miss':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/cloudfront.js\n// module id = 36\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'AKAMAI',\n  parsers: [{\n    element: 'type+host',\n    headerName: 'X-Cache',\n    regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'TCP_HIT':\n        return 1\n      case 'TCP_MISS':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/akamai.js\n// module id = 37\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'HIGHNEGR',\n  parsers: [{\n    element: 'host+type',\n    headerName: 'X-HW',\n    regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'c':\n      case 'x':\n        return 1\n      default:\n        return 2\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/highwinds.js\n// module id = 38\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  cdnName: 'FASTLY',\n  parsers: [{\n    element: 'host',\n    headerName: 'X-Served-By',\n    regex: /([^,\\s]+)$/\n  }, {\n    element: 'type',\n    headerName: 'X-Cache',\n    regex: /([^,\\s]+)$/\n  }],\n  parseType: function (type) {\n    switch (type) {\n      case 'HIT':\n        return 1\n      case 'MISS':\n        return 2\n      default:\n        return 0\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/fastly.js\n// module id = 39\n// module chunks = 0","// {@see CdnParser}\n\nmodule.exports = {\n  parsers: [{\n    element: 'name',\n    headerName: null,\n    regex: /(.+)/\n  }]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/resourceparsers/cdnparsers/balancer.js\n// module id = 40\n// module chunks = 0","var Emitter = require('../emitter')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\nvar Constants = require('../constants')\nvar Util = require('../util')\n\nvar YBRequest = require('../comm/request')\nvar Communication = require('../comm/communication')\nvar FlowTransform = require('../comm/transform/flow')\nvar ViewTransform = require('../comm/transform/view')\nvar ResourceTransform = require('../comm/transform/resource')\n\nvar Options = require('./options')\nvar YouboraStorage = require('./storage')\nvar RequestBuilder = require('./requestbuilder')\n\nvar YouboraInfinity = require('../infinity/infinity')\n\nvar BackgroundDetector = require('../detectors/backgroundDetector')\nvar DeviceDetector = require('../detectors/deviceDetector')\n\nvar Plugin = Emitter.extend(\n  /** @lends youbora.Plugin.prototype */\n  {\n    /**\n     * This is the main class of video analytics. You may want to have one instance for each video\n     * you want to track. Will need {@link Adapter}s for both content and ads.\n     *\n     * @constructs Plugin\n     * @extends youbora.Emitter\n     * @memberof youbora\n     *\n     * @param {Options} [options] An object complying with {@link Options} constructor.\n     * @param {Adapter} [adapter] If an adapter is provided, setAdapter will be immediately called.\n     */\n    constructor: function (options, adapter) {\n      /** Instance of youbora infinity. */\n      this.infinity = new YouboraInfinity(this)\n\n      /** This flags indicates that /init has been called. */\n      this.isInitiated = false\n\n      /** This flags indicate that the content is preloading. */\n      this.isPreloading = false\n\n      /** Chrono for preload times. */\n      this.preloadChrono = new Chrono()\n      this.initChrono = new Chrono()\n\n      /** Reference to {@link youbora.YouboraStorage} */\n      this.storage = new YouboraStorage()\n\n      /** Stored {@link Options} of the session. */\n      this.options = new Options(options)\n      this._adapter = null\n      this._adsAdapter = null\n      this._ping = new Timer(this._sendPing.bind(this), 5000)\n      this._beat = new Timer(this._sendBeat.bind(this), 30000)\n\n      this.requestBuilder = new RequestBuilder(this)\n\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.lastEventTime = null\n\n      if (adapter) this.setAdapter(adapter)\n\n      // FastData\n      this.viewTransform = new ViewTransform(this)\n      this.viewTransform.on(ViewTransform.Event.DONE, this._receiveData.bind(this))\n\n      if (this.getIsDataExpired()) {\n        this.viewTransform.init() // request a new data\n      } else {\n        this.viewTransform.setData(this.getStoredData()) // use stored data\n      }\n\n      this._initInfinity()\n\n      this.deviceDetector = new DeviceDetector()\n      this.backgroundDetector = new BackgroundDetector(this)\n      if (this.options['background.enabled']) this.backgroundDetector.startDetection()\n    },\n\n    /**\n     * This callback is called when a correct data response is received.\n     *\n     * @param {any} e Response from fastdata\n     */\n    _receiveData: function (e) {\n      this._ping.interval = e.target.response.pingTime * 1000\n      this._beat.interval = e.target.response.beatTime * 1000\n      this.storage.setSession('data', e.target.response.msg)\n\n      if (this.getIsSessionExpired()) {\n        this.viewTransform.setSessionId(this.viewTransform.response.code)\n        this.storage.setLocal('session', this.viewTransform.response.code)\n      } else {\n        this.viewTransform.setSessionId(this.getSessionId())\n      }\n    },\n\n    /**\n     * Reset all variables and stop all timers\n     * @private\n     */\n    _reset: function () {\n      this._stopPings()\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.isInitiated = false\n      this.isStarted = false\n      this.isPreloading = false\n      this.preloadChrono.reset()\n      this.initChrono.reset()\n    },\n\n    /**\n     * Creates and enqueues related request using {@link Communication#sendRequest}.\n     * It will fire will-send-events.\n     *\n     * @param {string} willSendEvent Name of the will-send event. Use {@link Plugin.Event} enum.\n     * @param {string} service Name of the service. Use {@link Constants.Service} enum.\n     * @param {Object} params Params of the request\n     * @private\n     */\n    _send: function (willSendEvent, service, params) {\n      var now = new Date().getTime()\n      if (this.lastEventTime && (now > (this.lastEventTime + 600000))) { // 600000ms = 10 minutes\n        // if last event was sent more than 10 minutes ago, it will use new view code\n        this.viewTransform.nextView()\n      }\n      this.lastEventTime = now\n      if (service === Constants.Service.STOP) {\n        this.lastEventTime = null\n      }\n\n      params = this.requestBuilder.buildParams(params, service)\n\n      if (this.getIsLive()) {\n        params.mediaDuration = undefined\n        params.playhead = undefined\n      }\n\n      var data = {\n        params: params,\n        plugin: this,\n        adapter: this.getAdapter(),\n        adsAdapter: this.getAdsAdapter()\n      }\n\n      this.emit(willSendEvent, data)\n\n      if (this._comm && params !== null && this.options.enabled) {\n        this.lastServeiceSent = service\n        this._comm.sendRequest(new YBRequest(null, service, params))\n      }\n    },\n\n    /**\n     * Initializes comm and its transforms.\n     * @private\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(new FlowTransform())\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      // this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Returns the current {@link youbora.Communication} instance.\n     *\n     * @returns {youbora.Communication} communication instance\n     */\n    getComm: function () {\n      return this._comm\n    },\n\n    /**\n     * Modifies current options. See {@link Options.setOptions}.\n     *\n     * @param {any} options\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n      if (typeof options['background.enabled'] === \"boolean\") {\n        if (options['background.enabled']) {\n          this.backgroundDetector.startDetection()\n        } else {\n          this.backgroundDetector.stopDetection()\n        }\n      }\n    },\n\n    /**\n     * Disable request sending.\n     */\n    disable: function () {\n      this.setOptions({ 'enabled': false })\n    },\n\n    /**\n     * Re-enable request sending.\n     */\n    enable: function () {\n      this.setOptions({ 'enabled': true })\n    }\n  },\n\n  /** @lends youbora.Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of events that could be fired\n     * @enum\n     * @event\n     */\n    Event: Constants.WillSendEvent\n  }\n)\n\n// Apply Mixins\n// Plugin is actually a big class, I decided to separate the logic into\n// different mixin files to ease the maintainability of each file.\n// Filename convention will be plugin+xxxxx.js where xxxxx is the added functionality.\nUtil.assign(Plugin.prototype, require('./plugin+content'))\nUtil.assign(Plugin.prototype, require('./plugin+getters'))\nUtil.assign(Plugin.prototype, require('./plugin+content+getters'))\nUtil.assign(Plugin.prototype, require('./plugin+ads'))\nUtil.assign(Plugin.prototype, require('./plugin+ads+getters'))\nUtil.assign(Plugin.prototype, require('./plugin+pings'))\nUtil.assign(Plugin.prototype, require('./plugin+fire'))\nUtil.assign(Plugin.prototype, require('./plugin+infinity'))\nUtil.assign(Plugin.prototype, require('./plugin+infinity+getters'))\n\nmodule.exports = Plugin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin.js\n// module id = 41\n// module chunks = 0","var Transform = require('./transform')\nvar Constants = require('../../constants')\n\n/**\n * This transform ensures that no requests will be sent before an /init or /start request.\n * As these are the two possible first requests that the API expects for a view.\n *\n * @constructs\n * @extends youbora.Transform\n * @memberof youbora\n * @name FlowTransform\n *\n * @param {Plugin} plugin Instance of {@link Plugin}\n */\nvar FlowTransform = Transform.extend(\n  /** @lends youbora.FlowTransform.prototype */\n  {\n    _services: [Constants.Service.INIT, Constants.Service.START],\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      if (this._isBusy && request != null) {\n        if (this._services.indexOf(request.service) !== -1) {\n          this.done()\n        } else if (request.service === Constants.Service.ERROR) {\n          return false\n        }\n      }\n\n      return Transform.prototype.isBlocking.apply(this, arguments)\n    }\n  }\n)\n\nmodule.exports = FlowTransform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/comm/transform/flow.js\n// module id = 42\n// module chunks = 0","var Log = require('../log')\nvar Constants = require('../constants')\n\nvar Adapter = require('../adapter/adapter')\n\n// This file is designed to add extra functionalities to Plugin class\n\n/** @lends youbora.Plugin.prototype */\nvar PluginContentMixin = {\n  /**\n   * Sets an adapter for video content.\n   *\n   * @param {Adapter} adapter\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  setAdapter: function (adapter) {\n    if (adapter.plugin) {\n      Log.warn('Adapters can only be added to a single plugin')\n    } else {\n      this.removeAdapter()\n\n      this._adapter = adapter\n      adapter.plugin = this\n\n      // Register listeners\n      adapter.on(Adapter.Event.INIT, this._initListener.bind(this))\n      adapter.on(Adapter.Event.START, this._startListener.bind(this))\n      adapter.on(Adapter.Event.JOIN, this._joinListener.bind(this))\n      adapter.on(Adapter.Event.PAUSE, this._pauseListener.bind(this))\n      adapter.on(Adapter.Event.RESUME, this._resumeListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_BEGIN, this._seekBeginListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_END, this._seekEndListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_END, this._bufferEndListener.bind(this))\n      adapter.on(Adapter.Event.ERROR, this._errorListener.bind(this))\n      adapter.on(Adapter.Event.STOP, this._stopListener.bind(this))\n      adapter.on(Adapter.Event.CLICK, this._clickListener.bind(this))\n      adapter.on(Adapter.Event.BLOCKED, this._blockedListener.bind(this))\n    }\n  },\n\n  /**\n   * Returns current adapter or null.\n   *\n   * @returns {Adapter}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdapter: function () {\n    return this._adapter\n  },\n\n  /**\n   * Removes the current adapter. Fires stop if needed. Calls adapter.dispose().\n   *\n   * @memberof youbora.Plugin.prototype\n   * */\n  removeAdapter: function () {\n    if (this._adapter) {\n      this._adapter.dispose()\n\n      this._adapter.plugin = null\n\n      this._adapter.off(Adapter.Event.INIT, this._initListener)\n      this._adapter.off(Adapter.Event.START, this._startListener)\n      this._adapter.off(Adapter.Event.JOIN, this._joinListener)\n      this._adapter.off(Adapter.Event.PAUSE, this._pauseListener)\n      this._adapter.off(Adapter.Event.RESUME, this._resumeListener)\n      this._adapter.off(Adapter.Event.SEEK_BEGIN, this._seekBeginListener)\n      this._adapter.off(Adapter.Event.SEEK_END, this._seekEndListener)\n      this._adapter.off(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener)\n      this._adapter.off(Adapter.Event.BUFFER_END, this._bufferEndListener)\n      this._adapter.off(Adapter.Event.ERROR, this._errorListener)\n      this._adapter.off(Adapter.Event.STOP, this._stopListener)\n\n      this._adapter = null\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n  _initListener: function (e) {\n    if (!this._adapter || !this._adapter.flags.isInited) {\n      if (!this.isInitiated || this.lastServeiceSent === Constants.Service.ERROR) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n      }\n      var params = e.data.params || {}\n      this.isInitiated = true\n      if (this._adapter) {\n        this._adapter.flags.isInited = true\n        this._adapter.chronos.join.start()\n      } else {\n        this.initChrono.start()\n      }\n      this._send(Constants.WillSendEvent.WILL_SEND_INIT, Constants.Service.INIT, params)\n      Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n    }\n  },\n\n  _startListener: function (e) {\n    if (!this.isInitiated) {\n      this.viewTransform.nextView()\n      this._initComm()\n      this._startPings()\n    }\n    var params = e.data.params || {}\n    var allParamsReady = (!!this.options['content.resource'] || !!this._adapter.getResource()) &&\n      (typeof this.options[\"content.isLive\"] === 'boolean' || typeof this._adapter.getIsLive() === 'boolean') &&\n      (typeof this.options['content.duration'] === 'number' || typeof this._adapter.getDuration() === 'number' || this._adapter.getIsLive() || this.options[\"content.isLive\"]) &&\n      (!!this.options['content.title'] || !!this._adapter.getTitle())\n    if (allParamsReady && !this._adapter.flags.isInited && !this.isInitiated) { //start\n      this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.START, params)\n      Log.notice(Constants.Service.START + ' ' + (params.title || params.mediaResource))\n      this.isStarted = true\n      //chrono if had no adapter when inited\n      if (this.isInitiated && this.initChrono.startTime != 0) {\n        this._adapter.chronos.join.startTime = this.initChrono.startTime\n      }\n    } else if (!this._adapter.flags.isInited && !this.isInitiated) {//init\n      this.isInitiated = true\n      this._adapter.flags.isInited = true\n      this._adapter.chronos.join.start()\n      this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.INIT, params)\n      Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n    }\n  },\n\n  _joinListener: function (e) {\n    var params = e.data.params || {}\n    if (!this._adsAdapter || !this._adsAdapter.flags.isStarted) {\n      if (this.isInitiated && !this.isStarted) { //start if just inited\n        //chrono if had no adapter when inited\n        if (this.initChrono.startTime != 0) {\n          this._adapter.chronos.join.startTime = this.initChrono.startTime\n        }\n        this._send(Constants.WillSendEvent.WILL_SEND_START, Constants.Service.START, params)\n        Log.notice(Constants.Service.START + ' ' + (params.title || params.mediaResource))\n        this.isStarted = true\n      }\n      params = e.data.params || {}\n      this._send(Constants.WillSendEvent.WILL_SEND_JOIN, Constants.Service.JOIN, params)\n      Log.notice(Constants.Service.JOIN + ' ' + params.joinDuration + 'ms')\n    } else { // If it is currently showing ads, join is invalidated\n      if (this._adapter.monitor) this._adapter.monitor.stop()\n      this._adapter.flags.isJoined = false\n      this._adapter.chronos.join.stopTime = 0\n    }\n  },\n\n  _pauseListener: function (e) {\n    if (this._adapter) {\n      if (this._adapter.flags.isBuffering ||\n        this._adapter.flags.isSeeking ||\n        (this._adsAdapter && this._adsAdapter.flags.isStarted)) {\n        this._adapter.chronos.pause.reset()\n      }\n    }\n\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_PAUSE, Constants.Service.PAUSE, params)\n    Log.notice(Constants.Service.PAUSE + ' at ' + params.playhead + 's')\n  },\n\n  _resumeListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_RESUME, Constants.Service.RESUME, params)\n    Log.notice(Constants.Service.RESUME + ' ' + params.pauseDuration + 'ms')\n  },\n\n  _seekBeginListener: function (e) {\n    if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    Log.notice('Seek Begin')\n  },\n\n  _seekEndListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_SEEK, Constants.Service.SEEK, params)\n    Log.notice(Constants.Service.SEEK +\n      ' to ' + params.playhead +\n      ' in ' + params.seekDuration + 'ms'\n    )\n  },\n\n  _bufferBeginListener: function (e) {\n    if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    Log.notice('Buffer Begin')\n  },\n\n  _bufferEndListener: function (e) {\n    var params = e.data.params || {}\n    this._send(Constants.WillSendEvent.WILL_SEND_BUFFER, Constants.Service.BUFFER, params)\n    Log.notice(Constants.Service.BUFFER +\n      ' to ' + params.playhead +\n      ' in ' + params.bufferDuration + 'ms'\n    )\n  },\n\n  _errorListener: function (e) {\n    this.fireError(e.data.params || {})\n  },\n\n  _stopListener: function (e) {\n    this.fireStop(e.data.params || {})\n  },\n\n  _clickListener: function (e) {\n    Log.warn(\n      'You have sent a CLICK event from the content adapter. ' +\n      'Such events must be fired from ads adapters, so it will be ignored.'\n    )\n  },\n\n  _blockedListener: function (e) {\n    Log.warn(\n      'You have sent a BLOCKED event from the content adapter. ' +\n      'Such events must be fired from ads adapters, so it will be ignored.'\n    )\n  }\n}\n\nmodule.exports = PluginContentMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+content.js\n// module id = 43\n// module chunks = 0","var YouboraObject = require('../object')\nvar Chrono = require('../chrono')\n\nvar PlaybackChronos = YouboraObject.extend(\n  /** @lends youbora.PlaybackChronos.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackChronos\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = PlaybackChronos\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/adapter/playbackchronos.js\n// module id = 44\n// module chunks = 0","var YouboraObject = require('../object')\n\nvar PlaybackFlags = YouboraObject.extend(\n  /** @lends youbora.PlaybackFlags.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackFlags\n     * @extends youbora.YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when Init has been sent. */\n      this.isInited = false\n\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n\n      /** Flag when Player is ended */\n      this.isEnded = false\n\n      /** Flag when Player view ends and stop is already sent */\n      this.isStopped = false\n    }\n  }\n)\n\nmodule.exports = PlaybackFlags\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/adapter/playbackflags.js\n// module id = 45\n// module chunks = 0","var Util = require('../util')\n\nvar version = require('../version')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginGetterMixin = {\n  /**\n   * Returns service host\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getHost: function() {\n    var host = this.options['host']\n    if (this.viewTransform && this.viewTransform.response && this.viewTransform.response.host) {\n      host = this.viewTransform.response.host\n    }\n    return Util.addProtocol(Util.stripProtocol(host), this.options['httpSecure'])\n  },\n\n\n  getUserType: function() {\n    return this.options['userType']\n  },\n\n  /**\n   * Returns parse HLS Flag\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isParseHls: function() {\n    return this.options['parse.hls']\n  },\n\n  /**\n   * Returns parse CdnNode Flag\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isParseCdnNode: function() {\n    return this.options['parse.cdnNode']\n  },\n\n  /**\n   * Returns parse location header\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  isLocHeader: function() {\n    return this.options['parse.locationHeader']\n  },\n\n  /**\n   * Returns Cdn list\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getParseCdnNodeList: function() {\n    return this.options['parse.cdnNode.list']\n  },\n\n  /**\n   * Returns Cdn header name\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getParseCdnNodeNameHeader: function() {\n    return this.options['parse.cdnNameHeader']\n  },\n\n  /**\n   * Returns obfuscateIp option\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getObfuscateIp: function() {\n    return this.options['obfuscateIp']\n  },\n\n  /**\n   * Returns content's Extraparam1\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam1: function() {\n    return this.options['extraparam.1']\n  },\n\n  /**\n   * Returns content's Extraparam2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam2: function() {\n    return this.options['extraparam.2']\n  },\n\n  /**\n   * Returns content's Extraparam3\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam3: function() {\n    return this.options['extraparam.3']\n  },\n\n  /**\n   * Returns content's Extraparam4\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam4: function() {\n    return this.options['extraparam.4']\n  },\n  /**\n   * Returns content's Extraparam5\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam5: function() {\n    return this.options['extraparam.5']\n  },\n\n  /**\n   * Returns content's Extraparam6\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam6: function() {\n    return this.options['extraparam.6']\n  },\n\n  /**\n   * Returns content's Extraparam7\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam7: function() {\n    return this.options['extraparam.7']\n  },\n\n  /**\n   * Returns content's Extraparam8\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam8: function() {\n    return this.options['extraparam.8']\n  },\n\n  /**\n   * Returns content's Extraparam9\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam9: function() {\n    return this.options['extraparam.9']\n  },\n\n  /**\n   * Returns content's Extraparam10\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam10: function() {\n    return this.options['extraparam.10']\n  },\n\n  /**\n   * Returns content's Extraparam11\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam11: function() {\n    return this.options['extraparam.11']\n  },\n\n  /**\n   * Returns content's Extraparam12\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam12: function() {\n    return this.options['extraparam.12']\n  },\n\n  /**\n   * Returns content's Extraparam13\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam13: function() {\n    return this.options['extraparam.13']\n  },\n\n  /**\n   * Returns content's Extraparam14\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam14: function() {\n    return this.options['extraparam.14']\n  },\n  /**\n   * Returns content's Extraparam15\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam15: function() {\n    return this.options['extraparam.15']\n  },\n\n  /**\n   * Returns content's Extraparam16\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam16: function() {\n    return this.options['extraparam.16']\n  },\n\n  /**\n   * Returns content's Extraparam17\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam17: function() {\n    return this.options['extraparam.17']\n  },\n\n  /**\n   * Returns content's Extraparam18\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam18: function() {\n    return this.options['extraparam.18']\n  },\n\n  /**\n   * Returns content's Extraparam19\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam19: function() {\n    return this.options['extraparam.19']\n  },\n\n  /**\n   * Returns content's Extraparam20\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getExtraparam20: function() {\n    return this.options['extraparam.20']\n  },\n\n  /**\n   * Returns ad's Extraparam1\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam1: function() {\n    return this.options['ad.extraparam.1']\n  },\n\n  /**\n   * Returns ad's Extraparam2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam2: function() {\n    return this.options['ad.extraparam.2']\n  },\n\n  /**\n   * Returns ad's Extraparam3\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam3: function() {\n    return this.options['ad.extraparam.3']\n  },\n\n  /**\n   * Returns ad's Extraparam4\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam4: function() {\n    return this.options['ad.extraparam.4']\n  },\n  /**\n   * Returns ad's Extraparam5\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam5: function() {\n    return this.options['ad.extraparam.5']\n  },\n\n  /**\n   * Returns ad's Extraparam6\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam6: function() {\n    return this.options['ad.extraparam.6']\n  },\n\n  /**\n   * Returns ad's Extraparam7\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam7: function() {\n    return this.options['ad.extraparam.7']\n  },\n\n  /**\n   * Returns ad's Extraparam8\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam8: function() {\n    return this.options['ad.extraparam.8']\n  },\n\n  /**\n   * Returns ad's Extraparam9\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam9: function() {\n    return this.options['ad.extraparam.9']\n  },\n\n  /**\n   * Returns ad's Extraparam10\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdExtraparam10: function() {\n    return this.options['ad.extraparam.10']\n  },\n\n  /**\n   * Returns PluginInfo\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPluginInfo: function() {\n    var ret = {\n      lib: version,\n      adapter: this.getAdapterVersion(),\n      adAdapter: this.getAdAdapterVersion()\n    }\n    return ret\n  },\n\n  /**\n   * Returns Ip\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIp: function() {\n    return this.options['network.ip']\n  },\n\n  /**\n   * Returns Isp\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIsp: function() {\n    return this.options['network.isp']\n  },\n\n  /**\n   * Returns ConnectionType\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getConnectionType: function() {\n    return this.options['network.connectionType']\n  },\n\n  /**\n   * Returns DeviceCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDeviceCode: function() {\n    return this.options['device.code']\n  },\n\n  /**\n   * Returns AccountCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAccountCode: function() {\n    return this.options['accountCode']\n  },\n\n  /**\n   * Returns Username\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getUsername: function() {\n    return this.options['username']\n  },\n\n  /**\n   * Get URL referer.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getReferer: function() {\n    if (this.options['referer']) return this.options['referer']\n    var ret = ''\n    if (typeof window !== 'undefined' && window.location) {\n      ret = window.location.href\n    }\n    return ret\n  },\n\n  /**\n   * Returns the nodehost\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeHost: function() {\n    return this.options['content.cdnNode'] || this.resourceTransform.getNodeHost()\n  },\n\n  /**\n   * Returns the node type id\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeType: function() {\n    return this.options['content.cdnType'] || this.resourceTransform.getNodeType()\n  },\n\n  /**\n   * Returns the node type string\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getNodeTypeString: function() {\n    return this.resourceTransform.getNodeTypeString()\n  },\n\n  /**\n   * Returns requestNumber value, to prevent /data calls being cached\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getRequestNumber: function() {\n    return Math.random()\n  },\n\n  getExperiments: function() {\n    if (this.options['experiments'].length > 0) return this.options['experiments']\n    return null\n  }\n}\n\nmodule.exports = PluginGetterMixin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+getters.js\n// module id = 46\n// module chunks = 0","var Log = require('../log')\nvar Util = require('../util')\n\nvar version = require('../version')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginContentGetterMixin = {\n  /**\n   * Returns content's playhead\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayhead: function () {\n    var ret = 0\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayhead()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPlayhead', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns content's PlayRate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayrate: function () {\n    var ret = 0\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayrate', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's FramesPerSecond\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getFramesPerSecond: function () {\n    var ret = this.options['content.fps']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getFramesPerSecond()\n      } catch (err) {\n        Log.warn('An error occured while calling getFramesPerSecond', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's DroppedFrames\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDroppedFrames: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getDroppedFrames()\n      } catch (err) {\n        Log.warn('An error occured while calling getDroppedFrames', err)\n      }\n    }\n    if (!ret) {\n      ret = this.getWebkitDroppedFrames()\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns dropped frames as per webkitDroppedFrameCount\n   *\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitDroppedFrames: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount) {\n      return this._adapter.tag.webkitDroppedFrameCount\n    }\n    return null\n  },\n\n  /**\n   * Returns content's Duration\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getDuration: function () {\n    var ret = this.options['content.duration']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getDuration()\n      } catch (err) {\n        Log.warn('An error occured while calling getDuration', err)\n      }\n    }\n    if (ret === 0) ret = null\n    return Util.parseNumber(Math.round(ret), null)\n  },\n\n  /**\n   * Returns content's Bitrate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getBitrate: function () {\n    var ret = this.options['content.bitrate']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getBitrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getBitrate', err)\n      }\n\n      if (!ret || ret === -1) {\n        ret = this.getWebkitBitrate()\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns bitrate as per webkitVideoDecodedByteCount\n   *\n   * @param {Object} tag Video tag DOM reference.\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitBitrate: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n      var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      if (this._lastWebkitBitrate) {\n        var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate\n        bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n      }\n      this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      return bitrate !== 0 ? bitrate : -1\n    }\n  },\n\n  /**\n   * Returns content's Throughput\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getThroughput: function () {\n    var ret = this.options['content.throughput']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getThroughput()\n      } catch (err) {\n        Log.warn('An error occured while calling getThroughput', err)\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns content's Rendition\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getRendition: function () {\n    var ret = this.options['content.rendition']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getRendition()\n      } catch (err) {\n        Log.warn('An error occured while calling getRendition', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Title\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTitle: function () {\n    var ret = this.options['content.title']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getTitle()\n      } catch (err) {\n        Log.warn('An error occured while calling getTitle', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Title2\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTitle2: function () {\n    var ret = this.options['content.title2']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getTitle2()\n      } catch (err) {\n        Log.warn('An error occured while calling getTitle2', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's IsLive\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getIsLive: function () {\n    var ret = this.options['content.isLive']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getIsLive()\n      } catch (err) {\n        Log.warn('An error occured while calling getIsLive', err)\n      }\n    }\n    return ret || false\n  },\n\n  /**\n   * Returns content's Resource after being parsed by the resourceTransform\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getResource: function () {\n    var ret = null\n    if (!this.resourceTransform.isBlocking() && this.resourceTransform.isDone) {\n      ret = this.resourceTransform.getResource()\n    }\n\n    return ret || this.getOriginalResource()\n  },\n\n  /**\n   * Returns content's original Resource\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getOriginalResource: function () {\n    var ret = null\n    ret = this.options['content.resource']\n    if (ret === null && this._adapter) {\n      try {\n        ret = this._adapter.getResource()\n      } catch (err) {\n        Log.warn('An error occured while calling getResource', err)\n        ret = null\n      }\n    }\n    return ret || null\n  },\n\n  /**\n   * Returns content's TransactionCode\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getTransactionCode: function () {\n    return this.options['content.transactionCode']\n  },\n\n  /**\n   * Returns content's Metadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getMetadata: function () {\n    return this.options['content.metadata']\n  },\n\n  /**\n   * Returns content's PlayerVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayerVersion: function () {\n    var ret = ''\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayerVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's PlayerName\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPlayerName: function () {\n    var ret = ''\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPlayerName()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerName', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns content's Cdn\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getCdn: function () {\n    var ret = null\n    if (!this.resourceTransform.isBlocking()) {\n      ret = this.resourceTransform.getCdnName()\n    }\n    return ret || this.options['content.cdn']\n  },\n\n  /**\n   * Returns content's PluginVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPluginVersion: function () {\n    var ret = this.getAdapterVersion()\n    if (!ret) ret = version + '-adapterless'\n\n    return ret\n  },\n\n  /**\n   * Returns ads adapter getVersion or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdapterVersion: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPluginVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns cdn traffic received in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getCdnTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getCdnTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getCdnTraffic', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns p2p traffic received in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getP2PTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getP2PTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getP2PTraffic', err)\n      }\n    }\n    return ret\n  },\n\n\n  /**\n   * Returns p2p traffic sent in bytes or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getUploadTraffic: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getUploadTraffic()\n      } catch (err) {\n        Log.warn('An error occured while calling getUploadTraffic', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n * Returns if p2p plugin is enabled or null\n *\n * @memberof youbora.Plugin.prototype\n */\n  getIsP2PEnabled: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getIsP2PEnabled()\n      } catch (err) {\n        Log.warn('An error occured while calling getIsP2PEnabled', err)\n      }\n    }\n    return ret\n  },\n\n\n  getStreamingProtocol: function () {\n    var ret = this.options['content.streamingProtocol']\n    if (typeof ret != 'string') return null\n    ret = ret.toUpperCase()\n    if (ret != 'HDS' && ret != 'HLS' && ret != 'MSS' && ret != 'DASH' && ret != 'RTMP' && ret != 'RTP' && ret != 'RTSP') {\n      Log.warn('Streaming protocol ' + ret + ' is not a valid value')\n      return null\n    }\n    return ret\n  },\n\n  /**Returns household id*/\n  getHouseholdId: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getHouseholdId()\n      } catch (err) {\n        Log.warn('An error occurred while calling getHouseholdId', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns latency of a live video, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getLatency: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getLatency()\n      } catch (err) {\n        Log.warn('An error occurred while calling getLatency', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns the amount of packets lost, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getPacketLoss: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPacketLoss()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPacketLoss', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n* Returns the amount of packets sent, or null\n*\n* @memberof youbora.Plugin.prototype\n*/\n  getPacketSent: function () {\n    var ret = null\n    if (this._adapter) {\n      try {\n        ret = this._adapter.getPacketSent()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPacketSent', err)\n      }\n    }\n    return ret\n  },\n  // ----------------------------------------- CHRONOS ------------------------------------------\n\n  /**\n   * Returns preload chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPreloadDuration: function () {\n    return this.preloadChrono.getDeltaTime(false)\n  },\n\n  /**\n   * Returns JoinDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getJoinDuration: function () {\n    return this._adapter ? this._adapter.chronos.join.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns BufferDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getBufferDuration: function () {\n    return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns SeekDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getSeekDuration: function () {\n    return this._adapter ? this._adapter.chronos.seek.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns pauseDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getPauseDuration: function () {\n    return this._adapter ? this._adapter.chronos.pause.getDeltaTime(false) : 0\n  }\n}\n\nmodule.exports = PluginContentGetterMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+content+getters.js\n// module id = 47\n// module chunks = 0","var Log = require('../log')\nvar Constants = require('../constants')\n\nvar Adapter = require('../adapter/adapter')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginAdsMixin = {\n  /**\n   * Returns current adapter or null.\n   *\n   * @returns {Adapter}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdsAdapter: function () {\n    return this._adsAdapter\n  },\n\n  /**\n   * Sets an adapter for ads.\n   *\n   * @param {Adapter} adsAdapter\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  setAdsAdapter: function (adsAdapter) {\n    if (adsAdapter.plugin) {\n      Log.warn('Adapters can only be added to a single plugin')\n    } else {\n      this.removeAdsAdapter()\n\n      adsAdapter.plugin = this\n      this._adsAdapter = adsAdapter\n      this._adsAdapter.on(Adapter.Event.INIT, this._adInitListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.START, this._adStartListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.JOIN, this._adJoinListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.PAUSE, this._adPauseListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.RESUME, this._adResumeListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BUFFER_END, this._adBufferEndListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.STOP, this._adStopListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.ERROR, this._adErrorListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.CLICK, this._adClickListener.bind(this))\n      this._adsAdapter.on(Adapter.Event.BLOCKED, this._adBlockedListener.bind(this))\n    }\n  },\n\n  /**\n   * Removes the current adapter. Fires stop if needed. Calls adapter.dispose()\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  removeAdsAdapter: function () {\n    if (this._adsAdapter) {\n      this._adsAdapter.dispose()\n\n      this._adsAdapter.plugin = null\n      this._adsAdapter.off(Adapter.Event.INIT, this._adInitListener)\n      this._adsAdapter.off(Adapter.Event.START, this._adStartListener)\n      this._adsAdapter.off(Adapter.Event.JOIN, this._adJoinListener)\n      this._adsAdapter.off(Adapter.Event.PAUSE, this._adPauseListener)\n      this._adsAdapter.off(Adapter.Event.RESUME, this._adResumeListener)\n      this._adsAdapter.off(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener)\n      this._adsAdapter.off(Adapter.Event.BUFFER_END, this._adBufferEndListener)\n      this._adsAdapter.off(Adapter.Event.STOP, this._adStopListener)\n      this._adsAdapter.off(Adapter.Event.ERROR, this._adErrorListener)\n      this._adsAdapter.off(Adapter.Event.CLICK, this._adClickListener)\n      this._adsAdapter.off(Adapter.Event.BLOCKED, this._adBlockedListener)\n\n      this._adsAdapter = null\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n  _adInitListener: function (e) {\n    if (this._adapter) {\n      this._adapter.fireBufferEnd()\n      this._adapter.fireSeekEnd()\n    }\n    this.adInitSent = true\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.getNewAdNumber()\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_INIT, params)\n    Log.notice(\n      Constants.Service.AD_INIT + ' ' +\n      params.adPosition + params.adNumber +\n      ' at ' + params.playhead + 's'\n    )\n  },\n\n  _adStartListener: function (e) {\n    if (this._adapter) {\n      this._adapter.fireBufferEnd()\n      this._adapter.fireSeekEnd()\n      if (this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n    }\n\n    var params = e.data.params || {}\n    if (!this._adsAdapter.flags.isInited) {\n      params.adNumber = this.requestBuilder.getNewAdNumber()\n    } else {\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n    }\n    if (!this.options['ad.ignore']) {\n      var allParamsReady = ((!!this._adsAdapter.getResource() || !!this._adsAdapter.getTitle())\n        && typeof this._adsAdapter.getDuration() === 'number')\n      if (allParamsReady) {\n        this.adStartSent = true\n        this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_START, params)\n        Log.notice(\n          Constants.Service.AD_START + ' ' +\n          params.adPosition + params.adNumber +\n          ' at ' + params.playhead + 's'\n        )\n      }\n      else {\n        if (!this._adsAdapter.flags.isInited) {\n          this.adInitSent = true\n          this._send(Constants.WillSendEvent.WILL_SEND_AD_INIT, Constants.Service.AD_INIT, params)\n          Log.notice(\n            Constants.Service.AD_INIT + ' ' +\n            params.adPosition + params.adNumber +\n            ' at ' + params.playhead + 's'\n          )\n        }\n      }\n    }\n  },\n\n  _adJoinListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore'] && this.adInitSent && !this.adStartSent) {\n      this._send(Constants.WillSendEvent.WILL_SEND_AD_START, Constants.Service.AD_START, params)\n      Log.notice(\n        Constants.Service.AD_START + ' ' +\n        params.adPosition + params.adNumber +\n        ' at ' + params.playhead + 's'\n      )\n    }\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_JOIN, Constants.Service.AD_JOIN, params)\n    Log.notice(Constants.Service.AD_JOIN + ' ' + params.adJoinDuration + 'ms')\n    this.adInitSent = false\n    this.adStartSent = false\n  },\n\n  _adPauseListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_PAUSE, Constants.Service.AD_PAUSE, params)\n    Log.notice(Constants.Service.AD_PAUSE + ' at ' + params.adPlayhead + 's')\n  },\n\n  _adResumeListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_RESUME, Constants.Service.AD_RESUME, params)\n    Log.notice(Constants.Service.AD_RESUME + ' ' + params.adPauseDuration + 'ms')\n  },\n\n  _adBufferBeginListener: function (e) {\n    Log.notice('Ad Buffer Begin')\n    if (this._adsAdapter && this._adsAdapter.flags.isPaused) {\n      this._adsAdapter.chronos.pause.reset()\n    }\n  },\n\n  _adBufferEndListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_BUFFER, Constants.Service.AD_BUFFER, params)\n    Log.notice(Constants.Service.AD_BUFFER + ' ' + params.adBufferDuration + 'ms')\n  },\n\n  _adStopListener: function (e) {\n    // remove time from joinDuration\n    if (this._adapter && !this._adapter.flags.isJoined) {\n      this._adapter.chronos.join.startTime = Math.min(\n        this._adapter.chronos.join.startTime + this._adsAdapter.chronos.total.getDeltaTime(),\n        new Date().getTime()\n      )\n    }\n\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_STOP, Constants.Service.AD_STOP, params)\n    Log.notice(Constants.Service.AD_STOP + ' ' + params.adTotalDuration + 'ms')\n  },\n\n  _adErrorListener: function (e) {\n    var params = e.data.params || {}\n    if (this._adapter && !this._adapter.flags.isStarted) {\n      params.adNumber = this.requestBuilder.lastSent.adNumber\n    } else {\n      params.adNumber = this.requestBuilder.getNewAdNumber()\n    }\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_ERROR, Constants.Service.AD_ERROR, params)\n    Log.notice(Constants.Service.AD_ERROR)\n  },\n\n  _adClickListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.lastSent.adNumber\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_CLICK, Constants.Service.AD_CLICK, params)\n    Log.notice(Constants.Service.AD_CLICK)\n  },\n\n  _adBlockedListener: function (e) {\n    var params = e.data.params || {}\n    params.adNumber = this.requestBuilder.getNewAdNumber()\n    if (!this.options['ad.ignore']) this._send(Constants.WillSendEvent.WILL_SEND_AD_BLOCKED, Constants.Service.AD_BLOCKED, params)\n    Log.notice(Constants.Service.AD_BLOCKED)\n  }\n}\n\nmodule.exports = PluginAdsMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+ads.js\n// module id = 48\n// module chunks = 0","var Log = require('../log')\nvar Util = require('../util')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginAdsGettersMixin = {\n  /**\n   * Returns ads's PlayerVersion\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPlayerVersion: function () {\n    var ret = ''\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPlayerVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPlayerVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's position\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPosition: function () {\n    var ret = 'pre'\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPosition()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPosition', err)\n      }\n    }\n    if (!ret && this._adapter) {\n      ret = (this._adapter.flags.isJoined) ? 'mid' : 'pre'\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdPlayhead\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPlayhead: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getPlayhead()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdPlayhead', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns ad's AdDuration\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdDuration: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getDuration()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdDuration', err)\n      }\n    }\n    return Util.parseNumber(ret, 0)\n  },\n\n  /**\n   * Returns ad's AdBitrate\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdBitrate: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getBitrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdBitrate', err)\n      }\n\n      if (!ret || ret === -1) {\n        ret = this.getWebkitAdBitrate()\n      }\n    }\n    return Util.parseNumber(ret, -1)\n  },\n\n  /**\n   * Returns bitrate as per webkitVideoDecodedByteCount\n   *\n   * @param {Object} tag Video tag DOM reference.\n   * @returns {number}\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getWebkitAdBitrate: function () {\n    if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n      var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      if (this._lastWebkitAdBitrate) {\n        var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate\n        bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n      }\n      this._lastWebkitAdBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n      return bitrate !== 0 ? bitrate : -1\n    }\n  },\n\n  /**\n   * Returns ad's AdTitle\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdTitle: function () {\n    var ret = null\n    if (this.options['ad.title']) {\n      return this.options['ad.title']\n    }\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getTitle()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdTitle', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdResource\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdResource: function () {\n    var ret = null\n    if (this.options['ad.resource']) {\n      return this.options['ad.resource']\n    }\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getResource()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdResource', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n * Returns ad's campaign\n *\n * @memberof youbora.Plugin.prototype\n */\n  getAdCampaign: function () {\n    if (this.options['ad.campaign']) {\n      return this.options['ad.campaign']\n    }\n    return null\n  },\n\n  /**\n   * Returns ads adapter getVersion or null\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdAdapterVersion: function () {\n    var ret = null\n    if (this._adsAdapter) {\n      try {\n        ret = this._adsAdapter.getVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getAdsAdapterVersion', err)\n      }\n    }\n    return ret\n  },\n\n  /**\n   * Returns ad's AdMetadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdMetadata: function () {\n    return this.options['ad.metadata']\n  },\n\n  // ----------------------------------------- CHRONOS ------------------------------------------\n\n  /**\n   * Returns AdJoinDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdJoinDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns AdBufferDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdBufferDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(false) : -1\n  },\n\n  /**\n   * Returns AdPauseDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdPauseDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(false) : 0\n  },\n\n  /**\n   * Returns total totalAdDuration chrono delta time\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  getAdTotalDuration: function () {\n    return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(false) : -1\n  }\n}\n\nmodule.exports = PluginAdsGettersMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+ads+getters.js\n// module id = 49\n// module chunks = 0","var Log = require('../log')\nvar Constants = require('../constants')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginPingMixin = {\n  /**\n   * Starts sending pings.\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _startPings: function () {\n    if (!this._ping.isRunning) this._ping.start()\n  },\n\n  /**\n   * Stops sending pings.\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _stopPings: function () {\n    this._ping.stop()\n  },\n\n\n  /**\n   * Sends ping request\n   *\n   * @param {number} diffTime Time since the last ping\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _sendPing: function (diffTime) {\n    var params = {\n      diffTime: diffTime,\n      entities: this.requestBuilder.getChangedEntities()\n    }\n    if (this._adapter) {\n      if (this._adapter.flags.isPaused) {\n        params = this.requestBuilder.fetchParams(params, ['pauseDuration'])\n      } else {\n        params = this.requestBuilder.fetchParams(params, ['bitrate', 'throughput', 'fps'])\n      }\n      if (this._adapter.flags.isJoined) {\n        params = this.requestBuilder.fetchParams(params, ['playhead'])\n      }\n      if (this._adapter.flags.isBuffering) {\n        params = this.requestBuilder.fetchParams(params, ['bufferDuration'])\n      }\n      if (this._adapter.flags.isSeeking) {\n        params = this.requestBuilder.fetchParams(params, ['seekDuration'])\n      }\n\n      if (this._adsAdapter && !this.options['ad.ignore']) {\n        if (this._adsAdapter.flags.isStarted) {\n          params = this.requestBuilder.fetchParams(params, ['adPlayhead'])\n          if (this._adsAdapter.flags.isPaused) {\n            params = this.requestBuilder.fetchParams(params, ['adPauseDuration'])\n          } else {\n            params = this.requestBuilder.fetchParams(params, ['adBitrate'])\n          }\n        }\n        if (this._adsAdapter.flags.isBuffering) {\n          params = this.requestBuilder.fetchParams(params, ['adBufferDuration'])\n        }\n      }\n    }\n\n    this._send(Constants.WillSendEvent.WILL_SEND_PING, Constants.Service.PING, params)\n    Log.verbose(Constants.Service.PING)\n  }\n}\n\nmodule.exports = PluginPingMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+pings.js\n// module id = 50\n// module chunks = 0","var Log = require('../log')\nvar Util = require('../util')\nvar Constants = require('../constants')\n\n// This file is designed to add extra functionalities to Plugin class\n\n/** @lends youbora.Plugin.prototype */\nvar PluginFireMixin = {\n  /**\n   * Starts preloading state and chronos.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  firePreloadBegin: function() {\n    if (!this.isPreloading) {\n      this.isPreloading = true\n      this.preloadChrono.start()\n    }\n  },\n\n  /**\n   * Ends preloading state and chronos.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  firePreloadEnd: function() {\n    if (this.isPreloading) {\n      this.isPreloading = false\n      this.preloadChrono.stop()\n    }\n  },\n\n  /**\n   * Sends /init. Should be called once the user has requested the content. Does not need\n   * a working adapter or player to work. it won't sent start if isInitiated is true.\n   *\n   * @param {Object} [params] Object of key:value params.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireInit: function(params) {\n    if (!this.isInitiated) {\n      if (!this.getAdapter() || (this.getAdapter() && !this.getAdapter().flags.isInited && !this.getAdapter().flags.isStarted)) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n        this.initChrono.start()\n        this.isInitiated = true\n\n        params = params || {}\n        this._send(Constants.WillSendEvent.WILL_SEND_INIT, Constants.Service.INIT, params)\n        Log.notice(Constants.Service.INIT + ' ' + (params.title || params.mediaResource))\n      }\n    }\n  },\n\n  /**\n   * Sends /error. Should be used when the error is related to out-of-player errors: like async\n   * resource load or player loading errors.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireError: function(object, msg, metadata, level) {\n    if (!this.isInitiated && (!this.getAdapter() || (!this.getAdapter().flags.isStarted && !this.getAdapter().flags.isInited))) this.viewTransform.nextView()\n    if (!this._comm) this._initComm()\n    var params = Util.buildErrorParams(object, msg, metadata, level)\n\n    this._send(Constants.WillSendEvent.WILL_SEND_ERROR, Constants.Service.ERROR, params)\n    Log.notice(Constants.Service.ERROR +\n      ' ' + params.errorLevel +\n      ' ' + params.errorCode\n    )\n\n    if (params.errorLevel === 'fatal') {\n      this._reset()\n      this.viewTransform.nextView()\n    }\n  },\n\n  /**\n   * Calls fireErrors and then stops pings.\n   *\n   * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n   * @param {String} [msg] Error Message\n   * @param {Object} [metadata] Object defining error metadata\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireFatalError: function(object, msg, metadata) {\n    this.options['ad.afterStop'] = 0\n    this.fireError(object, msg, metadata, 'fatal')\n    if (this._adapter) { this._adapter.fireStop() } else { this.fireStop() }\n  },\n\n  /**\n   * Fires /stop. Should be used to terminate sessions once the player is gone or if\n   * plugin.fireError() is called.\n   *\n   * @param {Object} [params] Object of key:value params.\n   *\n   * @memberof youbora.Plugin.prototype\n   */\n  fireStop: function(params) {\n    if (params && params.end !== undefined && params.end) {\n      params.end = undefined\n      this.options['ad.afterStop'] = 0\n    }\n    if (this._adapter) {\n      this._adapter.flags.isEnded = true\n      if (this._adapter.flags.isPaused) {\n        if (!params) {\n          params = {}\n        }\n        params.pauseDuration = this._adapter.chronos.pause.getDeltaTime()\n      }\n    }\n    if (!this._adsAdapter) {\n      this.options['ad.afterStop'] = 0\n    }\n    if (this.options['ad.afterStop'] === 0) {\n      if (this._adapter) {\n        this._adapter.flags.isStopped = true\n      }\n      params = params || {}\n      this._send(Constants.WillSendEvent.WILL_SEND_STOP, Constants.Service.STOP, params)\n      Log.notice(Constants.Service.STOP + ' at ' + params.playhead + 's')\n      this._reset()\n    }\n  }\n}\n\nmodule.exports = PluginFireMixin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+fire.js\n// module id = 51\n// module chunks = 0","var Constants = require('../constants')\nvar Log = require('../log')\nvar YBRequest = require('../comm/request')\n\nvar YouboraInfinity = require('../infinity/infinity')\n\n// This file is designed to add extra functionalities to Plugin class\n\nvar PluginInfinityMixin = {\n  _initInfinity: function () {\n    this.infinity.on(YouboraInfinity.Event.NAV, this._navListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.SESSION_START, this._sessionStartListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.SESSION_STOP, this._sessionStopListener.bind(this))\n    this.infinity.on(YouboraInfinity.Event.EVENT, this._eventListener.bind(this))\n  },\n\n  _sendInfinity: function (willSendEvent, service, params) {\n    params = this.requestBuilder.buildParams(params, service)\n\n    var data = {\n      params: params,\n      plugin: this,\n      adapter: this.getAdapter(),\n      adsAdapter: this.getAdsAdapter()\n    }\n\n    this.emit(willSendEvent, data)\n\n    if (this.infinity._comm && params !== null && this.options.enabled) {\n      this.lastServeiceSent = service\n      this.infinity._comm.sendRequest(new YBRequest(null, service, params))\n    }\n  },\n\n  // ---------------------------------------- LISTENERS -----------------------------------------\n\n  _navListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_NAV, Constants.Service.NAV, params)\n\n    // start beats\n    if (!this._beat.isRunning) this._beat.start()\n\n    Log.notice(Constants.Service.NAV + ' ' + params.route)\n  },\n\n  _sessionStartListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(\n      Constants.WillSendEvent.WILL_SEND_SESSION_START,\n      Constants.Service.SESSION_START,\n      params\n    )\n\n    // start beats\n    if (!this._beat.isRunning) this._beat.start()\n\n    Log.notice(Constants.Service.SESSION_START + ' ' + params.route)\n  },\n\n  _sessionStopListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(\n      Constants.WillSendEvent.WILL_SEND_SESSION_STOP,\n      Constants.Service.SESSION_STOP,\n      params\n    )\n\n    // stop beats\n    if (!this._beat.isRunning) this._beat.stop()\n\n    Log.notice(Constants.Service.SESSION_STOP + ' ' + params.route)\n  },\n\n  _eventListener: function (e) {\n    var params = e.data.params || {}\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_EVENT, Constants.Service.EVENT, params)\n    Log.notice(Constants.Service.EVENT + ' ' + params.name)\n  },\n\n  /**\n   * Sends beat request\n   *\n   * @param {number} diffTime Time since the last ping\n   *\n   * @private\n   * @memberof youbora.Plugin.prototype\n   */\n  _sendBeat: function (diffTime) {\n    var params = {\n      diffTime: diffTime,\n      sessions: [this.getSessionId()]\n    }\n\n    this._sendInfinity(Constants.WillSendEvent.WILL_SEND_BEAT, Constants.Service.BEAT, params)\n    Log.verbose(Constants.Service.BEAT)\n  }\n}\n\nmodule.exports = PluginInfinityMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+infinity.js\n// module id = 52\n// module chunks = 0","// This file is designed to add extra functionalities to Plugin class\n\nvar PluginInfinityGettersMixin = {\n  getSessionId: function () {\n    return this.storage.getLocal('session')\n  },\n\n  getContext: function () {\n    return this.storage.getSession('context')\n  },\n\n  getStoredData: function () {\n    return this.storage.getSession('data')\n  },\n\n  getPageName: function () {\n    if (document && document.title) {\n      return document.title\n    }\n  },\n\n  getIsSessionExpired: function () {\n    var time = this.storage.getSession('lastactive') + this.options['session.expire']\n    var now = new Date().getTime()\n    return !(this.getSessionId() && (time > now))\n  },\n\n  getIsDataExpired: function () {\n    var time = this.storage.getSession('lastactive') + this.options['session.expire']\n    var now = new Date().getTime()\n    return !(this.getStoredData() && (time > now))\n  }\n}\n\nmodule.exports = PluginInfinityGettersMixin\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/youboralib/src/plugin/plugin+infinity+getters.js\n// module id = 53\n// module chunks = 0","var youbora = require('youboralib')\nimport { Error } from 'playkit-js'\n\nyoubora.adapters.Kaltura = youbora.Adapter.extend({\n\n  constructor: function (player, config) {\n    this.config = config\n    youbora.adapters.Kaltura.__super__.constructor.call(this, player)\n  },\n\n  /**  @returns {String} - current plugin version */\n  getVersion: function () {\n    return \"6.2.0-kaltura\"\n  },\n\n  /**  @returns {Number} - current playhead of the video */\n  getPlayhead: function () {\n    return this.player.currentTime\n  },\n\n  /**  @returns {Number} - current playrate */\n  getPlayrate: function () {\n    return this.player.playbackRate\n  },\n\n  /**  @returns {Number} - video duration */\n  getDuration: function () {\n    return this.player.duration || null\n  },\n\n  /**  @returns {Number} - current bitrate */\n  getBitrate: function () {\n    var activeVideo = this.player.getActiveTracks().video\n    if (activeVideo && activeVideo.bandwidth) {\n      return activeVideo.bandwidth\n    }\n    return null\n  },\n\n  /**  @returns {String} - rendition */\n  getRendition: function () {\n    var activeVideo = this.player.getActiveTracks().video\n    if (activeVideo) {\n      return youbora.Util.buildRenditionString(activeVideo.width, activeVideo.height, activeVideo.bandwidth)\n    }\n    return null\n  },\n\n  /**  @returns {String} - title */\n  getTitle: function () {\n    return this.config.entryName\n  },\n\n  /**  @returns {Boolean} - true if live and false if VOD */\n  getIsLive: function () {\n    return this.config.entryType === \"Live\"\n  },\n\n  /**  @returns {String} - resource URL. */\n  getResource: function () {\n    return this.player.src\n  },\n\n  /**  @returns {String} - player version */\n  getPlayerVersion: function () {\n    return this.config.playerVersion\n  },\n\n  /**  @returns {String} - player's name */\n  getPlayerName: function () {\n    return this.config.playerName\n  },\n\n  /** @returns {String} - Household identifier */\n  getHouseholdId: function () {\n    return this.config.householdId\n  },\n\n  /**  @returns {void} - Register listeners to this.player. */\n  registerListeners: function () {\n    var Event = this.player.Event\n    // References\n    this.references = []\n    this.references[Event.PLAY] = this.playListener.bind(this)\n    this.references[Event.LOAD_START] = this.playListener.bind(this)\n    this.references[Event.PAUSE] = this.pauseListener.bind(this)\n    this.references[Event.PLAYING] = this.playingListener.bind(this)\n    this.references[Event.ERROR] = this.errorListener.bind(this)\n    this.references[Event.SEEKING] = this.seekingListener.bind(this)\n    this.references[Event.SEEKED] = this.seekedListener.bind(this)\n    this.references[Event.PLAYER_STATE_CHANGED] = this.stateChangeListener.bind(this)\n    this.references[Event.ENDED] = this.endedListener.bind(this)\n    this.references[Event.CHANGE_SOURCE_STARTED] = this.forceEndedListener.bind(this)\n    this.references[Event.AD_LOADED] = this.adLoadedListener.bind(this)\n\n    // Register listeners\n    for (var key in this.references) {\n      this.player.addEventListener(key, this.references[key])\n    }\n  },\n\n  /**  @returns {void} - Unregister listeners to this.player. */\n  unregisterListeners: function () {\n\n    // unregister listeners\n    if (this.player && this.references) {\n      for (var key in this.references) {\n        this.player.removeEventListener(key, this.references[key])\n      }\n      this.references = []\n    }\n  },\n\n  bindLogger: function (logger) {\n    youbora.Log.error = logger.error.bind(logger)\n    youbora.Log.notice = logger.info.bind(logger)\n    youbora.Log.warn = logger.warn.bind(logger)\n    youbora.Log.debug = logger.debug.bind(logger)\n    youbora.Log.verbose = function () {\n    }\n  },\n\n  /** @returns {void} - Listener for 'play' event. */\n  playListener: function () {\n    if (!this.flags.isStarted) {\n      this.fireStart()\n      this.plugin.options['content.isLive.noSeek'] = !this.player.isDvr()\n      this.initialPlayhead = this.getPlayhead()\n    }\n  },\n\n  /** @returns {void} - Listener for 'timeupdate' event. */\n  timeupdateListener: function () {\n    this.fireStart()\n    this.fireJoin()\n  },\n\n  /** @returns {void} - Listener for 'pause' event. */\n  pauseListener: function () {\n    this.firePause()\n  },\n\n  /** @returns {void} - Listener for 'playing' event. */\n  playingListener: function () {\n    this.fireResume()\n    this.fireSeekEnd()\n    this.fireBufferEnd()\n    this.fireStart()\n    this.fireJoin()\n  },\n\n  /** @returns {void}\n   * @param {Object} e - object with payload including severity, code and data.\n   * - The name of the plugin.- Listener for 'error' event. */\n  errorListener: function (e) {\n    if (e.payload.severity === Error.Severity.CRITICAL) {\n      this.fireError(e.payload.code, e.payload.data)\n      this.fireStop()\n    }\n  },\n\n  /** @returns {void} - Listener for 'seeking' event. */\n  seekingListener: function () {\n    if (!this.flags.isBuffering &&\n      (this.initialPlayhead !== this.getPlayhead())) {\n      this.fireSeekBegin()\n    }\n  },\n\n  /** @returns {void} - Listener for 'seeked' event. */\n  seekedListener: function () {\n    this.fireSeekEnd()\n  },\n\n  /** @returns {void}\n   * @param {Object} e - object with the payload with states.\n   * - Listener for 'player_state_changed' event. */\n  stateChangeListener: function (e) {\n    if (e.payload.newState.type === this.player.State.BUFFERING) {\n      if (this.initialPlayhead !== this.getPlayhead()) {\n        this.fireBufferBegin()\n      }\n    }\n    if (e.payload.oldState.type === this.player.State.BUFFERING) {\n      this.fireBufferEnd()\n    }\n  },\n\n  /** @returns {void} - Listener for 'ended' event. */\n  endedListener: function () {\n    if (!this.stopBlockedByAds) {\n      this.fireStop()\n      this.reset()\n    }\n  },\n\n  /** @returns {void} - Listener for 'ended' event. */\n  forceEndedListener: function () {\n    this.fireStop()\n    this.reset()\n  },\n\n  /** @returns {void} - Listener for 'ad_loaded' event. */\n  adLoadedListener: function () {\n    this.playListener()\n    this.stopBlockedByAds = true\n    if (!this.plugin.getAdsAdapter()) {\n      this.plugin.setAdsAdapter(new youbora.adapters.Kaltura.NativeAdsAdapter(this.player))\n    }\n  },\n\n  reset: function () {\n    this.stopBlockedByAds = false\n    this.initialPlayhead = null\n  }\n},\n  {\n    NativeAdsAdapter: require('./ads/nativeads'),\n  }\n)\n\nmodule.exports = youbora.adapters.Kaltura\n\n\n\n// WEBPACK FOOTER //\n// ./adapter/adapter.js","var youbora = require('youboralib')\n\nvar NativeAdsAdapter = youbora.Adapter.extend({\n  /**  @returns {String} - current plugin version */\n  getVersion: function () {\n    return \"6.2.0-kaltura-ads\"\n  },\n\n  /**  @returns {Number} - current playhead of the video */\n  getPlayhead: function () {\n    return this.currentTime\n  },\n\n  /**  @returns {Number} - video duration */\n  getDuration: function () {\n    return this.duration\n  },\n\n  /**  @returns {String} - current ad position (only ads) */\n  getPosition: function () {\n    if (!this.plugin.getAdapter().flags.isJoined) {\n      return 'pre'\n    } else if (!this.plugin.getAdapter().isLive() && this.plugin.getAdapter().getPlayhead() > this.plugin.getAdapter().getDuration() - 1) {\n      return 'post'\n    }\n    return 'mid'\n  },\n\n  /**  @returns {void} - Register listeners to this.player. */\n  registerListeners: function () {\n    this.monitorPlayhead(true, false) //playhead monitor for bufferunderrun\n\n    var Event = this.player.Event\n    // Register listeners\n    this.references = []\n    this.references[Event.AD_LOADED] = this.startAdListener.bind(this)\n    this.references[Event.AD_STARTED] = this.startAdListener.bind(this)\n    this.references[Event.AD_RESUMED] = this.resumeAdListener.bind(this)\n    this.references[Event.AD_PAUSED] = this.pauseAdListener.bind(this)\n    this.references[Event.AD_CLICKED] = this.clickAdListener.bind(this)\n    this.references[Event.AD_SKIPPED] = this.skipAdListener.bind(this)\n    this.references[Event.AD_COMPLETED] = this.stopAdListener.bind(this)\n    this.references[Event.AD_ERROR] = this.errorAdListener.bind(this)\n    this.references[Event.AD_PROGRESS] = this.progressAdListener.bind(this)\n    this.references[Event.ALL_ADS_COMPLETED] = this.allAdsCompletedListener.bind(this)\n\n    for (var key in this.references) {\n      this.player.addEventListener(key, this.references[key])\n    }\n  },\n\n  /**  @returns {void} - Unregister listeners to this.player. */\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    if (this.player && this.references) {\n      for (var key in this.references) {\n        this.player.removeEventListener(key, this.references[key])\n      }\n      this.references = []\n    }\n  },\n\n  startAdListener: function (event) {\n\n    debugger\n    this.fireStart()\n  },\n\n  stopAdListener: function () {\n    this.fireStop()\n    this.currentTime = null\n    this.duration = null\n  },\n\n  resumeAdListener: function () {\n    this.fireResume()\n  },\n\n  pauseAdListener: function () {\n    this.firePause()\n  },\n\n  clickAdListener: function () {\n    this.fireClick()\n  },\n\n  skipAdListener: function () {\n    this.fireStop({ skipped: true })\n    this.currentTime = null\n    this.duration = null\n  },\n\n  errorAdListener: function () {\n    this.fireError()\n  },\n\n  allAdsCompletedListener: function () {\n    this.fireStop()\n    this.plugin.getAdapter().stopBlockedByAds = false\n    if (this.getPosition() === \"post\") this.plugin.getAdapter().fireStop()\n  },\n\n  progressAdListener: function (e) {\n    this.currentTime = e.payload.adProgress.currentTime\n    this.duration = e.payload.adProgress.duration\n    this.fireJoin()\n    this.monitor.skipNextTick()\n  }\n})\n\nmodule.exports = NativeAdsAdapter\n\n\n\n// WEBPACK FOOTER //\n// ./adapter/ads/nativeads.js"],"sourceRoot":""}